
Comitas_hackathon_CMSIS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000044a8  08000130  08000130  00001130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000418  080045d8  080045d8  000055d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080049f0  080049f0  000061cc  2**0
                  CONTENTS
  4 .ARM          00000008  080049f0  080049f0  000059f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080049f8  080049f8  000061cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080049f8  080049f8  000059f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080049fc  080049fc  000059fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08004a00  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003a8  200001cc  08004bcc  000061cc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000574  08004bcc  00006574  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000061cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002dbe  00000000  00000000  000061f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e1d  00000000  00000000  00008fb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000308  00000000  00000000  00009dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000021e  00000000  00000000  0000a0d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000122b5  00000000  00000000  0000a2f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000482e  00000000  00000000  0001c5ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000598b7  00000000  00000000  00020dd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0007a690  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001ad0  00000000  00000000  0007a6d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007c  00000000  00000000  0007c1a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001cc 	.word	0x200001cc
 800014c:	00000000 	.word	0x00000000
 8000150:	080045c0 	.word	0x080045c0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001d0 	.word	0x200001d0
 800016c:	080045c0 	.word	0x080045c0

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_fmul>:
 8000180:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000184:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000188:	bf1e      	ittt	ne
 800018a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800018e:	ea92 0f0c 	teqne	r2, ip
 8000192:	ea93 0f0c 	teqne	r3, ip
 8000196:	d06f      	beq.n	8000278 <__aeabi_fmul+0xf8>
 8000198:	441a      	add	r2, r3
 800019a:	ea80 0c01 	eor.w	ip, r0, r1
 800019e:	0240      	lsls	r0, r0, #9
 80001a0:	bf18      	it	ne
 80001a2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80001a6:	d01e      	beq.n	80001e6 <__aeabi_fmul+0x66>
 80001a8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80001ac:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80001b0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80001b4:	fba0 3101 	umull	r3, r1, r0, r1
 80001b8:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80001bc:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80001c0:	bf3e      	ittt	cc
 80001c2:	0049      	lslcc	r1, r1, #1
 80001c4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80001c8:	005b      	lslcc	r3, r3, #1
 80001ca:	ea40 0001 	orr.w	r0, r0, r1
 80001ce:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80001d2:	2afd      	cmp	r2, #253	@ 0xfd
 80001d4:	d81d      	bhi.n	8000212 <__aeabi_fmul+0x92>
 80001d6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80001da:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001de:	bf08      	it	eq
 80001e0:	f020 0001 	biceq.w	r0, r0, #1
 80001e4:	4770      	bx	lr
 80001e6:	f090 0f00 	teq	r0, #0
 80001ea:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80001ee:	bf08      	it	eq
 80001f0:	0249      	lsleq	r1, r1, #9
 80001f2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001f6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001fa:	3a7f      	subs	r2, #127	@ 0x7f
 80001fc:	bfc2      	ittt	gt
 80001fe:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000202:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000206:	4770      	bxgt	lr
 8000208:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 800020c:	f04f 0300 	mov.w	r3, #0
 8000210:	3a01      	subs	r2, #1
 8000212:	dc5d      	bgt.n	80002d0 <__aeabi_fmul+0x150>
 8000214:	f112 0f19 	cmn.w	r2, #25
 8000218:	bfdc      	itt	le
 800021a:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 800021e:	4770      	bxle	lr
 8000220:	f1c2 0200 	rsb	r2, r2, #0
 8000224:	0041      	lsls	r1, r0, #1
 8000226:	fa21 f102 	lsr.w	r1, r1, r2
 800022a:	f1c2 0220 	rsb	r2, r2, #32
 800022e:	fa00 fc02 	lsl.w	ip, r0, r2
 8000232:	ea5f 0031 	movs.w	r0, r1, rrx
 8000236:	f140 0000 	adc.w	r0, r0, #0
 800023a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800023e:	bf08      	it	eq
 8000240:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000244:	4770      	bx	lr
 8000246:	f092 0f00 	teq	r2, #0
 800024a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800024e:	bf02      	ittt	eq
 8000250:	0040      	lsleq	r0, r0, #1
 8000252:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000256:	3a01      	subeq	r2, #1
 8000258:	d0f9      	beq.n	800024e <__aeabi_fmul+0xce>
 800025a:	ea40 000c 	orr.w	r0, r0, ip
 800025e:	f093 0f00 	teq	r3, #0
 8000262:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000266:	bf02      	ittt	eq
 8000268:	0049      	lsleq	r1, r1, #1
 800026a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800026e:	3b01      	subeq	r3, #1
 8000270:	d0f9      	beq.n	8000266 <__aeabi_fmul+0xe6>
 8000272:	ea41 010c 	orr.w	r1, r1, ip
 8000276:	e78f      	b.n	8000198 <__aeabi_fmul+0x18>
 8000278:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800027c:	ea92 0f0c 	teq	r2, ip
 8000280:	bf18      	it	ne
 8000282:	ea93 0f0c 	teqne	r3, ip
 8000286:	d00a      	beq.n	800029e <__aeabi_fmul+0x11e>
 8000288:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 800028c:	bf18      	it	ne
 800028e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000292:	d1d8      	bne.n	8000246 <__aeabi_fmul+0xc6>
 8000294:	ea80 0001 	eor.w	r0, r0, r1
 8000298:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 800029c:	4770      	bx	lr
 800029e:	f090 0f00 	teq	r0, #0
 80002a2:	bf17      	itett	ne
 80002a4:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 80002a8:	4608      	moveq	r0, r1
 80002aa:	f091 0f00 	teqne	r1, #0
 80002ae:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 80002b2:	d014      	beq.n	80002de <__aeabi_fmul+0x15e>
 80002b4:	ea92 0f0c 	teq	r2, ip
 80002b8:	d101      	bne.n	80002be <__aeabi_fmul+0x13e>
 80002ba:	0242      	lsls	r2, r0, #9
 80002bc:	d10f      	bne.n	80002de <__aeabi_fmul+0x15e>
 80002be:	ea93 0f0c 	teq	r3, ip
 80002c2:	d103      	bne.n	80002cc <__aeabi_fmul+0x14c>
 80002c4:	024b      	lsls	r3, r1, #9
 80002c6:	bf18      	it	ne
 80002c8:	4608      	movne	r0, r1
 80002ca:	d108      	bne.n	80002de <__aeabi_fmul+0x15e>
 80002cc:	ea80 0001 	eor.w	r0, r0, r1
 80002d0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80002d4:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80002d8:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80002dc:	4770      	bx	lr
 80002de:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80002e2:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80002e6:	4770      	bx	lr

080002e8 <__aeabi_drsub>:
 80002e8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002ec:	e002      	b.n	80002f4 <__adddf3>
 80002ee:	bf00      	nop

080002f0 <__aeabi_dsub>:
 80002f0:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002f4 <__adddf3>:
 80002f4:	b530      	push	{r4, r5, lr}
 80002f6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002fa:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002fe:	ea94 0f05 	teq	r4, r5
 8000302:	bf08      	it	eq
 8000304:	ea90 0f02 	teqeq	r0, r2
 8000308:	bf1f      	itttt	ne
 800030a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800030e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000312:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000316:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800031a:	f000 80e2 	beq.w	80004e2 <__adddf3+0x1ee>
 800031e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000322:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000326:	bfb8      	it	lt
 8000328:	426d      	neglt	r5, r5
 800032a:	dd0c      	ble.n	8000346 <__adddf3+0x52>
 800032c:	442c      	add	r4, r5
 800032e:	ea80 0202 	eor.w	r2, r0, r2
 8000332:	ea81 0303 	eor.w	r3, r1, r3
 8000336:	ea82 0000 	eor.w	r0, r2, r0
 800033a:	ea83 0101 	eor.w	r1, r3, r1
 800033e:	ea80 0202 	eor.w	r2, r0, r2
 8000342:	ea81 0303 	eor.w	r3, r1, r3
 8000346:	2d36      	cmp	r5, #54	@ 0x36
 8000348:	bf88      	it	hi
 800034a:	bd30      	pophi	{r4, r5, pc}
 800034c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000350:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000354:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000358:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800035c:	d002      	beq.n	8000364 <__adddf3+0x70>
 800035e:	4240      	negs	r0, r0
 8000360:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000364:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000368:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800036c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000370:	d002      	beq.n	8000378 <__adddf3+0x84>
 8000372:	4252      	negs	r2, r2
 8000374:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000378:	ea94 0f05 	teq	r4, r5
 800037c:	f000 80a7 	beq.w	80004ce <__adddf3+0x1da>
 8000380:	f1a4 0401 	sub.w	r4, r4, #1
 8000384:	f1d5 0e20 	rsbs	lr, r5, #32
 8000388:	db0d      	blt.n	80003a6 <__adddf3+0xb2>
 800038a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800038e:	fa22 f205 	lsr.w	r2, r2, r5
 8000392:	1880      	adds	r0, r0, r2
 8000394:	f141 0100 	adc.w	r1, r1, #0
 8000398:	fa03 f20e 	lsl.w	r2, r3, lr
 800039c:	1880      	adds	r0, r0, r2
 800039e:	fa43 f305 	asr.w	r3, r3, r5
 80003a2:	4159      	adcs	r1, r3
 80003a4:	e00e      	b.n	80003c4 <__adddf3+0xd0>
 80003a6:	f1a5 0520 	sub.w	r5, r5, #32
 80003aa:	f10e 0e20 	add.w	lr, lr, #32
 80003ae:	2a01      	cmp	r2, #1
 80003b0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003b4:	bf28      	it	cs
 80003b6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003ba:	fa43 f305 	asr.w	r3, r3, r5
 80003be:	18c0      	adds	r0, r0, r3
 80003c0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003c4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003c8:	d507      	bpl.n	80003da <__adddf3+0xe6>
 80003ca:	f04f 0e00 	mov.w	lr, #0
 80003ce:	f1dc 0c00 	rsbs	ip, ip, #0
 80003d2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003d6:	eb6e 0101 	sbc.w	r1, lr, r1
 80003da:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003de:	d31b      	bcc.n	8000418 <__adddf3+0x124>
 80003e0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003e4:	d30c      	bcc.n	8000400 <__adddf3+0x10c>
 80003e6:	0849      	lsrs	r1, r1, #1
 80003e8:	ea5f 0030 	movs.w	r0, r0, rrx
 80003ec:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003f0:	f104 0401 	add.w	r4, r4, #1
 80003f4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003f8:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003fc:	f080 809a 	bcs.w	8000534 <__adddf3+0x240>
 8000400:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000404:	bf08      	it	eq
 8000406:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800040a:	f150 0000 	adcs.w	r0, r0, #0
 800040e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000412:	ea41 0105 	orr.w	r1, r1, r5
 8000416:	bd30      	pop	{r4, r5, pc}
 8000418:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800041c:	4140      	adcs	r0, r0
 800041e:	eb41 0101 	adc.w	r1, r1, r1
 8000422:	3c01      	subs	r4, #1
 8000424:	bf28      	it	cs
 8000426:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800042a:	d2e9      	bcs.n	8000400 <__adddf3+0x10c>
 800042c:	f091 0f00 	teq	r1, #0
 8000430:	bf04      	itt	eq
 8000432:	4601      	moveq	r1, r0
 8000434:	2000      	moveq	r0, #0
 8000436:	fab1 f381 	clz	r3, r1
 800043a:	bf08      	it	eq
 800043c:	3320      	addeq	r3, #32
 800043e:	f1a3 030b 	sub.w	r3, r3, #11
 8000442:	f1b3 0220 	subs.w	r2, r3, #32
 8000446:	da0c      	bge.n	8000462 <__adddf3+0x16e>
 8000448:	320c      	adds	r2, #12
 800044a:	dd08      	ble.n	800045e <__adddf3+0x16a>
 800044c:	f102 0c14 	add.w	ip, r2, #20
 8000450:	f1c2 020c 	rsb	r2, r2, #12
 8000454:	fa01 f00c 	lsl.w	r0, r1, ip
 8000458:	fa21 f102 	lsr.w	r1, r1, r2
 800045c:	e00c      	b.n	8000478 <__adddf3+0x184>
 800045e:	f102 0214 	add.w	r2, r2, #20
 8000462:	bfd8      	it	le
 8000464:	f1c2 0c20 	rsble	ip, r2, #32
 8000468:	fa01 f102 	lsl.w	r1, r1, r2
 800046c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000470:	bfdc      	itt	le
 8000472:	ea41 010c 	orrle.w	r1, r1, ip
 8000476:	4090      	lslle	r0, r2
 8000478:	1ae4      	subs	r4, r4, r3
 800047a:	bfa2      	ittt	ge
 800047c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000480:	4329      	orrge	r1, r5
 8000482:	bd30      	popge	{r4, r5, pc}
 8000484:	ea6f 0404 	mvn.w	r4, r4
 8000488:	3c1f      	subs	r4, #31
 800048a:	da1c      	bge.n	80004c6 <__adddf3+0x1d2>
 800048c:	340c      	adds	r4, #12
 800048e:	dc0e      	bgt.n	80004ae <__adddf3+0x1ba>
 8000490:	f104 0414 	add.w	r4, r4, #20
 8000494:	f1c4 0220 	rsb	r2, r4, #32
 8000498:	fa20 f004 	lsr.w	r0, r0, r4
 800049c:	fa01 f302 	lsl.w	r3, r1, r2
 80004a0:	ea40 0003 	orr.w	r0, r0, r3
 80004a4:	fa21 f304 	lsr.w	r3, r1, r4
 80004a8:	ea45 0103 	orr.w	r1, r5, r3
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	f1c4 040c 	rsb	r4, r4, #12
 80004b2:	f1c4 0220 	rsb	r2, r4, #32
 80004b6:	fa20 f002 	lsr.w	r0, r0, r2
 80004ba:	fa01 f304 	lsl.w	r3, r1, r4
 80004be:	ea40 0003 	orr.w	r0, r0, r3
 80004c2:	4629      	mov	r1, r5
 80004c4:	bd30      	pop	{r4, r5, pc}
 80004c6:	fa21 f004 	lsr.w	r0, r1, r4
 80004ca:	4629      	mov	r1, r5
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	f094 0f00 	teq	r4, #0
 80004d2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004d6:	bf06      	itte	eq
 80004d8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004dc:	3401      	addeq	r4, #1
 80004de:	3d01      	subne	r5, #1
 80004e0:	e74e      	b.n	8000380 <__adddf3+0x8c>
 80004e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004e6:	bf18      	it	ne
 80004e8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004ec:	d029      	beq.n	8000542 <__adddf3+0x24e>
 80004ee:	ea94 0f05 	teq	r4, r5
 80004f2:	bf08      	it	eq
 80004f4:	ea90 0f02 	teqeq	r0, r2
 80004f8:	d005      	beq.n	8000506 <__adddf3+0x212>
 80004fa:	ea54 0c00 	orrs.w	ip, r4, r0
 80004fe:	bf04      	itt	eq
 8000500:	4619      	moveq	r1, r3
 8000502:	4610      	moveq	r0, r2
 8000504:	bd30      	pop	{r4, r5, pc}
 8000506:	ea91 0f03 	teq	r1, r3
 800050a:	bf1e      	ittt	ne
 800050c:	2100      	movne	r1, #0
 800050e:	2000      	movne	r0, #0
 8000510:	bd30      	popne	{r4, r5, pc}
 8000512:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000516:	d105      	bne.n	8000524 <__adddf3+0x230>
 8000518:	0040      	lsls	r0, r0, #1
 800051a:	4149      	adcs	r1, r1
 800051c:	bf28      	it	cs
 800051e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000522:	bd30      	pop	{r4, r5, pc}
 8000524:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000528:	bf3c      	itt	cc
 800052a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800052e:	bd30      	popcc	{r4, r5, pc}
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000534:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000538:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800053c:	f04f 0000 	mov.w	r0, #0
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000546:	bf1a      	itte	ne
 8000548:	4619      	movne	r1, r3
 800054a:	4610      	movne	r0, r2
 800054c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000550:	bf1c      	itt	ne
 8000552:	460b      	movne	r3, r1
 8000554:	4602      	movne	r2, r0
 8000556:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800055a:	bf06      	itte	eq
 800055c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000560:	ea91 0f03 	teqeq	r1, r3
 8000564:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000568:	bd30      	pop	{r4, r5, pc}
 800056a:	bf00      	nop

0800056c <__aeabi_ui2d>:
 800056c:	f090 0f00 	teq	r0, #0
 8000570:	bf04      	itt	eq
 8000572:	2100      	moveq	r1, #0
 8000574:	4770      	bxeq	lr
 8000576:	b530      	push	{r4, r5, lr}
 8000578:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800057c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000580:	f04f 0500 	mov.w	r5, #0
 8000584:	f04f 0100 	mov.w	r1, #0
 8000588:	e750      	b.n	800042c <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_i2d>:
 800058c:	f090 0f00 	teq	r0, #0
 8000590:	bf04      	itt	eq
 8000592:	2100      	moveq	r1, #0
 8000594:	4770      	bxeq	lr
 8000596:	b530      	push	{r4, r5, lr}
 8000598:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800059c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005a0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80005a4:	bf48      	it	mi
 80005a6:	4240      	negmi	r0, r0
 80005a8:	f04f 0100 	mov.w	r1, #0
 80005ac:	e73e      	b.n	800042c <__adddf3+0x138>
 80005ae:	bf00      	nop

080005b0 <__aeabi_f2d>:
 80005b0:	0042      	lsls	r2, r0, #1
 80005b2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005b6:	ea4f 0131 	mov.w	r1, r1, rrx
 80005ba:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005be:	bf1f      	itttt	ne
 80005c0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005c4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005c8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005cc:	4770      	bxne	lr
 80005ce:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005d2:	bf08      	it	eq
 80005d4:	4770      	bxeq	lr
 80005d6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005da:	bf04      	itt	eq
 80005dc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005e0:	4770      	bxeq	lr
 80005e2:	b530      	push	{r4, r5, lr}
 80005e4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005ec:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f0:	e71c      	b.n	800042c <__adddf3+0x138>
 80005f2:	bf00      	nop

080005f4 <__aeabi_ul2d>:
 80005f4:	ea50 0201 	orrs.w	r2, r0, r1
 80005f8:	bf08      	it	eq
 80005fa:	4770      	bxeq	lr
 80005fc:	b530      	push	{r4, r5, lr}
 80005fe:	f04f 0500 	mov.w	r5, #0
 8000602:	e00a      	b.n	800061a <__aeabi_l2d+0x16>

08000604 <__aeabi_l2d>:
 8000604:	ea50 0201 	orrs.w	r2, r0, r1
 8000608:	bf08      	it	eq
 800060a:	4770      	bxeq	lr
 800060c:	b530      	push	{r4, r5, lr}
 800060e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000612:	d502      	bpl.n	800061a <__aeabi_l2d+0x16>
 8000614:	4240      	negs	r0, r0
 8000616:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800061a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800061e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000622:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000626:	f43f aed8 	beq.w	80003da <__adddf3+0xe6>
 800062a:	f04f 0203 	mov.w	r2, #3
 800062e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000632:	bf18      	it	ne
 8000634:	3203      	addne	r2, #3
 8000636:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800063a:	bf18      	it	ne
 800063c:	3203      	addne	r2, #3
 800063e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000642:	f1c2 0320 	rsb	r3, r2, #32
 8000646:	fa00 fc03 	lsl.w	ip, r0, r3
 800064a:	fa20 f002 	lsr.w	r0, r0, r2
 800064e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000652:	ea40 000e 	orr.w	r0, r0, lr
 8000656:	fa21 f102 	lsr.w	r1, r1, r2
 800065a:	4414      	add	r4, r2
 800065c:	e6bd      	b.n	80003da <__adddf3+0xe6>
 800065e:	bf00      	nop

08000660 <__aeabi_dmul>:
 8000660:	b570      	push	{r4, r5, r6, lr}
 8000662:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000666:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800066a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800066e:	bf1d      	ittte	ne
 8000670:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000674:	ea94 0f0c 	teqne	r4, ip
 8000678:	ea95 0f0c 	teqne	r5, ip
 800067c:	f000 f8de 	bleq	800083c <__aeabi_dmul+0x1dc>
 8000680:	442c      	add	r4, r5
 8000682:	ea81 0603 	eor.w	r6, r1, r3
 8000686:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800068a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800068e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000692:	bf18      	it	ne
 8000694:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000698:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800069c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80006a0:	d038      	beq.n	8000714 <__aeabi_dmul+0xb4>
 80006a2:	fba0 ce02 	umull	ip, lr, r0, r2
 80006a6:	f04f 0500 	mov.w	r5, #0
 80006aa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80006ae:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80006b2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006b6:	f04f 0600 	mov.w	r6, #0
 80006ba:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006be:	f09c 0f00 	teq	ip, #0
 80006c2:	bf18      	it	ne
 80006c4:	f04e 0e01 	orrne.w	lr, lr, #1
 80006c8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006cc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006d0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006d4:	d204      	bcs.n	80006e0 <__aeabi_dmul+0x80>
 80006d6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006da:	416d      	adcs	r5, r5
 80006dc:	eb46 0606 	adc.w	r6, r6, r6
 80006e0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006e4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006e8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006ec:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006f0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006f4:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006f8:	bf88      	it	hi
 80006fa:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006fe:	d81e      	bhi.n	800073e <__aeabi_dmul+0xde>
 8000700:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000704:	bf08      	it	eq
 8000706:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800070a:	f150 0000 	adcs.w	r0, r0, #0
 800070e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000718:	ea46 0101 	orr.w	r1, r6, r1
 800071c:	ea40 0002 	orr.w	r0, r0, r2
 8000720:	ea81 0103 	eor.w	r1, r1, r3
 8000724:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000728:	bfc2      	ittt	gt
 800072a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800072e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000732:	bd70      	popgt	{r4, r5, r6, pc}
 8000734:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000738:	f04f 0e00 	mov.w	lr, #0
 800073c:	3c01      	subs	r4, #1
 800073e:	f300 80ab 	bgt.w	8000898 <__aeabi_dmul+0x238>
 8000742:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000746:	bfde      	ittt	le
 8000748:	2000      	movle	r0, #0
 800074a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800074e:	bd70      	pople	{r4, r5, r6, pc}
 8000750:	f1c4 0400 	rsb	r4, r4, #0
 8000754:	3c20      	subs	r4, #32
 8000756:	da35      	bge.n	80007c4 <__aeabi_dmul+0x164>
 8000758:	340c      	adds	r4, #12
 800075a:	dc1b      	bgt.n	8000794 <__aeabi_dmul+0x134>
 800075c:	f104 0414 	add.w	r4, r4, #20
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f305 	lsl.w	r3, r0, r5
 8000768:	fa20 f004 	lsr.w	r0, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000778:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000780:	fa21 f604 	lsr.w	r6, r1, r4
 8000784:	eb42 0106 	adc.w	r1, r2, r6
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f1c4 040c 	rsb	r4, r4, #12
 8000798:	f1c4 0520 	rsb	r5, r4, #32
 800079c:	fa00 f304 	lsl.w	r3, r0, r4
 80007a0:	fa20 f005 	lsr.w	r0, r0, r5
 80007a4:	fa01 f204 	lsl.w	r2, r1, r4
 80007a8:	ea40 0002 	orr.w	r0, r0, r2
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007b0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007b4:	f141 0100 	adc.w	r1, r1, #0
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f1c4 0520 	rsb	r5, r4, #32
 80007c8:	fa00 f205 	lsl.w	r2, r0, r5
 80007cc:	ea4e 0e02 	orr.w	lr, lr, r2
 80007d0:	fa20 f304 	lsr.w	r3, r0, r4
 80007d4:	fa01 f205 	lsl.w	r2, r1, r5
 80007d8:	ea43 0302 	orr.w	r3, r3, r2
 80007dc:	fa21 f004 	lsr.w	r0, r1, r4
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007e4:	fa21 f204 	lsr.w	r2, r1, r4
 80007e8:	ea20 0002 	bic.w	r0, r0, r2
 80007ec:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007f4:	bf08      	it	eq
 80007f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007fa:	bd70      	pop	{r4, r5, r6, pc}
 80007fc:	f094 0f00 	teq	r4, #0
 8000800:	d10f      	bne.n	8000822 <__aeabi_dmul+0x1c2>
 8000802:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000806:	0040      	lsls	r0, r0, #1
 8000808:	eb41 0101 	adc.w	r1, r1, r1
 800080c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000810:	bf08      	it	eq
 8000812:	3c01      	subeq	r4, #1
 8000814:	d0f7      	beq.n	8000806 <__aeabi_dmul+0x1a6>
 8000816:	ea41 0106 	orr.w	r1, r1, r6
 800081a:	f095 0f00 	teq	r5, #0
 800081e:	bf18      	it	ne
 8000820:	4770      	bxne	lr
 8000822:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000826:	0052      	lsls	r2, r2, #1
 8000828:	eb43 0303 	adc.w	r3, r3, r3
 800082c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000830:	bf08      	it	eq
 8000832:	3d01      	subeq	r5, #1
 8000834:	d0f7      	beq.n	8000826 <__aeabi_dmul+0x1c6>
 8000836:	ea43 0306 	orr.w	r3, r3, r6
 800083a:	4770      	bx	lr
 800083c:	ea94 0f0c 	teq	r4, ip
 8000840:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000844:	bf18      	it	ne
 8000846:	ea95 0f0c 	teqne	r5, ip
 800084a:	d00c      	beq.n	8000866 <__aeabi_dmul+0x206>
 800084c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000850:	bf18      	it	ne
 8000852:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000856:	d1d1      	bne.n	80007fc <__aeabi_dmul+0x19c>
 8000858:	ea81 0103 	eor.w	r1, r1, r3
 800085c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000860:	f04f 0000 	mov.w	r0, #0
 8000864:	bd70      	pop	{r4, r5, r6, pc}
 8000866:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800086a:	bf06      	itte	eq
 800086c:	4610      	moveq	r0, r2
 800086e:	4619      	moveq	r1, r3
 8000870:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000874:	d019      	beq.n	80008aa <__aeabi_dmul+0x24a>
 8000876:	ea94 0f0c 	teq	r4, ip
 800087a:	d102      	bne.n	8000882 <__aeabi_dmul+0x222>
 800087c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000880:	d113      	bne.n	80008aa <__aeabi_dmul+0x24a>
 8000882:	ea95 0f0c 	teq	r5, ip
 8000886:	d105      	bne.n	8000894 <__aeabi_dmul+0x234>
 8000888:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800088c:	bf1c      	itt	ne
 800088e:	4610      	movne	r0, r2
 8000890:	4619      	movne	r1, r3
 8000892:	d10a      	bne.n	80008aa <__aeabi_dmul+0x24a>
 8000894:	ea81 0103 	eor.w	r1, r1, r3
 8000898:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800089c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80008a0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80008a4:	f04f 0000 	mov.w	r0, #0
 80008a8:	bd70      	pop	{r4, r5, r6, pc}
 80008aa:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80008ae:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80008b2:	bd70      	pop	{r4, r5, r6, pc}

080008b4 <__aeabi_ddiv>:
 80008b4:	b570      	push	{r4, r5, r6, lr}
 80008b6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80008ba:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80008be:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008c2:	bf1d      	ittte	ne
 80008c4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008c8:	ea94 0f0c 	teqne	r4, ip
 80008cc:	ea95 0f0c 	teqne	r5, ip
 80008d0:	f000 f8a7 	bleq	8000a22 <__aeabi_ddiv+0x16e>
 80008d4:	eba4 0405 	sub.w	r4, r4, r5
 80008d8:	ea81 0e03 	eor.w	lr, r1, r3
 80008dc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008e4:	f000 8088 	beq.w	80009f8 <__aeabi_ddiv+0x144>
 80008e8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008ec:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008f0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008f4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008f8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008fc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000900:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000904:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000908:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800090c:	429d      	cmp	r5, r3
 800090e:	bf08      	it	eq
 8000910:	4296      	cmpeq	r6, r2
 8000912:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000916:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800091a:	d202      	bcs.n	8000922 <__aeabi_ddiv+0x6e>
 800091c:	085b      	lsrs	r3, r3, #1
 800091e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000922:	1ab6      	subs	r6, r6, r2
 8000924:	eb65 0503 	sbc.w	r5, r5, r3
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000932:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 000c 	orrcs.w	r0, r0, ip
 8000948:	085b      	lsrs	r3, r3, #1
 800094a:	ea4f 0232 	mov.w	r2, r2, rrx
 800094e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000952:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000956:	bf22      	ittt	cs
 8000958:	1ab6      	subcs	r6, r6, r2
 800095a:	4675      	movcs	r5, lr
 800095c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000960:	085b      	lsrs	r3, r3, #1
 8000962:	ea4f 0232 	mov.w	r2, r2, rrx
 8000966:	ebb6 0e02 	subs.w	lr, r6, r2
 800096a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800096e:	bf22      	ittt	cs
 8000970:	1ab6      	subcs	r6, r6, r2
 8000972:	4675      	movcs	r5, lr
 8000974:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000978:	085b      	lsrs	r3, r3, #1
 800097a:	ea4f 0232 	mov.w	r2, r2, rrx
 800097e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000982:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000986:	bf22      	ittt	cs
 8000988:	1ab6      	subcs	r6, r6, r2
 800098a:	4675      	movcs	r5, lr
 800098c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000990:	ea55 0e06 	orrs.w	lr, r5, r6
 8000994:	d018      	beq.n	80009c8 <__aeabi_ddiv+0x114>
 8000996:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800099a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800099e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80009a2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80009a6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80009aa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80009ae:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80009b2:	d1c0      	bne.n	8000936 <__aeabi_ddiv+0x82>
 80009b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009b8:	d10b      	bne.n	80009d2 <__aeabi_ddiv+0x11e>
 80009ba:	ea41 0100 	orr.w	r1, r1, r0
 80009be:	f04f 0000 	mov.w	r0, #0
 80009c2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009c6:	e7b6      	b.n	8000936 <__aeabi_ddiv+0x82>
 80009c8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009cc:	bf04      	itt	eq
 80009ce:	4301      	orreq	r1, r0
 80009d0:	2000      	moveq	r0, #0
 80009d2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009d6:	bf88      	it	hi
 80009d8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009dc:	f63f aeaf 	bhi.w	800073e <__aeabi_dmul+0xde>
 80009e0:	ebb5 0c03 	subs.w	ip, r5, r3
 80009e4:	bf04      	itt	eq
 80009e6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009ee:	f150 0000 	adcs.w	r0, r0, #0
 80009f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009f6:	bd70      	pop	{r4, r5, r6, pc}
 80009f8:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009fc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a00:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a04:	bfc2      	ittt	gt
 8000a06:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a0a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a0e:	bd70      	popgt	{r4, r5, r6, pc}
 8000a10:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000a14:	f04f 0e00 	mov.w	lr, #0
 8000a18:	3c01      	subs	r4, #1
 8000a1a:	e690      	b.n	800073e <__aeabi_dmul+0xde>
 8000a1c:	ea45 0e06 	orr.w	lr, r5, r6
 8000a20:	e68d      	b.n	800073e <__aeabi_dmul+0xde>
 8000a22:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a26:	ea94 0f0c 	teq	r4, ip
 8000a2a:	bf08      	it	eq
 8000a2c:	ea95 0f0c 	teqeq	r5, ip
 8000a30:	f43f af3b 	beq.w	80008aa <__aeabi_dmul+0x24a>
 8000a34:	ea94 0f0c 	teq	r4, ip
 8000a38:	d10a      	bne.n	8000a50 <__aeabi_ddiv+0x19c>
 8000a3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a3e:	f47f af34 	bne.w	80008aa <__aeabi_dmul+0x24a>
 8000a42:	ea95 0f0c 	teq	r5, ip
 8000a46:	f47f af25 	bne.w	8000894 <__aeabi_dmul+0x234>
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4619      	mov	r1, r3
 8000a4e:	e72c      	b.n	80008aa <__aeabi_dmul+0x24a>
 8000a50:	ea95 0f0c 	teq	r5, ip
 8000a54:	d106      	bne.n	8000a64 <__aeabi_ddiv+0x1b0>
 8000a56:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a5a:	f43f aefd 	beq.w	8000858 <__aeabi_dmul+0x1f8>
 8000a5e:	4610      	mov	r0, r2
 8000a60:	4619      	mov	r1, r3
 8000a62:	e722      	b.n	80008aa <__aeabi_dmul+0x24a>
 8000a64:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a68:	bf18      	it	ne
 8000a6a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a6e:	f47f aec5 	bne.w	80007fc <__aeabi_dmul+0x19c>
 8000a72:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a76:	f47f af0d 	bne.w	8000894 <__aeabi_dmul+0x234>
 8000a7a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a7e:	f47f aeeb 	bne.w	8000858 <__aeabi_dmul+0x1f8>
 8000a82:	e712      	b.n	80008aa <__aeabi_dmul+0x24a>

08000a84 <__gedf2>:
 8000a84:	f04f 3cff 	mov.w	ip, #4294967295
 8000a88:	e006      	b.n	8000a98 <__cmpdf2+0x4>
 8000a8a:	bf00      	nop

08000a8c <__ledf2>:
 8000a8c:	f04f 0c01 	mov.w	ip, #1
 8000a90:	e002      	b.n	8000a98 <__cmpdf2+0x4>
 8000a92:	bf00      	nop

08000a94 <__cmpdf2>:
 8000a94:	f04f 0c01 	mov.w	ip, #1
 8000a98:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a9c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa8:	bf18      	it	ne
 8000aaa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000aae:	d01b      	beq.n	8000ae8 <__cmpdf2+0x54>
 8000ab0:	b001      	add	sp, #4
 8000ab2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000ab6:	bf0c      	ite	eq
 8000ab8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000abc:	ea91 0f03 	teqne	r1, r3
 8000ac0:	bf02      	ittt	eq
 8000ac2:	ea90 0f02 	teqeq	r0, r2
 8000ac6:	2000      	moveq	r0, #0
 8000ac8:	4770      	bxeq	lr
 8000aca:	f110 0f00 	cmn.w	r0, #0
 8000ace:	ea91 0f03 	teq	r1, r3
 8000ad2:	bf58      	it	pl
 8000ad4:	4299      	cmppl	r1, r3
 8000ad6:	bf08      	it	eq
 8000ad8:	4290      	cmpeq	r0, r2
 8000ada:	bf2c      	ite	cs
 8000adc:	17d8      	asrcs	r0, r3, #31
 8000ade:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ae2:	f040 0001 	orr.w	r0, r0, #1
 8000ae6:	4770      	bx	lr
 8000ae8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af0:	d102      	bne.n	8000af8 <__cmpdf2+0x64>
 8000af2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000af6:	d107      	bne.n	8000b08 <__cmpdf2+0x74>
 8000af8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000afc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b00:	d1d6      	bne.n	8000ab0 <__cmpdf2+0x1c>
 8000b02:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b06:	d0d3      	beq.n	8000ab0 <__cmpdf2+0x1c>
 8000b08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b0c:	4770      	bx	lr
 8000b0e:	bf00      	nop

08000b10 <__aeabi_cdrcmple>:
 8000b10:	4684      	mov	ip, r0
 8000b12:	4610      	mov	r0, r2
 8000b14:	4662      	mov	r2, ip
 8000b16:	468c      	mov	ip, r1
 8000b18:	4619      	mov	r1, r3
 8000b1a:	4663      	mov	r3, ip
 8000b1c:	e000      	b.n	8000b20 <__aeabi_cdcmpeq>
 8000b1e:	bf00      	nop

08000b20 <__aeabi_cdcmpeq>:
 8000b20:	b501      	push	{r0, lr}
 8000b22:	f7ff ffb7 	bl	8000a94 <__cmpdf2>
 8000b26:	2800      	cmp	r0, #0
 8000b28:	bf48      	it	mi
 8000b2a:	f110 0f00 	cmnmi.w	r0, #0
 8000b2e:	bd01      	pop	{r0, pc}

08000b30 <__aeabi_dcmpeq>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff fff4 	bl	8000b20 <__aeabi_cdcmpeq>
 8000b38:	bf0c      	ite	eq
 8000b3a:	2001      	moveq	r0, #1
 8000b3c:	2000      	movne	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmplt>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffea 	bl	8000b20 <__aeabi_cdcmpeq>
 8000b4c:	bf34      	ite	cc
 8000b4e:	2001      	movcc	r0, #1
 8000b50:	2000      	movcs	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmple>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffe0 	bl	8000b20 <__aeabi_cdcmpeq>
 8000b60:	bf94      	ite	ls
 8000b62:	2001      	movls	r0, #1
 8000b64:	2000      	movhi	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpge>:
 8000b6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b70:	f7ff ffce 	bl	8000b10 <__aeabi_cdrcmple>
 8000b74:	bf94      	ite	ls
 8000b76:	2001      	movls	r0, #1
 8000b78:	2000      	movhi	r0, #0
 8000b7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7e:	bf00      	nop

08000b80 <__aeabi_dcmpgt>:
 8000b80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b84:	f7ff ffc4 	bl	8000b10 <__aeabi_cdrcmple>
 8000b88:	bf34      	ite	cc
 8000b8a:	2001      	movcc	r0, #1
 8000b8c:	2000      	movcs	r0, #0
 8000b8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b92:	bf00      	nop

08000b94 <__aeabi_dcmpun>:
 8000b94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b9c:	d102      	bne.n	8000ba4 <__aeabi_dcmpun+0x10>
 8000b9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ba2:	d10a      	bne.n	8000bba <__aeabi_dcmpun+0x26>
 8000ba4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ba8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bac:	d102      	bne.n	8000bb4 <__aeabi_dcmpun+0x20>
 8000bae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000bb2:	d102      	bne.n	8000bba <__aeabi_dcmpun+0x26>
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	f04f 0001 	mov.w	r0, #1
 8000bbe:	4770      	bx	lr

08000bc0 <__aeabi_d2iz>:
 8000bc0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bc4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bc8:	d215      	bcs.n	8000bf6 <__aeabi_d2iz+0x36>
 8000bca:	d511      	bpl.n	8000bf0 <__aeabi_d2iz+0x30>
 8000bcc:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bd0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bd4:	d912      	bls.n	8000bfc <__aeabi_d2iz+0x3c>
 8000bd6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bda:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bde:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000be2:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000be6:	fa23 f002 	lsr.w	r0, r3, r2
 8000bea:	bf18      	it	ne
 8000bec:	4240      	negne	r0, r0
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bfa:	d105      	bne.n	8000c08 <__aeabi_d2iz+0x48>
 8000bfc:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000c00:	bf08      	it	eq
 8000c02:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000c06:	4770      	bx	lr
 8000c08:	f04f 0000 	mov.w	r0, #0
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop

08000c10 <__aeabi_frsub>:
 8000c10:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000c14:	e002      	b.n	8000c1c <__addsf3>
 8000c16:	bf00      	nop

08000c18 <__aeabi_fsub>:
 8000c18:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000c1c <__addsf3>:
 8000c1c:	0042      	lsls	r2, r0, #1
 8000c1e:	bf1f      	itttt	ne
 8000c20:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000c24:	ea92 0f03 	teqne	r2, r3
 8000c28:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000c2c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c30:	d06a      	beq.n	8000d08 <__addsf3+0xec>
 8000c32:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000c36:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000c3a:	bfc1      	itttt	gt
 8000c3c:	18d2      	addgt	r2, r2, r3
 8000c3e:	4041      	eorgt	r1, r0
 8000c40:	4048      	eorgt	r0, r1
 8000c42:	4041      	eorgt	r1, r0
 8000c44:	bfb8      	it	lt
 8000c46:	425b      	neglt	r3, r3
 8000c48:	2b19      	cmp	r3, #25
 8000c4a:	bf88      	it	hi
 8000c4c:	4770      	bxhi	lr
 8000c4e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000c52:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c56:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000c5a:	bf18      	it	ne
 8000c5c:	4240      	negne	r0, r0
 8000c5e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000c62:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000c66:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000c6a:	bf18      	it	ne
 8000c6c:	4249      	negne	r1, r1
 8000c6e:	ea92 0f03 	teq	r2, r3
 8000c72:	d03f      	beq.n	8000cf4 <__addsf3+0xd8>
 8000c74:	f1a2 0201 	sub.w	r2, r2, #1
 8000c78:	fa41 fc03 	asr.w	ip, r1, r3
 8000c7c:	eb10 000c 	adds.w	r0, r0, ip
 8000c80:	f1c3 0320 	rsb	r3, r3, #32
 8000c84:	fa01 f103 	lsl.w	r1, r1, r3
 8000c88:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c8c:	d502      	bpl.n	8000c94 <__addsf3+0x78>
 8000c8e:	4249      	negs	r1, r1
 8000c90:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c94:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c98:	d313      	bcc.n	8000cc2 <__addsf3+0xa6>
 8000c9a:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c9e:	d306      	bcc.n	8000cae <__addsf3+0x92>
 8000ca0:	0840      	lsrs	r0, r0, #1
 8000ca2:	ea4f 0131 	mov.w	r1, r1, rrx
 8000ca6:	f102 0201 	add.w	r2, r2, #1
 8000caa:	2afe      	cmp	r2, #254	@ 0xfe
 8000cac:	d251      	bcs.n	8000d52 <__addsf3+0x136>
 8000cae:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000cb2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000cb6:	bf08      	it	eq
 8000cb8:	f020 0001 	biceq.w	r0, r0, #1
 8000cbc:	ea40 0003 	orr.w	r0, r0, r3
 8000cc0:	4770      	bx	lr
 8000cc2:	0049      	lsls	r1, r1, #1
 8000cc4:	eb40 0000 	adc.w	r0, r0, r0
 8000cc8:	3a01      	subs	r2, #1
 8000cca:	bf28      	it	cs
 8000ccc:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000cd0:	d2ed      	bcs.n	8000cae <__addsf3+0x92>
 8000cd2:	fab0 fc80 	clz	ip, r0
 8000cd6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000cda:	ebb2 020c 	subs.w	r2, r2, ip
 8000cde:	fa00 f00c 	lsl.w	r0, r0, ip
 8000ce2:	bfaa      	itet	ge
 8000ce4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000ce8:	4252      	neglt	r2, r2
 8000cea:	4318      	orrge	r0, r3
 8000cec:	bfbc      	itt	lt
 8000cee:	40d0      	lsrlt	r0, r2
 8000cf0:	4318      	orrlt	r0, r3
 8000cf2:	4770      	bx	lr
 8000cf4:	f092 0f00 	teq	r2, #0
 8000cf8:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000cfc:	bf06      	itte	eq
 8000cfe:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000d02:	3201      	addeq	r2, #1
 8000d04:	3b01      	subne	r3, #1
 8000d06:	e7b5      	b.n	8000c74 <__addsf3+0x58>
 8000d08:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000d0c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000d10:	bf18      	it	ne
 8000d12:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d16:	d021      	beq.n	8000d5c <__addsf3+0x140>
 8000d18:	ea92 0f03 	teq	r2, r3
 8000d1c:	d004      	beq.n	8000d28 <__addsf3+0x10c>
 8000d1e:	f092 0f00 	teq	r2, #0
 8000d22:	bf08      	it	eq
 8000d24:	4608      	moveq	r0, r1
 8000d26:	4770      	bx	lr
 8000d28:	ea90 0f01 	teq	r0, r1
 8000d2c:	bf1c      	itt	ne
 8000d2e:	2000      	movne	r0, #0
 8000d30:	4770      	bxne	lr
 8000d32:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000d36:	d104      	bne.n	8000d42 <__addsf3+0x126>
 8000d38:	0040      	lsls	r0, r0, #1
 8000d3a:	bf28      	it	cs
 8000d3c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000d40:	4770      	bx	lr
 8000d42:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000d46:	bf3c      	itt	cc
 8000d48:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000d4c:	4770      	bxcc	lr
 8000d4e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d52:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000d56:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d5a:	4770      	bx	lr
 8000d5c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000d60:	bf16      	itet	ne
 8000d62:	4608      	movne	r0, r1
 8000d64:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d68:	4601      	movne	r1, r0
 8000d6a:	0242      	lsls	r2, r0, #9
 8000d6c:	bf06      	itte	eq
 8000d6e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d72:	ea90 0f01 	teqeq	r0, r1
 8000d76:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d7a:	4770      	bx	lr

08000d7c <__aeabi_ui2f>:
 8000d7c:	f04f 0300 	mov.w	r3, #0
 8000d80:	e004      	b.n	8000d8c <__aeabi_i2f+0x8>
 8000d82:	bf00      	nop

08000d84 <__aeabi_i2f>:
 8000d84:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d88:	bf48      	it	mi
 8000d8a:	4240      	negmi	r0, r0
 8000d8c:	ea5f 0c00 	movs.w	ip, r0
 8000d90:	bf08      	it	eq
 8000d92:	4770      	bxeq	lr
 8000d94:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d98:	4601      	mov	r1, r0
 8000d9a:	f04f 0000 	mov.w	r0, #0
 8000d9e:	e01c      	b.n	8000dda <__aeabi_l2f+0x2a>

08000da0 <__aeabi_ul2f>:
 8000da0:	ea50 0201 	orrs.w	r2, r0, r1
 8000da4:	bf08      	it	eq
 8000da6:	4770      	bxeq	lr
 8000da8:	f04f 0300 	mov.w	r3, #0
 8000dac:	e00a      	b.n	8000dc4 <__aeabi_l2f+0x14>
 8000dae:	bf00      	nop

08000db0 <__aeabi_l2f>:
 8000db0:	ea50 0201 	orrs.w	r2, r0, r1
 8000db4:	bf08      	it	eq
 8000db6:	4770      	bxeq	lr
 8000db8:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000dbc:	d502      	bpl.n	8000dc4 <__aeabi_l2f+0x14>
 8000dbe:	4240      	negs	r0, r0
 8000dc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000dc4:	ea5f 0c01 	movs.w	ip, r1
 8000dc8:	bf02      	ittt	eq
 8000dca:	4684      	moveq	ip, r0
 8000dcc:	4601      	moveq	r1, r0
 8000dce:	2000      	moveq	r0, #0
 8000dd0:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000dd4:	bf08      	it	eq
 8000dd6:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000dda:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000dde:	fabc f28c 	clz	r2, ip
 8000de2:	3a08      	subs	r2, #8
 8000de4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000de8:	db10      	blt.n	8000e0c <__aeabi_l2f+0x5c>
 8000dea:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dee:	4463      	add	r3, ip
 8000df0:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df4:	f1c2 0220 	rsb	r2, r2, #32
 8000df8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000dfc:	fa20 f202 	lsr.w	r2, r0, r2
 8000e00:	eb43 0002 	adc.w	r0, r3, r2
 8000e04:	bf08      	it	eq
 8000e06:	f020 0001 	biceq.w	r0, r0, #1
 8000e0a:	4770      	bx	lr
 8000e0c:	f102 0220 	add.w	r2, r2, #32
 8000e10:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e14:	f1c2 0220 	rsb	r2, r2, #32
 8000e18:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000e1c:	fa21 f202 	lsr.w	r2, r1, r2
 8000e20:	eb43 0002 	adc.w	r0, r3, r2
 8000e24:	bf08      	it	eq
 8000e26:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e2a:	4770      	bx	lr

08000e2c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000e2c:	b480      	push	{r7}
 8000e2e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000e30:	bf00      	nop
 8000e32:	46bd      	mov	sp, r7
 8000e34:	bc80      	pop	{r7}
 8000e36:	4770      	bx	lr

08000e38 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000e38:	b480      	push	{r7}
 8000e3a:	b083      	sub	sp, #12
 8000e3c:	af00      	add	r7, sp, #0
 8000e3e:	4603      	mov	r3, r0
 8000e40:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000e42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	db0b      	blt.n	8000e62 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e4a:	79fb      	ldrb	r3, [r7, #7]
 8000e4c:	f003 021f 	and.w	r2, r3, #31
 8000e50:	4906      	ldr	r1, [pc, #24]	@ (8000e6c <__NVIC_EnableIRQ+0x34>)
 8000e52:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e56:	095b      	lsrs	r3, r3, #5
 8000e58:	2001      	movs	r0, #1
 8000e5a:	fa00 f202 	lsl.w	r2, r0, r2
 8000e5e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000e62:	bf00      	nop
 8000e64:	370c      	adds	r7, #12
 8000e66:	46bd      	mov	sp, r7
 8000e68:	bc80      	pop	{r7}
 8000e6a:	4770      	bx	lr
 8000e6c:	e000e100 	.word	0xe000e100

08000e70 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000e70:	b480      	push	{r7}
 8000e72:	b083      	sub	sp, #12
 8000e74:	af00      	add	r7, sp, #0
 8000e76:	4603      	mov	r3, r0
 8000e78:	6039      	str	r1, [r7, #0]
 8000e7a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000e7c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	db0a      	blt.n	8000e9a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000e84:	683b      	ldr	r3, [r7, #0]
 8000e86:	b2da      	uxtb	r2, r3
 8000e88:	490c      	ldr	r1, [pc, #48]	@ (8000ebc <__NVIC_SetPriority+0x4c>)
 8000e8a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e8e:	0112      	lsls	r2, r2, #4
 8000e90:	b2d2      	uxtb	r2, r2
 8000e92:	440b      	add	r3, r1
 8000e94:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000e98:	e00a      	b.n	8000eb0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000e9a:	683b      	ldr	r3, [r7, #0]
 8000e9c:	b2da      	uxtb	r2, r3
 8000e9e:	4908      	ldr	r1, [pc, #32]	@ (8000ec0 <__NVIC_SetPriority+0x50>)
 8000ea0:	79fb      	ldrb	r3, [r7, #7]
 8000ea2:	f003 030f 	and.w	r3, r3, #15
 8000ea6:	3b04      	subs	r3, #4
 8000ea8:	0112      	lsls	r2, r2, #4
 8000eaa:	b2d2      	uxtb	r2, r2
 8000eac:	440b      	add	r3, r1
 8000eae:	761a      	strb	r2, [r3, #24]
}
 8000eb0:	bf00      	nop
 8000eb2:	370c      	adds	r7, #12
 8000eb4:	46bd      	mov	sp, r7
 8000eb6:	bc80      	pop	{r7}
 8000eb8:	4770      	bx	lr
 8000eba:	bf00      	nop
 8000ebc:	e000e100 	.word	0xe000e100
 8000ec0:	e000ed00 	.word	0xe000ed00

08000ec4 <DMA1_Channel2_IRQHandler>:
#define BME280_REG_ID 0xD0

uint8_t buffer_SPI_TX[BUF_SIZE];
uint8_t buffer_SPI_RX[BUF_SIZE];

void DMA1_Channel2_IRQHandler() {
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	af00      	add	r7, sp, #0
	DMA1->IFCR |= DMA_IFCR_CTCIF2;
 8000ec8:	4b07      	ldr	r3, [pc, #28]	@ (8000ee8 <DMA1_Channel2_IRQHandler+0x24>)
 8000eca:	685b      	ldr	r3, [r3, #4]
 8000ecc:	4a06      	ldr	r2, [pc, #24]	@ (8000ee8 <DMA1_Channel2_IRQHandler+0x24>)
 8000ece:	f043 0320 	orr.w	r3, r3, #32
 8000ed2:	6053      	str	r3, [r2, #4]
	SPI_cs_set();
 8000ed4:	f000 f880 	bl	8000fd8 <SPI_cs_set>
	DMA1_Channel2->CCR &= ~DMA_CCR_EN;
 8000ed8:	4b04      	ldr	r3, [pc, #16]	@ (8000eec <DMA1_Channel2_IRQHandler+0x28>)
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	4a03      	ldr	r2, [pc, #12]	@ (8000eec <DMA1_Channel2_IRQHandler+0x28>)
 8000ede:	f023 0301 	bic.w	r3, r3, #1
 8000ee2:	6013      	str	r3, [r2, #0]
}
 8000ee4:	bf00      	nop
 8000ee6:	bd80      	pop	{r7, pc}
 8000ee8:	40020000 	.word	0x40020000
 8000eec:	4002001c 	.word	0x4002001c

08000ef0 <DMA1_Channel3_IRQHandler>:

void DMA1_Channel3_IRQHandler() {
 8000ef0:	b580      	push	{r7, lr}
 8000ef2:	af00      	add	r7, sp, #0
	DMA1->IFCR |= DMA_IFCR_CTCIF3;
 8000ef4:	4b07      	ldr	r3, [pc, #28]	@ (8000f14 <DMA1_Channel3_IRQHandler+0x24>)
 8000ef6:	685b      	ldr	r3, [r3, #4]
 8000ef8:	4a06      	ldr	r2, [pc, #24]	@ (8000f14 <DMA1_Channel3_IRQHandler+0x24>)
 8000efa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000efe:	6053      	str	r3, [r2, #4]
	SPI_cs_set();
 8000f00:	f000 f86a 	bl	8000fd8 <SPI_cs_set>
	DMA1_Channel3->CCR &= ~DMA_CCR_EN;
 8000f04:	4b04      	ldr	r3, [pc, #16]	@ (8000f18 <DMA1_Channel3_IRQHandler+0x28>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	4a03      	ldr	r2, [pc, #12]	@ (8000f18 <DMA1_Channel3_IRQHandler+0x28>)
 8000f0a:	f023 0301 	bic.w	r3, r3, #1
 8000f0e:	6013      	str	r3, [r2, #0]
}
 8000f10:	bf00      	nop
 8000f12:	bd80      	pop	{r7, pc}
 8000f14:	40020000 	.word	0x40020000
 8000f18:	40020030 	.word	0x40020030

08000f1c <init_GPIO_for_SPI>:

void init_GPIO_for_SPI() {
 8000f1c:	b580      	push	{r7, lr}
 8000f1e:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 8000f20:	4b16      	ldr	r3, [pc, #88]	@ (8000f7c <init_GPIO_for_SPI+0x60>)
 8000f22:	699b      	ldr	r3, [r3, #24]
 8000f24:	4a15      	ldr	r2, [pc, #84]	@ (8000f7c <init_GPIO_for_SPI+0x60>)
 8000f26:	f043 0304 	orr.w	r3, r3, #4
 8000f2a:	6193      	str	r3, [r2, #24]
	//PA5-SCK, PA6-MISO, PA7-MOSI
	GPIOA->CRL |= GPIO_CRL_MODE5 | GPIO_CRL_MODE6 | GPIO_CRL_MODE7;
 8000f2c:	4b14      	ldr	r3, [pc, #80]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	4a13      	ldr	r2, [pc, #76]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f32:	f043 534c 	orr.w	r3, r3, #855638016	@ 0x33000000
 8000f36:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8000f3a:	6013      	str	r3, [r2, #0]
	GPIOA->CRH |= GPIO_CRH_MODE8;
 8000f3c:	4b10      	ldr	r3, [pc, #64]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f3e:	685b      	ldr	r3, [r3, #4]
 8000f40:	4a0f      	ldr	r2, [pc, #60]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f42:	f043 0303 	orr.w	r3, r3, #3
 8000f46:	6053      	str	r3, [r2, #4]
	//Clear CNF (because on f1 GPIO reset state isn't 0x0000...so strange)
	GPIOA->CRL &= ~(GPIO_CRL_CNF5 | GPIO_CRL_CNF6 | GPIO_CRL_CNF7);
 8000f48:	4b0d      	ldr	r3, [pc, #52]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f4a:	681b      	ldr	r3, [r3, #0]
 8000f4c:	4a0c      	ldr	r2, [pc, #48]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f4e:	f023 434c 	bic.w	r3, r3, #3422552064	@ 0xcc000000
 8000f52:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 8000f56:	6013      	str	r3, [r2, #0]
	GPIOA->CRH &= ~GPIO_CRH_CNF8;
 8000f58:	4b09      	ldr	r3, [pc, #36]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f5a:	685b      	ldr	r3, [r3, #4]
 8000f5c:	4a08      	ldr	r2, [pc, #32]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f5e:	f023 030c 	bic.w	r3, r3, #12
 8000f62:	6053      	str	r3, [r2, #4]
	//AF on PA5-PA7
	GPIOA->CRL |= GPIO_CRL_CNF5_1 | GPIO_CRL_CNF6_1 | GPIO_CRL_CNF7_1;
 8000f64:	4b06      	ldr	r3, [pc, #24]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	4a05      	ldr	r2, [pc, #20]	@ (8000f80 <init_GPIO_for_SPI+0x64>)
 8000f6a:	f043 4308 	orr.w	r3, r3, #2281701376	@ 0x88000000
 8000f6e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000f72:	6013      	str	r3, [r2, #0]
	
	SPI_cs_set();
 8000f74:	f000 f830 	bl	8000fd8 <SPI_cs_set>
}
 8000f78:	bf00      	nop
 8000f7a:	bd80      	pop	{r7, pc}
 8000f7c:	40021000 	.word	0x40021000
 8000f80:	40010800 	.word	0x40010800

08000f84 <SPI1_Master_init>:

void SPI1_Master_init() {
 8000f84:	b580      	push	{r7, lr}
 8000f86:	af00      	add	r7, sp, #0
	init_GPIO_for_SPI();
 8000f88:	f7ff ffc8 	bl	8000f1c <init_GPIO_for_SPI>
	RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8000f8c:	4b10      	ldr	r3, [pc, #64]	@ (8000fd0 <SPI1_Master_init+0x4c>)
 8000f8e:	699b      	ldr	r3, [r3, #24]
 8000f90:	4a0f      	ldr	r2, [pc, #60]	@ (8000fd0 <SPI1_Master_init+0x4c>)
 8000f92:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000f96:	6193      	str	r3, [r2, #24]
	SPI1->CR1 &= ~SPI_CR1_SPE;
 8000f98:	4b0e      	ldr	r3, [pc, #56]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000f9a:	681b      	ldr	r3, [r3, #0]
 8000f9c:	4a0d      	ldr	r2, [pc, #52]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000f9e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000fa2:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= SPI_CR1_MSTR | SPI_CR1_SSM | SPI_CR1_SSI;
 8000fa4:	4b0b      	ldr	r3, [pc, #44]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	4a0a      	ldr	r2, [pc, #40]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000faa:	f443 7341 	orr.w	r3, r3, #772	@ 0x304
 8000fae:	6013      	str	r3, [r2, #0]
	SPI1->CR2 |= SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN; 
 8000fb0:	4b08      	ldr	r3, [pc, #32]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000fb2:	685b      	ldr	r3, [r3, #4]
 8000fb4:	4a07      	ldr	r2, [pc, #28]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000fb6:	f043 0303 	orr.w	r3, r3, #3
 8000fba:	6053      	str	r3, [r2, #4]
	DMA_for_SPI_init();
 8000fbc:	f000 f81a 	bl	8000ff4 <DMA_for_SPI_init>
	SPI1->CR1 |= SPI_CR1_SPE;
 8000fc0:	4b04      	ldr	r3, [pc, #16]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000fc2:	681b      	ldr	r3, [r3, #0]
 8000fc4:	4a03      	ldr	r2, [pc, #12]	@ (8000fd4 <SPI1_Master_init+0x50>)
 8000fc6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fca:	6013      	str	r3, [r2, #0]
}
 8000fcc:	bf00      	nop
 8000fce:	bd80      	pop	{r7, pc}
 8000fd0:	40021000 	.word	0x40021000
 8000fd4:	40013000 	.word	0x40013000

08000fd8 <SPI_cs_set>:

void SPI_cs_set() {
 8000fd8:	b480      	push	{r7}
 8000fda:	af00      	add	r7, sp, #0
	GPIOA->ODR |= GPIO_ODR_ODR8;
 8000fdc:	4b04      	ldr	r3, [pc, #16]	@ (8000ff0 <SPI_cs_set+0x18>)
 8000fde:	68db      	ldr	r3, [r3, #12]
 8000fe0:	4a03      	ldr	r2, [pc, #12]	@ (8000ff0 <SPI_cs_set+0x18>)
 8000fe2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000fe6:	60d3      	str	r3, [r2, #12]
}
 8000fe8:	bf00      	nop
 8000fea:	46bd      	mov	sp, r7
 8000fec:	bc80      	pop	{r7}
 8000fee:	4770      	bx	lr
 8000ff0:	40010800 	.word	0x40010800

08000ff4 <DMA_for_SPI_init>:

void SPI_cs_clear() {
	GPIOA->ODR &= ~GPIO_ODR_ODR8;
}

void DMA_for_SPI_init() {
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	af00      	add	r7, sp, #0
	RCC->AHBENR |= RCC_AHBENR_DMA1EN;
 8000ff8:	4b1c      	ldr	r3, [pc, #112]	@ (800106c <DMA_for_SPI_init+0x78>)
 8000ffa:	695b      	ldr	r3, [r3, #20]
 8000ffc:	4a1b      	ldr	r2, [pc, #108]	@ (800106c <DMA_for_SPI_init+0x78>)
 8000ffe:	f043 0301 	orr.w	r3, r3, #1
 8001002:	6153      	str	r3, [r2, #20]
	//2 CHANNEL - RX       3 CHANNEL - TX
	
	//3 channel - read from memory so set DIR bit
	DMA1_Channel3->CCR |= DMA_CCR_DIR | DMA_CCR_MINC | DMA_CCR_TCIE;
 8001004:	4b1a      	ldr	r3, [pc, #104]	@ (8001070 <DMA_for_SPI_init+0x7c>)
 8001006:	681b      	ldr	r3, [r3, #0]
 8001008:	4a19      	ldr	r2, [pc, #100]	@ (8001070 <DMA_for_SPI_init+0x7c>)
 800100a:	f043 0392 	orr.w	r3, r3, #146	@ 0x92
 800100e:	6013      	str	r3, [r2, #0]
	DMA1_Channel2->CCR |= DMA_CCR_MINC | DMA_CCR_TCIE;
 8001010:	4b18      	ldr	r3, [pc, #96]	@ (8001074 <DMA_for_SPI_init+0x80>)
 8001012:	681b      	ldr	r3, [r3, #0]
 8001014:	4a17      	ldr	r2, [pc, #92]	@ (8001074 <DMA_for_SPI_init+0x80>)
 8001016:	f043 0382 	orr.w	r3, r3, #130	@ 0x82
 800101a:	6013      	str	r3, [r2, #0]
	
	DMA1_Channel2->CMAR = (uint32_t)(&buffer_SPI_RX[0]);
 800101c:	4b15      	ldr	r3, [pc, #84]	@ (8001074 <DMA_for_SPI_init+0x80>)
 800101e:	4a16      	ldr	r2, [pc, #88]	@ (8001078 <DMA_for_SPI_init+0x84>)
 8001020:	60da      	str	r2, [r3, #12]
	DMA1_Channel2->CPAR = (uint32_t)(&(SPI1->DR));
 8001022:	4b14      	ldr	r3, [pc, #80]	@ (8001074 <DMA_for_SPI_init+0x80>)
 8001024:	4a15      	ldr	r2, [pc, #84]	@ (800107c <DMA_for_SPI_init+0x88>)
 8001026:	609a      	str	r2, [r3, #8]
	DMA1_Channel3->CNDTR = 0;
 8001028:	4b11      	ldr	r3, [pc, #68]	@ (8001070 <DMA_for_SPI_init+0x7c>)
 800102a:	2200      	movs	r2, #0
 800102c:	605a      	str	r2, [r3, #4]
	DMA1_Channel3->CMAR = (uint32_t)(&buffer_SPI_TX[0]);
 800102e:	4b10      	ldr	r3, [pc, #64]	@ (8001070 <DMA_for_SPI_init+0x7c>)
 8001030:	4a13      	ldr	r2, [pc, #76]	@ (8001080 <DMA_for_SPI_init+0x8c>)
 8001032:	60da      	str	r2, [r3, #12]
	DMA1_Channel3->CPAR = (uint32_t)(&(SPI1->DR));
 8001034:	4b0e      	ldr	r3, [pc, #56]	@ (8001070 <DMA_for_SPI_init+0x7c>)
 8001036:	4a11      	ldr	r2, [pc, #68]	@ (800107c <DMA_for_SPI_init+0x88>)
 8001038:	609a      	str	r2, [r3, #8]
  DMA1_Channel3->CNDTR = 0;
 800103a:	4b0d      	ldr	r3, [pc, #52]	@ (8001070 <DMA_for_SPI_init+0x7c>)
 800103c:	2200      	movs	r2, #0
 800103e:	605a      	str	r2, [r3, #4]

	SPI1->CR2 |= SPI_CR2_TXDMAEN;
 8001040:	4b10      	ldr	r3, [pc, #64]	@ (8001084 <DMA_for_SPI_init+0x90>)
 8001042:	685b      	ldr	r3, [r3, #4]
 8001044:	4a0f      	ldr	r2, [pc, #60]	@ (8001084 <DMA_for_SPI_init+0x90>)
 8001046:	f043 0302 	orr.w	r3, r3, #2
 800104a:	6053      	str	r3, [r2, #4]
	NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 800104c:	200c      	movs	r0, #12
 800104e:	f7ff fef3 	bl	8000e38 <__NVIC_EnableIRQ>
	NVIC_SetPriority(DMA1_Channel2_IRQn, 1);
 8001052:	2101      	movs	r1, #1
 8001054:	200c      	movs	r0, #12
 8001056:	f7ff ff0b 	bl	8000e70 <__NVIC_SetPriority>
	NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 800105a:	200d      	movs	r0, #13
 800105c:	f7ff feec 	bl	8000e38 <__NVIC_EnableIRQ>
	NVIC_SetPriority(DMA1_Channel3_IRQn, 1);
 8001060:	2101      	movs	r1, #1
 8001062:	200d      	movs	r0, #13
 8001064:	f7ff ff04 	bl	8000e70 <__NVIC_SetPriority>
}
 8001068:	bf00      	nop
 800106a:	bd80      	pop	{r7, pc}
 800106c:	40021000 	.word	0x40021000
 8001070:	40020030 	.word	0x40020030
 8001074:	4002001c 	.word	0x4002001c
 8001078:	200002e8 	.word	0x200002e8
 800107c:	4001300c 	.word	0x4001300c
 8001080:	200001e8 	.word	0x200001e8
 8001084:	40013000 	.word	0x40013000

08001088 <init_GPIO_for_I2C>:


#include "TH02.h"
uint8_t start_state = 0;

void init_GPIO_for_I2C() {
 8001088:	b480      	push	{r7}
 800108a:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 800108c:	4b0d      	ldr	r3, [pc, #52]	@ (80010c4 <init_GPIO_for_I2C+0x3c>)
 800108e:	699b      	ldr	r3, [r3, #24]
 8001090:	4a0c      	ldr	r2, [pc, #48]	@ (80010c4 <init_GPIO_for_I2C+0x3c>)
 8001092:	f043 0308 	orr.w	r3, r3, #8
 8001096:	6193      	str	r3, [r2, #24]
	GPIOB->CRL &= ~GPIO_CRL_CNF6;
 8001098:	4b0b      	ldr	r3, [pc, #44]	@ (80010c8 <init_GPIO_for_I2C+0x40>)
 800109a:	681b      	ldr	r3, [r3, #0]
 800109c:	4a0a      	ldr	r2, [pc, #40]	@ (80010c8 <init_GPIO_for_I2C+0x40>)
 800109e:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80010a2:	6013      	str	r3, [r2, #0]
	GPIOB->CRL &= ~GPIO_CRL_CNF7;
 80010a4:	4b08      	ldr	r3, [pc, #32]	@ (80010c8 <init_GPIO_for_I2C+0x40>)
 80010a6:	681b      	ldr	r3, [r3, #0]
 80010a8:	4a07      	ldr	r2, [pc, #28]	@ (80010c8 <init_GPIO_for_I2C+0x40>)
 80010aa:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 80010ae:	6013      	str	r3, [r2, #0]
	//AF open drain
	GPIOB->CRL |= GPIO_CRL_MODE6 | GPIO_CRL_MODE7 | GPIO_CRL_CNF6 | GPIO_CRL_CNF7;
 80010b0:	4b05      	ldr	r3, [pc, #20]	@ (80010c8 <init_GPIO_for_I2C+0x40>)
 80010b2:	681b      	ldr	r3, [r3, #0]
 80010b4:	4a04      	ldr	r2, [pc, #16]	@ (80010c8 <init_GPIO_for_I2C+0x40>)
 80010b6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80010ba:	6013      	str	r3, [r2, #0]
}
 80010bc:	bf00      	nop
 80010be:	46bd      	mov	sp, r7
 80010c0:	bc80      	pop	{r7}
 80010c2:	4770      	bx	lr
 80010c4:	40021000 	.word	0x40021000
 80010c8:	40010c00 	.word	0x40010c00

080010cc <I2C_for_TH_init>:

void I2C_for_TH_init() {
 80010cc:	b580      	push	{r7, lr}
 80010ce:	af00      	add	r7, sp, #0
	init_GPIO_for_I2C();
 80010d0:	f7ff ffda 	bl	8001088 <init_GPIO_for_I2C>

	RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 80010d4:	4b1c      	ldr	r3, [pc, #112]	@ (8001148 <I2C_for_TH_init+0x7c>)
 80010d6:	69db      	ldr	r3, [r3, #28]
 80010d8:	4a1b      	ldr	r2, [pc, #108]	@ (8001148 <I2C_for_TH_init+0x7c>)
 80010da:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80010de:	61d3      	str	r3, [r2, #28]
	I2C1->CR1 &= ~I2C_CR1_PE;
 80010e0:	4b1a      	ldr	r3, [pc, #104]	@ (800114c <I2C_for_TH_init+0x80>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	4a19      	ldr	r2, [pc, #100]	@ (800114c <I2C_for_TH_init+0x80>)
 80010e6:	f023 0301 	bic.w	r3, r3, #1
 80010ea:	6013      	str	r3, [r2, #0]
	//I2C in stm32f103 work really strange, so i try do to all strange thing to make it work
	//but in proteus it didn't work :/ it work in real life with AHT20 sensor (because i find it for test I2C)
	I2C1->OAR2 &= ~I2C_OAR2_ENDUAL;
 80010ec:	4b17      	ldr	r3, [pc, #92]	@ (800114c <I2C_for_TH_init+0x80>)
 80010ee:	68db      	ldr	r3, [r3, #12]
 80010f0:	4a16      	ldr	r2, [pc, #88]	@ (800114c <I2C_for_TH_init+0x80>)
 80010f2:	f023 0301 	bic.w	r3, r3, #1
 80010f6:	60d3      	str	r3, [r2, #12]
	I2C1->CR1 &= ~I2C_CR1_ENGC;
 80010f8:	4b14      	ldr	r3, [pc, #80]	@ (800114c <I2C_for_TH_init+0x80>)
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	4a13      	ldr	r2, [pc, #76]	@ (800114c <I2C_for_TH_init+0x80>)
 80010fe:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8001102:	6013      	str	r3, [r2, #0]
	I2C1->CR1 &= ~I2C_CR1_NOSTRETCH;
 8001104:	4b11      	ldr	r3, [pc, #68]	@ (800114c <I2C_for_TH_init+0x80>)
 8001106:	681b      	ldr	r3, [r3, #0]
 8001108:	4a10      	ldr	r2, [pc, #64]	@ (800114c <I2C_for_TH_init+0x80>)
 800110a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800110e:	6013      	str	r3, [r2, #0]

	//
	I2C1->CR2 = I2C_CR2_FREQ_3; //8
 8001110:	4b0e      	ldr	r3, [pc, #56]	@ (800114c <I2C_for_TH_init+0x80>)
 8001112:	2208      	movs	r2, #8
 8001114:	605a      	str	r2, [r3, #4]
	I2C1->CCR |= 0x28;
 8001116:	4b0d      	ldr	r3, [pc, #52]	@ (800114c <I2C_for_TH_init+0x80>)
 8001118:	69db      	ldr	r3, [r3, #28]
 800111a:	4a0c      	ldr	r2, [pc, #48]	@ (800114c <I2C_for_TH_init+0x80>)
 800111c:	f043 0328 	orr.w	r3, r3, #40	@ 0x28
 8001120:	61d3      	str	r3, [r2, #28]
	I2C1->TRISE |= 0x0019;
 8001122:	4b0a      	ldr	r3, [pc, #40]	@ (800114c <I2C_for_TH_init+0x80>)
 8001124:	6a1b      	ldr	r3, [r3, #32]
 8001126:	4a09      	ldr	r2, [pc, #36]	@ (800114c <I2C_for_TH_init+0x80>)
 8001128:	f043 0319 	orr.w	r3, r3, #25
 800112c:	6213      	str	r3, [r2, #32]
	I2C1->CR1 |= 0x00000000;
 800112e:	4b07      	ldr	r3, [pc, #28]	@ (800114c <I2C_for_TH_init+0x80>)
 8001130:	4a06      	ldr	r2, [pc, #24]	@ (800114c <I2C_for_TH_init+0x80>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	6013      	str	r3, [r2, #0]
	I2C1->CR1 |= I2C_CR1_PE;
 8001136:	4b05      	ldr	r3, [pc, #20]	@ (800114c <I2C_for_TH_init+0x80>)
 8001138:	681b      	ldr	r3, [r3, #0]
 800113a:	4a04      	ldr	r2, [pc, #16]	@ (800114c <I2C_for_TH_init+0x80>)
 800113c:	f043 0301 	orr.w	r3, r3, #1
 8001140:	6013      	str	r3, [r2, #0]
}
 8001142:	bf00      	nop
 8001144:	bd80      	pop	{r7, pc}
 8001146:	bf00      	nop
 8001148:	40021000 	.word	0x40021000
 800114c:	40005400 	.word	0x40005400

08001150 <__NVIC_EnableIRQ>:
{
 8001150:	b480      	push	{r7}
 8001152:	b083      	sub	sp, #12
 8001154:	af00      	add	r7, sp, #0
 8001156:	4603      	mov	r3, r0
 8001158:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800115a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800115e:	2b00      	cmp	r3, #0
 8001160:	db0b      	blt.n	800117a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001162:	79fb      	ldrb	r3, [r7, #7]
 8001164:	f003 021f 	and.w	r2, r3, #31
 8001168:	4906      	ldr	r1, [pc, #24]	@ (8001184 <__NVIC_EnableIRQ+0x34>)
 800116a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800116e:	095b      	lsrs	r3, r3, #5
 8001170:	2001      	movs	r0, #1
 8001172:	fa00 f202 	lsl.w	r2, r0, r2
 8001176:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800117a:	bf00      	nop
 800117c:	370c      	adds	r7, #12
 800117e:	46bd      	mov	sp, r7
 8001180:	bc80      	pop	{r7}
 8001182:	4770      	bx	lr
 8001184:	e000e100 	.word	0xe000e100

08001188 <__NVIC_SetPriority>:
{
 8001188:	b480      	push	{r7}
 800118a:	b083      	sub	sp, #12
 800118c:	af00      	add	r7, sp, #0
 800118e:	4603      	mov	r3, r0
 8001190:	6039      	str	r1, [r7, #0]
 8001192:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001194:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001198:	2b00      	cmp	r3, #0
 800119a:	db0a      	blt.n	80011b2 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800119c:	683b      	ldr	r3, [r7, #0]
 800119e:	b2da      	uxtb	r2, r3
 80011a0:	490c      	ldr	r1, [pc, #48]	@ (80011d4 <__NVIC_SetPriority+0x4c>)
 80011a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011a6:	0112      	lsls	r2, r2, #4
 80011a8:	b2d2      	uxtb	r2, r2
 80011aa:	440b      	add	r3, r1
 80011ac:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 80011b0:	e00a      	b.n	80011c8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011b2:	683b      	ldr	r3, [r7, #0]
 80011b4:	b2da      	uxtb	r2, r3
 80011b6:	4908      	ldr	r1, [pc, #32]	@ (80011d8 <__NVIC_SetPriority+0x50>)
 80011b8:	79fb      	ldrb	r3, [r7, #7]
 80011ba:	f003 030f 	and.w	r3, r3, #15
 80011be:	3b04      	subs	r3, #4
 80011c0:	0112      	lsls	r2, r2, #4
 80011c2:	b2d2      	uxtb	r2, r2
 80011c4:	440b      	add	r3, r1
 80011c6:	761a      	strb	r2, [r3, #24]
}
 80011c8:	bf00      	nop
 80011ca:	370c      	adds	r7, #12
 80011cc:	46bd      	mov	sp, r7
 80011ce:	bc80      	pop	{r7}
 80011d0:	4770      	bx	lr
 80011d2:	bf00      	nop
 80011d4:	e000e100 	.word	0xe000e100
 80011d8:	e000ed00 	.word	0xe000ed00

080011dc <DMA1_Channel4_IRQHandler>:
 *      Author: denlo
 */

#include <UART.h>

void DMA1_Channel4_IRQHandler(void) {
 80011dc:	b480      	push	{r7}
 80011de:	af00      	add	r7, sp, #0
	DMA1->IFCR |= DMA_IFCR_CTCIF4;
 80011e0:	4b07      	ldr	r3, [pc, #28]	@ (8001200 <DMA1_Channel4_IRQHandler+0x24>)
 80011e2:	685b      	ldr	r3, [r3, #4]
 80011e4:	4a06      	ldr	r2, [pc, #24]	@ (8001200 <DMA1_Channel4_IRQHandler+0x24>)
 80011e6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80011ea:	6053      	str	r3, [r2, #4]
	DMA1_Channel4->CCR &= ~DMA_CCR_EN;
 80011ec:	4b05      	ldr	r3, [pc, #20]	@ (8001204 <DMA1_Channel4_IRQHandler+0x28>)
 80011ee:	681b      	ldr	r3, [r3, #0]
 80011f0:	4a04      	ldr	r2, [pc, #16]	@ (8001204 <DMA1_Channel4_IRQHandler+0x28>)
 80011f2:	f023 0301 	bic.w	r3, r3, #1
 80011f6:	6013      	str	r3, [r2, #0]
}
 80011f8:	bf00      	nop
 80011fa:	46bd      	mov	sp, r7
 80011fc:	bc80      	pop	{r7}
 80011fe:	4770      	bx	lr
 8001200:	40020000 	.word	0x40020000
 8001204:	40020044 	.word	0x40020044

08001208 <init_GPIO_for_USART>:

void init_GPIO_for_USART() {
 8001208:	b480      	push	{r7}
 800120a:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 800120c:	4b07      	ldr	r3, [pc, #28]	@ (800122c <init_GPIO_for_USART+0x24>)
 800120e:	699b      	ldr	r3, [r3, #24]
 8001210:	4a06      	ldr	r2, [pc, #24]	@ (800122c <init_GPIO_for_USART+0x24>)
 8001212:	f043 0304 	orr.w	r3, r3, #4
 8001216:	6193      	str	r3, [r2, #24]
	GPIOA->CRH |= GPIO_CRH_MODE9 | GPIO_CRH_CNF9_1;
 8001218:	4b05      	ldr	r3, [pc, #20]	@ (8001230 <init_GPIO_for_USART+0x28>)
 800121a:	685b      	ldr	r3, [r3, #4]
 800121c:	4a04      	ldr	r2, [pc, #16]	@ (8001230 <init_GPIO_for_USART+0x28>)
 800121e:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8001222:	6053      	str	r3, [r2, #4]
}
 8001224:	bf00      	nop
 8001226:	46bd      	mov	sp, r7
 8001228:	bc80      	pop	{r7}
 800122a:	4770      	bx	lr
 800122c:	40021000 	.word	0x40021000
 8001230:	40010800 	.word	0x40010800

08001234 <init_USART>:

void init_USART() {
 8001234:	b580      	push	{r7, lr}
 8001236:	af00      	add	r7, sp, #0
	init_GPIO_for_USART();
 8001238:	f7ff ffe6 	bl	8001208 <init_GPIO_for_USART>
	init_DMA_for_USART();
 800123c:	f000 f82a 	bl	8001294 <init_DMA_for_USART>

	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001240:	4b10      	ldr	r3, [pc, #64]	@ (8001284 <init_USART+0x50>)
 8001242:	699b      	ldr	r3, [r3, #24]
 8001244:	4a0f      	ldr	r2, [pc, #60]	@ (8001284 <init_USART+0x50>)
 8001246:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800124a:	6193      	str	r3, [r2, #24]
	USART1->CR1 |= USART_CR1_TE;
 800124c:	4b0e      	ldr	r3, [pc, #56]	@ (8001288 <init_USART+0x54>)
 800124e:	68db      	ldr	r3, [r3, #12]
 8001250:	4a0d      	ldr	r2, [pc, #52]	@ (8001288 <init_USART+0x54>)
 8001252:	f043 0308 	orr.w	r3, r3, #8
 8001256:	60d3      	str	r3, [r2, #12]
	USART1->BRR = SystemCoreClock / 115200;
 8001258:	4b0c      	ldr	r3, [pc, #48]	@ (800128c <init_USART+0x58>)
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	4a0a      	ldr	r2, [pc, #40]	@ (8001288 <init_USART+0x54>)
 800125e:	490c      	ldr	r1, [pc, #48]	@ (8001290 <init_USART+0x5c>)
 8001260:	fba1 1303 	umull	r1, r3, r1, r3
 8001264:	0c1b      	lsrs	r3, r3, #16
 8001266:	6093      	str	r3, [r2, #8]
	USART1->CR3 |= USART_CR3_DMAT;
 8001268:	4b07      	ldr	r3, [pc, #28]	@ (8001288 <init_USART+0x54>)
 800126a:	695b      	ldr	r3, [r3, #20]
 800126c:	4a06      	ldr	r2, [pc, #24]	@ (8001288 <init_USART+0x54>)
 800126e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001272:	6153      	str	r3, [r2, #20]
	USART1->CR1 |= USART_CR1_UE;
 8001274:	4b04      	ldr	r3, [pc, #16]	@ (8001288 <init_USART+0x54>)
 8001276:	68db      	ldr	r3, [r3, #12]
 8001278:	4a03      	ldr	r2, [pc, #12]	@ (8001288 <init_USART+0x54>)
 800127a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800127e:	60d3      	str	r3, [r2, #12]
}
 8001280:	bf00      	nop
 8001282:	bd80      	pop	{r7, pc}
 8001284:	40021000 	.word	0x40021000
 8001288:	40013800 	.word	0x40013800
 800128c:	20000000 	.word	0x20000000
 8001290:	91a2b3c5 	.word	0x91a2b3c5

08001294 <init_DMA_for_USART>:


void init_DMA_for_USART() {
 8001294:	b580      	push	{r7, lr}
 8001296:	af00      	add	r7, sp, #0
	RCC->AHBENR |= RCC_AHBENR_DMA1EN;
 8001298:	4b11      	ldr	r3, [pc, #68]	@ (80012e0 <init_DMA_for_USART+0x4c>)
 800129a:	695b      	ldr	r3, [r3, #20]
 800129c:	4a10      	ldr	r2, [pc, #64]	@ (80012e0 <init_DMA_for_USART+0x4c>)
 800129e:	f043 0301 	orr.w	r3, r3, #1
 80012a2:	6153      	str	r3, [r2, #20]
	//USART TX channel - 4
	DMA1_Channel4->CCR |= DMA_CCR_DIR | DMA_CCR_MINC;
 80012a4:	4b0f      	ldr	r3, [pc, #60]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	4a0e      	ldr	r2, [pc, #56]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012aa:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 80012ae:	6013      	str	r3, [r2, #0]
	DMA1_Channel4->CMAR = (uint32_t)(&output_data.string_comitas[0]);
 80012b0:	4b0c      	ldr	r3, [pc, #48]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012b2:	4a0d      	ldr	r2, [pc, #52]	@ (80012e8 <init_DMA_for_USART+0x54>)
 80012b4:	60da      	str	r2, [r3, #12]
	DMA1_Channel4->CPAR = (uint32_t)(&(USART1->DR));
 80012b6:	4b0b      	ldr	r3, [pc, #44]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012b8:	4a0c      	ldr	r2, [pc, #48]	@ (80012ec <init_DMA_for_USART+0x58>)
 80012ba:	609a      	str	r2, [r3, #8]
	DMA1_Channel4->CCR |= DMA_CCR_TCIE;
 80012bc:	4b09      	ldr	r3, [pc, #36]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	4a08      	ldr	r2, [pc, #32]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012c2:	f043 0302 	orr.w	r3, r3, #2
 80012c6:	6013      	str	r3, [r2, #0]
	DMA1_Channel4->CNDTR = 0;
 80012c8:	4b06      	ldr	r3, [pc, #24]	@ (80012e4 <init_DMA_for_USART+0x50>)
 80012ca:	2200      	movs	r2, #0
 80012cc:	605a      	str	r2, [r3, #4]

	NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 80012ce:	200e      	movs	r0, #14
 80012d0:	f7ff ff3e 	bl	8001150 <__NVIC_EnableIRQ>
	NVIC_SetPriority(DMA1_Channel4_IRQn, 3);
 80012d4:	2103      	movs	r1, #3
 80012d6:	200e      	movs	r0, #14
 80012d8:	f7ff ff56 	bl	8001188 <__NVIC_SetPriority>
}
 80012dc:	bf00      	nop
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	40021000 	.word	0x40021000
 80012e4:	40020044 	.word	0x40020044
 80012e8:	20000400 	.word	0x20000400
 80012ec:	40013804 	.word	0x40013804

080012f0 <UART_send_data>:

void UART_send_data(uint8_t* data, uint8_t amount_of_byte) {
 80012f0:	b480      	push	{r7}
 80012f2:	b085      	sub	sp, #20
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	6078      	str	r0, [r7, #4]
 80012f8:	460b      	mov	r3, r1
 80012fa:	70fb      	strb	r3, [r7, #3]
	DMA1_Channel4->CMAR = (uint32_t)(&data[0]);
 80012fc:	4a10      	ldr	r2, [pc, #64]	@ (8001340 <UART_send_data+0x50>)
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	60d3      	str	r3, [r2, #12]
	DMA1_Channel4->CNDTR = amount_of_byte;
 8001302:	4a0f      	ldr	r2, [pc, #60]	@ (8001340 <UART_send_data+0x50>)
 8001304:	78fb      	ldrb	r3, [r7, #3]
 8001306:	6053      	str	r3, [r2, #4]
	DMA1_Channel4->CCR |= DMA_CCR_EN;
 8001308:	4b0d      	ldr	r3, [pc, #52]	@ (8001340 <UART_send_data+0x50>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	4a0c      	ldr	r2, [pc, #48]	@ (8001340 <UART_send_data+0x50>)
 800130e:	f043 0301 	orr.w	r3, r3, #1
 8001312:	6013      	str	r3, [r2, #0]
	while(DMA1_Channel4->CCR & DMA_CCR_EN) {};
 8001314:	bf00      	nop
 8001316:	4b0a      	ldr	r3, [pc, #40]	@ (8001340 <UART_send_data+0x50>)
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	f003 0301 	and.w	r3, r3, #1
 800131e:	2b00      	cmp	r3, #0
 8001320:	d1f9      	bne.n	8001316 <UART_send_data+0x26>
	for(int i = 0; i < 100; i++);
 8001322:	2300      	movs	r3, #0
 8001324:	60fb      	str	r3, [r7, #12]
 8001326:	e002      	b.n	800132e <UART_send_data+0x3e>
 8001328:	68fb      	ldr	r3, [r7, #12]
 800132a:	3301      	adds	r3, #1
 800132c:	60fb      	str	r3, [r7, #12]
 800132e:	68fb      	ldr	r3, [r7, #12]
 8001330:	2b63      	cmp	r3, #99	@ 0x63
 8001332:	ddf9      	ble.n	8001328 <UART_send_data+0x38>
}
 8001334:	bf00      	nop
 8001336:	bf00      	nop
 8001338:	3714      	adds	r7, #20
 800133a:	46bd      	mov	sp, r7
 800133c:	bc80      	pop	{r7}
 800133e:	4770      	bx	lr
 8001340:	40020044 	.word	0x40020044

08001344 <reset_output_data>:
#include "common.h"

Output_data output_data;
Program_state program_state;

void reset_output_data(){
 8001344:	b4b0      	push	{r4, r5, r7}
 8001346:	af00      	add	r7, sp, #0
	strcpy(output_data.string_comitas, "Comitas Akademya\r\n");
 8001348:	4a15      	ldr	r2, [pc, #84]	@ (80013a0 <reset_output_data+0x5c>)
 800134a:	4b16      	ldr	r3, [pc, #88]	@ (80013a4 <reset_output_data+0x60>)
 800134c:	4614      	mov	r4, r2
 800134e:	461d      	mov	r5, r3
 8001350:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001352:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001354:	682b      	ldr	r3, [r5, #0]
 8001356:	461a      	mov	r2, r3
 8001358:	8022      	strh	r2, [r4, #0]
 800135a:	3402      	adds	r4, #2
 800135c:	0c1b      	lsrs	r3, r3, #16
 800135e:	7023      	strb	r3, [r4, #0]
	output_data.temperature_DS18B20 = 0;
 8001360:	4b11      	ldr	r3, [pc, #68]	@ (80013a8 <reset_output_data+0x64>)
 8001362:	f04f 0200 	mov.w	r2, #0
 8001366:	601a      	str	r2, [r3, #0]
	output_data.temperature_TH02 = 0;
 8001368:	4b0f      	ldr	r3, [pc, #60]	@ (80013a8 <reset_output_data+0x64>)
 800136a:	f04f 0200 	mov.w	r2, #0
 800136e:	605a      	str	r2, [r3, #4]
	output_data.humidity_TH02 = 0;
 8001370:	4b0d      	ldr	r3, [pc, #52]	@ (80013a8 <reset_output_data+0x64>)
 8001372:	f04f 0200 	mov.w	r2, #0
 8001376:	609a      	str	r2, [r3, #8]
	output_data.temperature_BME280 = 0;
 8001378:	4b0b      	ldr	r3, [pc, #44]	@ (80013a8 <reset_output_data+0x64>)
 800137a:	f04f 0200 	mov.w	r2, #0
 800137e:	60da      	str	r2, [r3, #12]
	output_data.humidity_BME280 = 0;
 8001380:	4b09      	ldr	r3, [pc, #36]	@ (80013a8 <reset_output_data+0x64>)
 8001382:	f04f 0200 	mov.w	r2, #0
 8001386:	611a      	str	r2, [r3, #16]
	output_data.pressure_BME280 = 0;
 8001388:	4b07      	ldr	r3, [pc, #28]	@ (80013a8 <reset_output_data+0x64>)
 800138a:	f04f 0200 	mov.w	r2, #0
 800138e:	615a      	str	r2, [r3, #20]
	program_state = MEASURE_TEMPERATURE;
 8001390:	4b06      	ldr	r3, [pc, #24]	@ (80013ac <reset_output_data+0x68>)
 8001392:	2200      	movs	r2, #0
 8001394:	701a      	strb	r2, [r3, #0]
}
 8001396:	bf00      	nop
 8001398:	46bd      	mov	sp, r7
 800139a:	bcb0      	pop	{r4, r5, r7}
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	20000400 	.word	0x20000400
 80013a4:	080045d8 	.word	0x080045d8
 80013a8:	200003e8 	.word	0x200003e8
 80013ac:	20000414 	.word	0x20000414

080013b0 <__NVIC_EnableIRQ>:
{
 80013b0:	b480      	push	{r7}
 80013b2:	b083      	sub	sp, #12
 80013b4:	af00      	add	r7, sp, #0
 80013b6:	4603      	mov	r3, r0
 80013b8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80013ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013be:	2b00      	cmp	r3, #0
 80013c0:	db0b      	blt.n	80013da <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013c2:	79fb      	ldrb	r3, [r7, #7]
 80013c4:	f003 021f 	and.w	r2, r3, #31
 80013c8:	4906      	ldr	r1, [pc, #24]	@ (80013e4 <__NVIC_EnableIRQ+0x34>)
 80013ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013ce:	095b      	lsrs	r3, r3, #5
 80013d0:	2001      	movs	r0, #1
 80013d2:	fa00 f202 	lsl.w	r2, r0, r2
 80013d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80013da:	bf00      	nop
 80013dc:	370c      	adds	r7, #12
 80013de:	46bd      	mov	sp, r7
 80013e0:	bc80      	pop	{r7}
 80013e2:	4770      	bx	lr
 80013e4:	e000e100 	.word	0xe000e100

080013e8 <__NVIC_SetPriority>:
{
 80013e8:	b480      	push	{r7}
 80013ea:	b083      	sub	sp, #12
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	4603      	mov	r3, r0
 80013f0:	6039      	str	r1, [r7, #0]
 80013f2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80013f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	db0a      	blt.n	8001412 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013fc:	683b      	ldr	r3, [r7, #0]
 80013fe:	b2da      	uxtb	r2, r3
 8001400:	490c      	ldr	r1, [pc, #48]	@ (8001434 <__NVIC_SetPriority+0x4c>)
 8001402:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001406:	0112      	lsls	r2, r2, #4
 8001408:	b2d2      	uxtb	r2, r2
 800140a:	440b      	add	r3, r1
 800140c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 8001410:	e00a      	b.n	8001428 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001412:	683b      	ldr	r3, [r7, #0]
 8001414:	b2da      	uxtb	r2, r3
 8001416:	4908      	ldr	r1, [pc, #32]	@ (8001438 <__NVIC_SetPriority+0x50>)
 8001418:	79fb      	ldrb	r3, [r7, #7]
 800141a:	f003 030f 	and.w	r3, r3, #15
 800141e:	3b04      	subs	r3, #4
 8001420:	0112      	lsls	r2, r2, #4
 8001422:	b2d2      	uxtb	r2, r2
 8001424:	440b      	add	r3, r1
 8001426:	761a      	strb	r2, [r3, #24]
}
 8001428:	bf00      	nop
 800142a:	370c      	adds	r7, #12
 800142c:	46bd      	mov	sp, r7
 800142e:	bc80      	pop	{r7}
 8001430:	4770      	bx	lr
 8001432:	bf00      	nop
 8001434:	e000e100 	.word	0xe000e100
 8001438:	e000ed00 	.word	0xe000ed00

0800143c <TIM2_IRQHandler>:
DS18B20_CMD ds18b20_cmd = TEMPERATURE_CONVERTING;
uint8_t ds_buff[9];
uint16_t temp;

//timer 2 used for program state switch and
void TIM2_IRQHandler() {
 800143c:	b480      	push	{r7}
 800143e:	af00      	add	r7, sp, #0
	TIM2->SR &= ~TIM_SR_UIF;
 8001440:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001444:	691b      	ldr	r3, [r3, #16]
 8001446:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800144a:	f023 0301 	bic.w	r3, r3, #1
 800144e:	6113      	str	r3, [r2, #16]
	TIM2->CR1 &= ~TIM_CR1_CEN;
 8001450:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800145a:	f023 0301 	bic.w	r3, r3, #1
 800145e:	6013      	str	r3, [r2, #0]
	program_state = TRANSMIT_DATA;
 8001460:	4b04      	ldr	r3, [pc, #16]	@ (8001474 <TIM2_IRQHandler+0x38>)
 8001462:	2201      	movs	r2, #1
 8001464:	701a      	strb	r2, [r3, #0]
	ds18b20_cmd = TEMPERATURE_READING;
 8001466:	4b04      	ldr	r3, [pc, #16]	@ (8001478 <TIM2_IRQHandler+0x3c>)
 8001468:	2201      	movs	r2, #1
 800146a:	701a      	strb	r2, [r3, #0]
}
 800146c:	bf00      	nop
 800146e:	46bd      	mov	sp, r7
 8001470:	bc80      	pop	{r7}
 8001472:	4770      	bx	lr
 8001474:	20000414 	.word	0x20000414
 8001478:	20000415 	.word	0x20000415

0800147c <init_Gpio_for_ds>:

//there many defines for DS18B20 init for quick GPIO and PIN change if needed
void init_Gpio_for_ds() {
 800147c:	b480      	push	{r7}
 800147e:	af00      	add	r7, sp, #0
	//PIN for Data line (DQ) of One-wire interface
	RCC->APB2ENR |= RCC_PORT_DS18B20;
 8001480:	4b19      	ldr	r3, [pc, #100]	@ (80014e8 <init_Gpio_for_ds+0x6c>)
 8001482:	699b      	ldr	r3, [r3, #24]
 8001484:	4a18      	ldr	r2, [pc, #96]	@ (80014e8 <init_Gpio_for_ds+0x6c>)
 8001486:	f043 0304 	orr.w	r3, r3, #4
 800148a:	6193      	str	r3, [r2, #24]
	PORT_DS18B20->CRH |= GPIO_MODE_DS18B20;
 800148c:	4b17      	ldr	r3, [pc, #92]	@ (80014ec <init_Gpio_for_ds+0x70>)
 800148e:	685b      	ldr	r3, [r3, #4]
 8001490:	4a16      	ldr	r2, [pc, #88]	@ (80014ec <init_Gpio_for_ds+0x70>)
 8001492:	f443 3340 	orr.w	r3, r3, #196608	@ 0x30000
 8001496:	6053      	str	r3, [r2, #4]
	GPIOA->CRH &= ~GPIO_CRH_CNF12;
 8001498:	4b14      	ldr	r3, [pc, #80]	@ (80014ec <init_Gpio_for_ds+0x70>)
 800149a:	685b      	ldr	r3, [r3, #4]
 800149c:	4a13      	ldr	r2, [pc, #76]	@ (80014ec <init_Gpio_for_ds+0x70>)
 800149e:	f423 2340 	bic.w	r3, r3, #786432	@ 0xc0000
 80014a2:	6053      	str	r3, [r2, #4]
	PORT_DS18B20->CRH |= GPIO_OPEN_DRAIN_DS18B20;
 80014a4:	4b11      	ldr	r3, [pc, #68]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014a6:	685b      	ldr	r3, [r3, #4]
 80014a8:	4a10      	ldr	r2, [pc, #64]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014aa:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80014ae:	6053      	str	r3, [r2, #4]
	PORT_DS18B20->ODR |= (1 << PIN_DS18B20);
 80014b0:	4b0e      	ldr	r3, [pc, #56]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014b2:	68db      	ldr	r3, [r3, #12]
 80014b4:	4a0d      	ldr	r2, [pc, #52]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014b6:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80014ba:	60d3      	str	r3, [r2, #12]
	
	//PIN for LED, which will signalize about error
	RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;
 80014bc:	4b0a      	ldr	r3, [pc, #40]	@ (80014e8 <init_Gpio_for_ds+0x6c>)
 80014be:	699b      	ldr	r3, [r3, #24]
 80014c0:	4a09      	ldr	r2, [pc, #36]	@ (80014e8 <init_Gpio_for_ds+0x6c>)
 80014c2:	f043 0310 	orr.w	r3, r3, #16
 80014c6:	6193      	str	r3, [r2, #24]
	GPIOA->CRH |= GPIO_CRH_MODE11;
 80014c8:	4b08      	ldr	r3, [pc, #32]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014ca:	685b      	ldr	r3, [r3, #4]
 80014cc:	4a07      	ldr	r2, [pc, #28]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014ce:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 80014d2:	6053      	str	r3, [r2, #4]
	GPIOA->CRH &= ~GPIO_CRH_CNF11;
 80014d4:	4b05      	ldr	r3, [pc, #20]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014d6:	685b      	ldr	r3, [r3, #4]
 80014d8:	4a04      	ldr	r2, [pc, #16]	@ (80014ec <init_Gpio_for_ds+0x70>)
 80014da:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80014de:	6053      	str	r3, [r2, #4]
}
 80014e0:	bf00      	nop
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bc80      	pop	{r7}
 80014e6:	4770      	bx	lr
 80014e8:	40021000 	.word	0x40021000
 80014ec:	40010800 	.word	0x40010800

080014f0 <init_tim3_for_us>:

//timer for generate 1us
void init_tim3_for_us() {
 80014f0:	b480      	push	{r7}
 80014f2:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 80014f4:	4b0b      	ldr	r3, [pc, #44]	@ (8001524 <init_tim3_for_us+0x34>)
 80014f6:	69db      	ldr	r3, [r3, #28]
 80014f8:	4a0a      	ldr	r2, [pc, #40]	@ (8001524 <init_tim3_for_us+0x34>)
 80014fa:	f043 0302 	orr.w	r3, r3, #2
 80014fe:	61d3      	str	r3, [r2, #28]
	TIM3->ARR = 1000;
 8001500:	4b09      	ldr	r3, [pc, #36]	@ (8001528 <init_tim3_for_us+0x38>)
 8001502:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8001506:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM3->PSC = 7;
 8001508:	4b07      	ldr	r3, [pc, #28]	@ (8001528 <init_tim3_for_us+0x38>)
 800150a:	2207      	movs	r2, #7
 800150c:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM3->CR1 |= TIM_CR1_CEN;
 800150e:	4b06      	ldr	r3, [pc, #24]	@ (8001528 <init_tim3_for_us+0x38>)
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	4a05      	ldr	r2, [pc, #20]	@ (8001528 <init_tim3_for_us+0x38>)
 8001514:	f043 0301 	orr.w	r3, r3, #1
 8001518:	6013      	str	r3, [r2, #0]
} 
 800151a:	bf00      	nop
 800151c:	46bd      	mov	sp, r7
 800151e:	bc80      	pop	{r7}
 8001520:	4770      	bx	lr
 8001522:	bf00      	nop
 8001524:	40021000 	.word	0x40021000
 8001528:	40000400 	.word	0x40000400

0800152c <init_tim2_for_delay>:

//timer for delay between measurements (750 ms needed in max resolution)
void init_tim2_for_delay() {
 800152c:	b580      	push	{r7, lr}
 800152e:	af00      	add	r7, sp, #0
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001530:	4b14      	ldr	r3, [pc, #80]	@ (8001584 <init_tim2_for_delay+0x58>)
 8001532:	69db      	ldr	r3, [r3, #28]
 8001534:	4a13      	ldr	r2, [pc, #76]	@ (8001584 <init_tim2_for_delay+0x58>)
 8001536:	f043 0301 	orr.w	r3, r3, #1
 800153a:	61d3      	str	r3, [r2, #28]
	TIM2->ARR = 8000;
 800153c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001540:	f44f 52fa 	mov.w	r2, #8000	@ 0x1f40
 8001544:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM2->PSC = 799;
 8001546:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800154a:	f240 321f 	movw	r2, #799	@ 0x31f
 800154e:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM2->DIER |= TIM_DIER_UIE;
 8001550:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001554:	68db      	ldr	r3, [r3, #12]
 8001556:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800155a:	f043 0301 	orr.w	r3, r3, #1
 800155e:	60d3      	str	r3, [r2, #12]
	NVIC_EnableIRQ(TIM2_IRQn);
 8001560:	201c      	movs	r0, #28
 8001562:	f7ff ff25 	bl	80013b0 <__NVIC_EnableIRQ>
	NVIC_SetPriority(TIM2_IRQn, 1);
 8001566:	2101      	movs	r1, #1
 8001568:	201c      	movs	r0, #28
 800156a:	f7ff ff3d 	bl	80013e8 <__NVIC_SetPriority>
	TIM2->CR1 |= TIM_CR1_CEN;
 800156e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001578:	f043 0301 	orr.w	r3, r3, #1
 800157c:	6013      	str	r3, [r2, #0]
}
 800157e:	bf00      	nop
 8001580:	bd80      	pop	{r7, pc}
 8001582:	bf00      	nop
 8001584:	40021000 	.word	0x40021000

08001588 <ds_reset_pulse>:

void ds_reset_pulse()
{
 8001588:	b480      	push	{r7}
 800158a:	af00      	add	r7, sp, #0
	//line should be in high state
	if((PORT_DS18B20->IDR & GPIO_IDR_IDR12) == 0) {
 800158c:	4b1e      	ldr	r3, [pc, #120]	@ (8001608 <ds_reset_pulse+0x80>)
 800158e:	689b      	ldr	r3, [r3, #8]
 8001590:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001594:	2b00      	cmp	r3, #0
 8001596:	d103      	bne.n	80015a0 <ds_reset_pulse+0x18>
		ds18b20_cmd = ERROR_WITH_SENSOR;
 8001598:	4b1c      	ldr	r3, [pc, #112]	@ (800160c <ds_reset_pulse+0x84>)
 800159a:	2203      	movs	r2, #3
 800159c:	701a      	strb	r2, [r3, #0]
		return;
 800159e:	e030      	b.n	8001602 <ds_reset_pulse+0x7a>
	}
	TIM3->CNT = 0;
 80015a0:	4b1b      	ldr	r3, [pc, #108]	@ (8001610 <ds_reset_pulse+0x88>)
 80015a2:	2200      	movs	r2, #0
 80015a4:	625a      	str	r2, [r3, #36]	@ 0x24
	//make the line go to low and wait in this state 480-960 us
	PORT_DS18B20->ODR &= ~(1 << PIN_DS18B20);
 80015a6:	4b18      	ldr	r3, [pc, #96]	@ (8001608 <ds_reset_pulse+0x80>)
 80015a8:	68db      	ldr	r3, [r3, #12]
 80015aa:	4a17      	ldr	r2, [pc, #92]	@ (8001608 <ds_reset_pulse+0x80>)
 80015ac:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80015b0:	60d3      	str	r3, [r2, #12]
	while(TIM3->CNT < 480);
 80015b2:	bf00      	nop
 80015b4:	4b16      	ldr	r3, [pc, #88]	@ (8001610 <ds_reset_pulse+0x88>)
 80015b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80015b8:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 80015bc:	d3fa      	bcc.n	80015b4 <ds_reset_pulse+0x2c>
	//release the line (let go it to high) and wait to respond of DS18B20 after 15-60 us of wait
	PORT_DS18B20->ODR |= (1 << PIN_DS18B20);
 80015be:	4b12      	ldr	r3, [pc, #72]	@ (8001608 <ds_reset_pulse+0x80>)
 80015c0:	68db      	ldr	r3, [r3, #12]
 80015c2:	4a11      	ldr	r2, [pc, #68]	@ (8001608 <ds_reset_pulse+0x80>)
 80015c4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80015c8:	60d3      	str	r3, [r2, #12]
	while(TIM3->CNT < 520);
 80015ca:	bf00      	nop
 80015cc:	4b10      	ldr	r3, [pc, #64]	@ (8001610 <ds_reset_pulse+0x88>)
 80015ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80015d0:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 80015d4:	d3fa      	bcc.n	80015cc <ds_reset_pulse+0x44>
	//if line was in high state - there are no answer from DS18B20 :(
	if(PORT_DS18B20->IDR & GPIO_IDR_IDR12) {
 80015d6:	4b0c      	ldr	r3, [pc, #48]	@ (8001608 <ds_reset_pulse+0x80>)
 80015d8:	689b      	ldr	r3, [r3, #8]
 80015da:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d003      	beq.n	80015ea <ds_reset_pulse+0x62>
		ds18b20_cmd = ERROR_WITH_SENSOR;
 80015e2:	4b0a      	ldr	r3, [pc, #40]	@ (800160c <ds_reset_pulse+0x84>)
 80015e4:	2203      	movs	r2, #3
 80015e6:	701a      	strb	r2, [r3, #0]
		return;
 80015e8:	e00b      	b.n	8001602 <ds_reset_pulse+0x7a>
	}
	//if we here then no error was detected
	PORT_LED->ODR &= ~(1 << PIN_LED);
 80015ea:	4b07      	ldr	r3, [pc, #28]	@ (8001608 <ds_reset_pulse+0x80>)
 80015ec:	68db      	ldr	r3, [r3, #12]
 80015ee:	4a06      	ldr	r2, [pc, #24]	@ (8001608 <ds_reset_pulse+0x80>)
 80015f0:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80015f4:	60d3      	str	r3, [r2, #12]
	//wait minimum 480us from moment, where we release the line
	while(TIM3->CNT < 960);
 80015f6:	bf00      	nop
 80015f8:	4b05      	ldr	r3, [pc, #20]	@ (8001610 <ds_reset_pulse+0x88>)
 80015fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80015fc:	f5b3 7f70 	cmp.w	r3, #960	@ 0x3c0
 8001600:	d3fa      	bcc.n	80015f8 <ds_reset_pulse+0x70>
}
 8001602:	46bd      	mov	sp, r7
 8001604:	bc80      	pop	{r7}
 8001606:	4770      	bx	lr
 8001608:	40010800 	.word	0x40010800
 800160c:	20000415 	.word	0x20000415
 8001610:	40000400 	.word	0x40000400

08001614 <ds_write_bit>:

void ds_write_bit(uint8_t bit)
{
 8001614:	b480      	push	{r7}
 8001616:	b083      	sub	sp, #12
 8001618:	af00      	add	r7, sp, #0
 800161a:	4603      	mov	r3, r0
 800161c:	71fb      	strb	r3, [r7, #7]
	TIM3->CNT = 0;
 800161e:	4b13      	ldr	r3, [pc, #76]	@ (800166c <ds_write_bit+0x58>)
 8001620:	2200      	movs	r2, #0
 8001622:	625a      	str	r2, [r3, #36]	@ 0x24
	//make the line go to low and wait in this state at least 1 us
  PORT_DS18B20->ODR &= ~(1 << PIN_DS18B20);
 8001624:	4b12      	ldr	r3, [pc, #72]	@ (8001670 <ds_write_bit+0x5c>)
 8001626:	68db      	ldr	r3, [r3, #12]
 8001628:	4a11      	ldr	r2, [pc, #68]	@ (8001670 <ds_write_bit+0x5c>)
 800162a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800162e:	60d3      	str	r3, [r2, #12]
  while(TIM3->CNT < 2) {}
 8001630:	bf00      	nop
 8001632:	4b0e      	ldr	r3, [pc, #56]	@ (800166c <ds_write_bit+0x58>)
 8001634:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001636:	2b01      	cmp	r3, #1
 8001638:	d9fb      	bls.n	8001632 <ds_write_bit+0x1e>
  //set bit on line
	if(bit)
 800163a:	79fb      	ldrb	r3, [r7, #7]
 800163c:	2b00      	cmp	r3, #0
 800163e:	d005      	beq.n	800164c <ds_write_bit+0x38>
		PORT_DS18B20->ODR |= (1 << PIN_DS18B20);
 8001640:	4b0b      	ldr	r3, [pc, #44]	@ (8001670 <ds_write_bit+0x5c>)
 8001642:	68db      	ldr	r3, [r3, #12]
 8001644:	4a0a      	ldr	r2, [pc, #40]	@ (8001670 <ds_write_bit+0x5c>)
 8001646:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800164a:	60d3      	str	r3, [r2, #12]
  //"write operation" with bit last 60-120us
  while(TIM3->CNT < 60) {}
 800164c:	bf00      	nop
 800164e:	4b07      	ldr	r3, [pc, #28]	@ (800166c <ds_write_bit+0x58>)
 8001650:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001652:	2b3b      	cmp	r3, #59	@ 0x3b
 8001654:	d9fb      	bls.n	800164e <ds_write_bit+0x3a>
  //release line again
  PORT_DS18B20->ODR |= (1 << PIN_DS18B20);
 8001656:	4b06      	ldr	r3, [pc, #24]	@ (8001670 <ds_write_bit+0x5c>)
 8001658:	68db      	ldr	r3, [r3, #12]
 800165a:	4a05      	ldr	r2, [pc, #20]	@ (8001670 <ds_write_bit+0x5c>)
 800165c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001660:	60d3      	str	r3, [r2, #12]
}
 8001662:	bf00      	nop
 8001664:	370c      	adds	r7, #12
 8001666:	46bd      	mov	sp, r7
 8001668:	bc80      	pop	{r7}
 800166a:	4770      	bx	lr
 800166c:	40000400 	.word	0x40000400
 8001670:	40010800 	.word	0x40010800

08001674 <ds_write_byte>:

void ds_write_byte(uint8_t byte)
{
 8001674:	b580      	push	{r7, lr}
 8001676:	b084      	sub	sp, #16
 8001678:	af00      	add	r7, sp, #0
 800167a:	4603      	mov	r3, r0
 800167c:	71fb      	strb	r3, [r7, #7]
	for(uint8_t i = 0; i < 8; i++)
 800167e:	2300      	movs	r3, #0
 8001680:	73fb      	strb	r3, [r7, #15]
 8001682:	e00f      	b.n	80016a4 <ds_write_byte+0x30>
		ds_write_bit(byte & (1 << i));
 8001684:	7bfb      	ldrb	r3, [r7, #15]
 8001686:	2201      	movs	r2, #1
 8001688:	fa02 f303 	lsl.w	r3, r2, r3
 800168c:	b25a      	sxtb	r2, r3
 800168e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001692:	4013      	ands	r3, r2
 8001694:	b25b      	sxtb	r3, r3
 8001696:	b2db      	uxtb	r3, r3
 8001698:	4618      	mov	r0, r3
 800169a:	f7ff ffbb 	bl	8001614 <ds_write_bit>
	for(uint8_t i = 0; i < 8; i++)
 800169e:	7bfb      	ldrb	r3, [r7, #15]
 80016a0:	3301      	adds	r3, #1
 80016a2:	73fb      	strb	r3, [r7, #15]
 80016a4:	7bfb      	ldrb	r3, [r7, #15]
 80016a6:	2b07      	cmp	r3, #7
 80016a8:	d9ec      	bls.n	8001684 <ds_write_byte+0x10>
}
 80016aa:	bf00      	nop
 80016ac:	bf00      	nop
 80016ae:	3710      	adds	r7, #16
 80016b0:	46bd      	mov	sp, r7
 80016b2:	bd80      	pop	{r7, pc}

080016b4 <ds_read_bit>:

uint8_t ds_read_bit()
{
 80016b4:	b480      	push	{r7}
 80016b6:	b083      	sub	sp, #12
 80016b8:	af00      	add	r7, sp, #0
	uint8_t result;
	TIM3->CNT=0;
 80016ba:	4b15      	ldr	r3, [pc, #84]	@ (8001710 <ds_read_bit+0x5c>)
 80016bc:	2200      	movs	r2, #0
 80016be:	625a      	str	r2, [r3, #36]	@ 0x24
	//make the line go to low and wait in this state at least 1 us
	PORT_DS18B20->ODR &= ~(1 << PIN_DS18B20);
 80016c0:	4b14      	ldr	r3, [pc, #80]	@ (8001714 <ds_read_bit+0x60>)
 80016c2:	68db      	ldr	r3, [r3, #12]
 80016c4:	4a13      	ldr	r2, [pc, #76]	@ (8001714 <ds_read_bit+0x60>)
 80016c6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80016ca:	60d3      	str	r3, [r2, #12]
	while(TIM3->CNT < 2) {}
 80016cc:	bf00      	nop
 80016ce:	4b10      	ldr	r3, [pc, #64]	@ (8001710 <ds_read_bit+0x5c>)
 80016d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80016d2:	2b01      	cmp	r3, #1
 80016d4:	d9fb      	bls.n	80016ce <ds_read_bit+0x1a>
	//release line in order to DS18B20 set bit on line
	PORT_DS18B20->ODR |=  (1 << PIN_DS18B20);
 80016d6:	4b0f      	ldr	r3, [pc, #60]	@ (8001714 <ds_read_bit+0x60>)
 80016d8:	68db      	ldr	r3, [r3, #12]
 80016da:	4a0e      	ldr	r2, [pc, #56]	@ (8001714 <ds_read_bit+0x60>)
 80016dc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80016e0:	60d3      	str	r3, [r2, #12]
	//wait at least 15us before read bit
	while(TIM3->CNT < 20) {}
 80016e2:	bf00      	nop
 80016e4:	4b0a      	ldr	r3, [pc, #40]	@ (8001710 <ds_read_bit+0x5c>)
 80016e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80016e8:	2b13      	cmp	r3, #19
 80016ea:	d9fb      	bls.n	80016e4 <ds_read_bit+0x30>
	//read bit
	result = (PORT_DS18B20->IDR & (1 << PIN_DS18B20)) >> PIN_DS18B20;
 80016ec:	4b09      	ldr	r3, [pc, #36]	@ (8001714 <ds_read_bit+0x60>)
 80016ee:	689b      	ldr	r3, [r3, #8]
 80016f0:	0b1b      	lsrs	r3, r3, #12
 80016f2:	b2db      	uxtb	r3, r3
 80016f4:	f003 0301 	and.w	r3, r3, #1
 80016f8:	71fb      	strb	r3, [r7, #7]
	while(TIM3->CNT < 60 ) {}
 80016fa:	bf00      	nop
 80016fc:	4b04      	ldr	r3, [pc, #16]	@ (8001710 <ds_read_bit+0x5c>)
 80016fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001700:	2b3b      	cmp	r3, #59	@ 0x3b
 8001702:	d9fb      	bls.n	80016fc <ds_read_bit+0x48>
	//"read operation" with bit at least 60
	return result;
 8001704:	79fb      	ldrb	r3, [r7, #7]
}
 8001706:	4618      	mov	r0, r3
 8001708:	370c      	adds	r7, #12
 800170a:	46bd      	mov	sp, r7
 800170c:	bc80      	pop	{r7}
 800170e:	4770      	bx	lr
 8001710:	40000400 	.word	0x40000400
 8001714:	40010800 	.word	0x40010800

08001718 <ds_read_byte>:

uint8_t ds_read_byte()
{
 8001718:	b580      	push	{r7, lr}
 800171a:	b082      	sub	sp, #8
 800171c:	af00      	add	r7, sp, #0
	uint8_t result = 0;
 800171e:	2300      	movs	r3, #0
 8001720:	71fb      	strb	r3, [r7, #7]
	for(uint8_t i = 0; i < 8; i++)
 8001722:	2300      	movs	r3, #0
 8001724:	71bb      	strb	r3, [r7, #6]
 8001726:	e00f      	b.n	8001748 <ds_read_byte+0x30>
		result |= (ds_read_bit() << i);
 8001728:	f7ff ffc4 	bl	80016b4 <ds_read_bit>
 800172c:	4603      	mov	r3, r0
 800172e:	461a      	mov	r2, r3
 8001730:	79bb      	ldrb	r3, [r7, #6]
 8001732:	fa02 f303 	lsl.w	r3, r2, r3
 8001736:	b25a      	sxtb	r2, r3
 8001738:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800173c:	4313      	orrs	r3, r2
 800173e:	b25b      	sxtb	r3, r3
 8001740:	71fb      	strb	r3, [r7, #7]
	for(uint8_t i = 0; i < 8; i++)
 8001742:	79bb      	ldrb	r3, [r7, #6]
 8001744:	3301      	adds	r3, #1
 8001746:	71bb      	strb	r3, [r7, #6]
 8001748:	79bb      	ldrb	r3, [r7, #6]
 800174a:	2b07      	cmp	r3, #7
 800174c:	d9ec      	bls.n	8001728 <ds_read_byte+0x10>
	return result;
 800174e:	79fb      	ldrb	r3, [r7, #7]
}
 8001750:	4618      	mov	r0, r3
 8001752:	3708      	adds	r7, #8
 8001754:	46bd      	mov	sp, r7
 8001756:	bd80      	pop	{r7, pc}

08001758 <TIM_delay_on>:

void TIM_delay_on() {
 8001758:	b480      	push	{r7}
 800175a:	af00      	add	r7, sp, #0
	TIM2->CNT = 0;
 800175c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001760:	2200      	movs	r2, #0
 8001762:	625a      	str	r2, [r3, #36]	@ 0x24
	TIM2->CR1 |= TIM_CR1_CEN;
 8001764:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001768:	681b      	ldr	r3, [r3, #0]
 800176a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800176e:	f043 0301 	orr.w	r3, r3, #1
 8001772:	6013      	str	r3, [r2, #0]
}
 8001774:	bf00      	nop
 8001776:	46bd      	mov	sp, r7
 8001778:	bc80      	pop	{r7}
 800177a:	4770      	bx	lr

0800177c <temperature_measurment_start>:

void temperature_measurment_start() {
 800177c:	b580      	push	{r7, lr}
 800177e:	af00      	add	r7, sp, #0
	ds_reset_pulse();
 8001780:	f7ff ff02 	bl	8001588 <ds_reset_pulse>
	if(ds18b20_cmd == ERROR_WITH_SENSOR)
 8001784:	4b07      	ldr	r3, [pc, #28]	@ (80017a4 <temperature_measurment_start+0x28>)
 8001786:	781b      	ldrb	r3, [r3, #0]
 8001788:	2b03      	cmp	r3, #3
 800178a:	d008      	beq.n	800179e <temperature_measurment_start+0x22>
		return;
	ds_write_byte(SKIP_ROM_ADR);
 800178c:	20cc      	movs	r0, #204	@ 0xcc
 800178e:	f7ff ff71 	bl	8001674 <ds_write_byte>
	ds_write_byte(CONVERT_TEMP);
 8001792:	2044      	movs	r0, #68	@ 0x44
 8001794:	f7ff ff6e 	bl	8001674 <ds_write_byte>
	TIM_delay_on();
 8001798:	f7ff ffde 	bl	8001758 <TIM_delay_on>
 800179c:	e000      	b.n	80017a0 <temperature_measurment_start+0x24>
		return;
 800179e:	bf00      	nop
}
 80017a0:	bd80      	pop	{r7, pc}
 80017a2:	bf00      	nop
 80017a4:	20000415 	.word	0x20000415

080017a8 <temprepature_measurment_read>:

void temprepature_measurment_read() {
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b082      	sub	sp, #8
 80017ac:	af00      	add	r7, sp, #0
	ds_reset_pulse();
 80017ae:	f7ff feeb 	bl	8001588 <ds_reset_pulse>
	if(ds18b20_cmd == ERROR_WITH_SENSOR)
 80017b2:	4b22      	ldr	r3, [pc, #136]	@ (800183c <temprepature_measurment_read+0x94>)
 80017b4:	781b      	ldrb	r3, [r3, #0]
 80017b6:	2b03      	cmp	r3, #3
 80017b8:	d03b      	beq.n	8001832 <temprepature_measurment_read+0x8a>
		return;
	ds_write_byte(SKIP_ROM_ADR);
 80017ba:	20cc      	movs	r0, #204	@ 0xcc
 80017bc:	f7ff ff5a 	bl	8001674 <ds_write_byte>
	ds_write_byte(READ_DATA);
 80017c0:	20be      	movs	r0, #190	@ 0xbe
 80017c2:	f7ff ff57 	bl	8001674 <ds_write_byte>

	for(int i = 0; i < 9; i++ )
 80017c6:	2300      	movs	r3, #0
 80017c8:	607b      	str	r3, [r7, #4]
 80017ca:	e00b      	b.n	80017e4 <temprepature_measurment_read+0x3c>
		ds_buff[i] = ds_read_byte();
 80017cc:	f7ff ffa4 	bl	8001718 <ds_read_byte>
 80017d0:	4603      	mov	r3, r0
 80017d2:	4619      	mov	r1, r3
 80017d4:	4a1a      	ldr	r2, [pc, #104]	@ (8001840 <temprepature_measurment_read+0x98>)
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	4413      	add	r3, r2
 80017da:	460a      	mov	r2, r1
 80017dc:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < 9; i++ )
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	3301      	adds	r3, #1
 80017e2:	607b      	str	r3, [r7, #4]
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	2b08      	cmp	r3, #8
 80017e8:	ddf0      	ble.n	80017cc <temprepature_measurment_read+0x24>

	//convert temperature
	temp = ds_buff[1];
 80017ea:	4b15      	ldr	r3, [pc, #84]	@ (8001840 <temprepature_measurment_read+0x98>)
 80017ec:	785b      	ldrb	r3, [r3, #1]
 80017ee:	461a      	mov	r2, r3
 80017f0:	4b14      	ldr	r3, [pc, #80]	@ (8001844 <temprepature_measurment_read+0x9c>)
 80017f2:	801a      	strh	r2, [r3, #0]
	temp = temp << 8;
 80017f4:	4b13      	ldr	r3, [pc, #76]	@ (8001844 <temprepature_measurment_read+0x9c>)
 80017f6:	881b      	ldrh	r3, [r3, #0]
 80017f8:	021b      	lsls	r3, r3, #8
 80017fa:	b29a      	uxth	r2, r3
 80017fc:	4b11      	ldr	r3, [pc, #68]	@ (8001844 <temprepature_measurment_read+0x9c>)
 80017fe:	801a      	strh	r2, [r3, #0]
	temp |= ds_buff[0];
 8001800:	4b0f      	ldr	r3, [pc, #60]	@ (8001840 <temprepature_measurment_read+0x98>)
 8001802:	781b      	ldrb	r3, [r3, #0]
 8001804:	461a      	mov	r2, r3
 8001806:	4b0f      	ldr	r3, [pc, #60]	@ (8001844 <temprepature_measurment_read+0x9c>)
 8001808:	881b      	ldrh	r3, [r3, #0]
 800180a:	4313      	orrs	r3, r2
 800180c:	b29a      	uxth	r2, r3
 800180e:	4b0d      	ldr	r3, [pc, #52]	@ (8001844 <temprepature_measurment_read+0x9c>)
 8001810:	801a      	strh	r2, [r3, #0]
	output_data.temperature_DS18B20 = (float)temp * 0.0625;
 8001812:	4b0c      	ldr	r3, [pc, #48]	@ (8001844 <temprepature_measurment_read+0x9c>)
 8001814:	881b      	ldrh	r3, [r3, #0]
 8001816:	4618      	mov	r0, r3
 8001818:	f7ff fab0 	bl	8000d7c <__aeabi_ui2f>
 800181c:	4603      	mov	r3, r0
 800181e:	f04f 5176 	mov.w	r1, #1031798784	@ 0x3d800000
 8001822:	4618      	mov	r0, r3
 8001824:	f7fe fcac 	bl	8000180 <__aeabi_fmul>
 8001828:	4603      	mov	r3, r0
 800182a:	461a      	mov	r2, r3
 800182c:	4b06      	ldr	r3, [pc, #24]	@ (8001848 <temprepature_measurment_read+0xa0>)
 800182e:	601a      	str	r2, [r3, #0]
 8001830:	e000      	b.n	8001834 <temprepature_measurment_read+0x8c>
		return;
 8001832:	bf00      	nop
}
 8001834:	3708      	adds	r7, #8
 8001836:	46bd      	mov	sp, r7
 8001838:	bd80      	pop	{r7, pc}
 800183a:	bf00      	nop
 800183c:	20000415 	.word	0x20000415
 8001840:	20000418 	.word	0x20000418
 8001844:	20000422 	.word	0x20000422
 8001848:	200003e8 	.word	0x200003e8

0800184c <init_DS18B20>:

void init_DS18B20() {
 800184c:	b580      	push	{r7, lr}
 800184e:	af00      	add	r7, sp, #0
	init_Gpio_for_ds();
 8001850:	f7ff fe14 	bl	800147c <init_Gpio_for_ds>
	init_tim3_for_us();
 8001854:	f7ff fe4c 	bl	80014f0 <init_tim3_for_us>
	init_tim2_for_delay();
 8001858:	f7ff fe68 	bl	800152c <init_tim2_for_delay>
}
 800185c:	bf00      	nop
 800185e:	bd80      	pop	{r7, pc}

08001860 <DS18B20_measure_temperature>:

void DS18B20_measure_temperature() {
 8001860:	b580      	push	{r7, lr}
 8001862:	af00      	add	r7, sp, #0
	switch(ds18b20_cmd) {
 8001864:	4b16      	ldr	r3, [pc, #88]	@ (80018c0 <DS18B20_measure_temperature+0x60>)
 8001866:	781b      	ldrb	r3, [r3, #0]
 8001868:	2b03      	cmp	r3, #3
 800186a:	d821      	bhi.n	80018b0 <DS18B20_measure_temperature+0x50>
 800186c:	a201      	add	r2, pc, #4	@ (adr r2, 8001874 <DS18B20_measure_temperature+0x14>)
 800186e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001872:	bf00      	nop
 8001874:	08001885 	.word	0x08001885
 8001878:	08001891 	.word	0x08001891
 800187c:	080018b9 	.word	0x080018b9
 8001880:	0800189d 	.word	0x0800189d
		case TEMPERATURE_CONVERTING:
			ds18b20_cmd = WAITING_1SEC;
 8001884:	4b0e      	ldr	r3, [pc, #56]	@ (80018c0 <DS18B20_measure_temperature+0x60>)
 8001886:	2202      	movs	r2, #2
 8001888:	701a      	strb	r2, [r3, #0]
			temperature_measurment_start();
 800188a:	f7ff ff77 	bl	800177c <temperature_measurment_start>
			break;
 800188e:	e014      	b.n	80018ba <DS18B20_measure_temperature+0x5a>
		case TEMPERATURE_READING:
			ds18b20_cmd = TEMPERATURE_CONVERTING;
 8001890:	4b0b      	ldr	r3, [pc, #44]	@ (80018c0 <DS18B20_measure_temperature+0x60>)
 8001892:	2200      	movs	r2, #0
 8001894:	701a      	strb	r2, [r3, #0]
			temprepature_measurment_read();
 8001896:	f7ff ff87 	bl	80017a8 <temprepature_measurment_read>
			break;
 800189a:	e00e      	b.n	80018ba <DS18B20_measure_temperature+0x5a>
		case ERROR_WITH_SENSOR:
			PORT_LED->ODR |= (1 << PIN_LED);
 800189c:	4b09      	ldr	r3, [pc, #36]	@ (80018c4 <DS18B20_measure_temperature+0x64>)
 800189e:	68db      	ldr	r3, [r3, #12]
 80018a0:	4a08      	ldr	r2, [pc, #32]	@ (80018c4 <DS18B20_measure_temperature+0x64>)
 80018a2:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80018a6:	60d3      	str	r3, [r2, #12]
			ds18b20_cmd = TEMPERATURE_CONVERTING;
 80018a8:	4b05      	ldr	r3, [pc, #20]	@ (80018c0 <DS18B20_measure_temperature+0x60>)
 80018aa:	2200      	movs	r2, #0
 80018ac:	701a      	strb	r2, [r3, #0]
			break;
 80018ae:	e004      	b.n	80018ba <DS18B20_measure_temperature+0x5a>
		case WAITING_1SEC:
		break;
		default: 
			ds18b20_cmd = TEMPERATURE_CONVERTING;
 80018b0:	4b03      	ldr	r3, [pc, #12]	@ (80018c0 <DS18B20_measure_temperature+0x60>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	701a      	strb	r2, [r3, #0]
			break;
 80018b6:	e000      	b.n	80018ba <DS18B20_measure_temperature+0x5a>
		break;
 80018b8:	bf00      	nop
	}
}
 80018ba:	bf00      	nop
 80018bc:	bd80      	pop	{r7, pc}
 80018be:	bf00      	nop
 80018c0:	20000415 	.word	0x20000415
 80018c4:	40010800 	.word	0x40010800

080018c8 <main>:
#include <SPI_for_BME.h>
#include <UART.h>

int __io_putchar(int ch);

int main() {
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b082      	sub	sp, #8
 80018cc:	af00      	add	r7, sp, #0
	//SPI work in real life between MC, but don't work in PROTEUS, i don't have sensor to test either
	SPI1_Master_init();
 80018ce:	f7ff fb59 	bl	8000f84 <SPI1_Master_init>
	//I2C for TH02 initialization
	I2C_for_TH_init();
 80018d2:	f7ff fbfb 	bl	80010cc <I2C_for_TH_init>
	//DS18B20 initialization
	init_DS18B20();
 80018d6:	f7ff ffb9 	bl	800184c <init_DS18B20>
	//UART for data transmit initialization
	init_USART();
 80018da:	f7ff fcab 	bl	8001234 <init_USART>
	//variables for temperatures and other data
	reset_output_data();
 80018de:	f7ff fd31 	bl	8001344 <reset_output_data>
	//in proteus periphery didn't initialize by that moment, so need to little delay
	//in real life periphery don't have that problem
	for(int i = 0; i < 100000; i++);
 80018e2:	2300      	movs	r3, #0
 80018e4:	607b      	str	r3, [r7, #4]
 80018e6:	e002      	b.n	80018ee <main+0x26>
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	3301      	adds	r3, #1
 80018ec:	607b      	str	r3, [r7, #4]
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	4a2a      	ldr	r2, [pc, #168]	@ (800199c <main+0xd4>)
 80018f2:	4293      	cmp	r3, r2
 80018f4:	ddf8      	ble.n	80018e8 <main+0x20>

	//there are two states, first - for temperature measure, second - for temperature output in terminal
	while(1) {
		switch(program_state) {
 80018f6:	4b2a      	ldr	r3, [pc, #168]	@ (80019a0 <main+0xd8>)
 80018f8:	781b      	ldrb	r3, [r3, #0]
 80018fa:	2b00      	cmp	r3, #0
 80018fc:	d002      	beq.n	8001904 <main+0x3c>
 80018fe:	2b01      	cmp	r3, #1
 8001900:	d003      	beq.n	800190a <main+0x42>
 8001902:	e7f8      	b.n	80018f6 <main+0x2e>
			case MEASURE_TEMPERATURE:
				DS18B20_measure_temperature();
 8001904:	f7ff ffac 	bl	8001860 <DS18B20_measure_temperature>

				//it commented because in proteus stm32f103 don't want to set bit ADDR that slave address was written
				//in real life with AHT20(sensor with I2C interaction, don't found TH02) I2C work perfectly
				//TH_measure_temperature();
			break;
 8001908:	e046      	b.n	8001998 <main+0xd0>

			case TRANSMIT_DATA:
				//send string Comitas academya
				UART_send_data(output_data.string_comitas, COMITAS_STRING_SIZE);
 800190a:	2112      	movs	r1, #18
 800190c:	4825      	ldr	r0, [pc, #148]	@ (80019a4 <main+0xdc>)
 800190e:	f7ff fcef 	bl	80012f0 <UART_send_data>
				//send other string with temperatures and etc
				printf("temperature DS18B20: %f C\r\n", output_data.temperature_DS18B20);
 8001912:	4b25      	ldr	r3, [pc, #148]	@ (80019a8 <main+0xe0>)
 8001914:	681b      	ldr	r3, [r3, #0]
 8001916:	4618      	mov	r0, r3
 8001918:	f7fe fe4a 	bl	80005b0 <__aeabi_f2d>
 800191c:	4602      	mov	r2, r0
 800191e:	460b      	mov	r3, r1
 8001920:	4822      	ldr	r0, [pc, #136]	@ (80019ac <main+0xe4>)
 8001922:	f000 fe6d 	bl	8002600 <iprintf>
				printf("temperature TH02: %f C\r\n", output_data.temperature_TH02);
 8001926:	4b20      	ldr	r3, [pc, #128]	@ (80019a8 <main+0xe0>)
 8001928:	685b      	ldr	r3, [r3, #4]
 800192a:	4618      	mov	r0, r3
 800192c:	f7fe fe40 	bl	80005b0 <__aeabi_f2d>
 8001930:	4602      	mov	r2, r0
 8001932:	460b      	mov	r3, r1
 8001934:	481e      	ldr	r0, [pc, #120]	@ (80019b0 <main+0xe8>)
 8001936:	f000 fe63 	bl	8002600 <iprintf>
				printf("humidity TH02: %f\r\n", output_data.humidity_TH02);
 800193a:	4b1b      	ldr	r3, [pc, #108]	@ (80019a8 <main+0xe0>)
 800193c:	689b      	ldr	r3, [r3, #8]
 800193e:	4618      	mov	r0, r3
 8001940:	f7fe fe36 	bl	80005b0 <__aeabi_f2d>
 8001944:	4602      	mov	r2, r0
 8001946:	460b      	mov	r3, r1
 8001948:	481a      	ldr	r0, [pc, #104]	@ (80019b4 <main+0xec>)
 800194a:	f000 fe59 	bl	8002600 <iprintf>
				printf("temperature BME: %f C\r\n", output_data.temperature_BME280);
 800194e:	4b16      	ldr	r3, [pc, #88]	@ (80019a8 <main+0xe0>)
 8001950:	68db      	ldr	r3, [r3, #12]
 8001952:	4618      	mov	r0, r3
 8001954:	f7fe fe2c 	bl	80005b0 <__aeabi_f2d>
 8001958:	4602      	mov	r2, r0
 800195a:	460b      	mov	r3, r1
 800195c:	4816      	ldr	r0, [pc, #88]	@ (80019b8 <main+0xf0>)
 800195e:	f000 fe4f 	bl	8002600 <iprintf>
				printf("humidity BME: %f\r\n", output_data.humidity_BME280);
 8001962:	4b11      	ldr	r3, [pc, #68]	@ (80019a8 <main+0xe0>)
 8001964:	691b      	ldr	r3, [r3, #16]
 8001966:	4618      	mov	r0, r3
 8001968:	f7fe fe22 	bl	80005b0 <__aeabi_f2d>
 800196c:	4602      	mov	r2, r0
 800196e:	460b      	mov	r3, r1
 8001970:	4812      	ldr	r0, [pc, #72]	@ (80019bc <main+0xf4>)
 8001972:	f000 fe45 	bl	8002600 <iprintf>
				printf("pressure BME: %f\r\n", output_data.pressure_BME280);
 8001976:	4b0c      	ldr	r3, [pc, #48]	@ (80019a8 <main+0xe0>)
 8001978:	695b      	ldr	r3, [r3, #20]
 800197a:	4618      	mov	r0, r3
 800197c:	f7fe fe18 	bl	80005b0 <__aeabi_f2d>
 8001980:	4602      	mov	r2, r0
 8001982:	460b      	mov	r3, r1
 8001984:	480e      	ldr	r0, [pc, #56]	@ (80019c0 <main+0xf8>)
 8001986:	f000 fe3b 	bl	8002600 <iprintf>
				printf("\r\n\r\n");
 800198a:	480e      	ldr	r0, [pc, #56]	@ (80019c4 <main+0xfc>)
 800198c:	f000 fea0 	bl	80026d0 <puts>
				program_state = MEASURE_TEMPERATURE;
 8001990:	4b03      	ldr	r3, [pc, #12]	@ (80019a0 <main+0xd8>)
 8001992:	2200      	movs	r2, #0
 8001994:	701a      	strb	r2, [r3, #0]
			break;
 8001996:	bf00      	nop
		switch(program_state) {
 8001998:	e7ad      	b.n	80018f6 <main+0x2e>
 800199a:	bf00      	nop
 800199c:	0001869f 	.word	0x0001869f
 80019a0:	20000414 	.word	0x20000414
 80019a4:	20000400 	.word	0x20000400
 80019a8:	200003e8 	.word	0x200003e8
 80019ac:	080045ec 	.word	0x080045ec
 80019b0:	08004608 	.word	0x08004608
 80019b4:	08004624 	.word	0x08004624
 80019b8:	08004638 	.word	0x08004638
 80019bc:	08004650 	.word	0x08004650
 80019c0:	08004664 	.word	0x08004664
 80019c4:	08004678 	.word	0x08004678

080019c8 <__io_putchar>:
		}
	}
}


int __io_putchar(int ch) {
 80019c8:	b580      	push	{r7, lr}
 80019ca:	b084      	sub	sp, #16
 80019cc:	af00      	add	r7, sp, #0
 80019ce:	6078      	str	r0, [r7, #4]
	uint8_t ch8 = ch & 0xFF;
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	b2db      	uxtb	r3, r3
 80019d4:	73fb      	strb	r3, [r7, #15]
	UART_send_data(&ch8, 1);
 80019d6:	f107 030f 	add.w	r3, r7, #15
 80019da:	2101      	movs	r1, #1
 80019dc:	4618      	mov	r0, r3
 80019de:	f7ff fc87 	bl	80012f0 <UART_send_data>
	return ch;
 80019e2:	687b      	ldr	r3, [r7, #4]
}
 80019e4:	4618      	mov	r0, r3
 80019e6:	3710      	adds	r7, #16
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}

080019ec <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80019ec:	b480      	push	{r7}
 80019ee:	af00      	add	r7, sp, #0
  return 1;
 80019f0:	2301      	movs	r3, #1
}
 80019f2:	4618      	mov	r0, r3
 80019f4:	46bd      	mov	sp, r7
 80019f6:	bc80      	pop	{r7}
 80019f8:	4770      	bx	lr

080019fa <_kill>:

int _kill(int pid, int sig)
{
 80019fa:	b580      	push	{r7, lr}
 80019fc:	b082      	sub	sp, #8
 80019fe:	af00      	add	r7, sp, #0
 8001a00:	6078      	str	r0, [r7, #4]
 8001a02:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001a04:	f000 ff96 	bl	8002934 <__errno>
 8001a08:	4603      	mov	r3, r0
 8001a0a:	2216      	movs	r2, #22
 8001a0c:	601a      	str	r2, [r3, #0]
  return -1;
 8001a0e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001a12:	4618      	mov	r0, r3
 8001a14:	3708      	adds	r7, #8
 8001a16:	46bd      	mov	sp, r7
 8001a18:	bd80      	pop	{r7, pc}

08001a1a <_exit>:

void _exit (int status)
{
 8001a1a:	b580      	push	{r7, lr}
 8001a1c:	b082      	sub	sp, #8
 8001a1e:	af00      	add	r7, sp, #0
 8001a20:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001a22:	f04f 31ff 	mov.w	r1, #4294967295
 8001a26:	6878      	ldr	r0, [r7, #4]
 8001a28:	f7ff ffe7 	bl	80019fa <_kill>
  while (1) {}    /* Make sure we hang here */
 8001a2c:	bf00      	nop
 8001a2e:	e7fd      	b.n	8001a2c <_exit+0x12>

08001a30 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b086      	sub	sp, #24
 8001a34:	af00      	add	r7, sp, #0
 8001a36:	60f8      	str	r0, [r7, #12]
 8001a38:	60b9      	str	r1, [r7, #8]
 8001a3a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	617b      	str	r3, [r7, #20]
 8001a40:	e00a      	b.n	8001a58 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001a42:	f3af 8000 	nop.w
 8001a46:	4601      	mov	r1, r0
 8001a48:	68bb      	ldr	r3, [r7, #8]
 8001a4a:	1c5a      	adds	r2, r3, #1
 8001a4c:	60ba      	str	r2, [r7, #8]
 8001a4e:	b2ca      	uxtb	r2, r1
 8001a50:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a52:	697b      	ldr	r3, [r7, #20]
 8001a54:	3301      	adds	r3, #1
 8001a56:	617b      	str	r3, [r7, #20]
 8001a58:	697a      	ldr	r2, [r7, #20]
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	429a      	cmp	r2, r3
 8001a5e:	dbf0      	blt.n	8001a42 <_read+0x12>
  }

  return len;
 8001a60:	687b      	ldr	r3, [r7, #4]
}
 8001a62:	4618      	mov	r0, r3
 8001a64:	3718      	adds	r7, #24
 8001a66:	46bd      	mov	sp, r7
 8001a68:	bd80      	pop	{r7, pc}

08001a6a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001a6a:	b580      	push	{r7, lr}
 8001a6c:	b086      	sub	sp, #24
 8001a6e:	af00      	add	r7, sp, #0
 8001a70:	60f8      	str	r0, [r7, #12]
 8001a72:	60b9      	str	r1, [r7, #8]
 8001a74:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a76:	2300      	movs	r3, #0
 8001a78:	617b      	str	r3, [r7, #20]
 8001a7a:	e009      	b.n	8001a90 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001a7c:	68bb      	ldr	r3, [r7, #8]
 8001a7e:	1c5a      	adds	r2, r3, #1
 8001a80:	60ba      	str	r2, [r7, #8]
 8001a82:	781b      	ldrb	r3, [r3, #0]
 8001a84:	4618      	mov	r0, r3
 8001a86:	f7ff ff9f 	bl	80019c8 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a8a:	697b      	ldr	r3, [r7, #20]
 8001a8c:	3301      	adds	r3, #1
 8001a8e:	617b      	str	r3, [r7, #20]
 8001a90:	697a      	ldr	r2, [r7, #20]
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	429a      	cmp	r2, r3
 8001a96:	dbf1      	blt.n	8001a7c <_write+0x12>
  }
  return len;
 8001a98:	687b      	ldr	r3, [r7, #4]
}
 8001a9a:	4618      	mov	r0, r3
 8001a9c:	3718      	adds	r7, #24
 8001a9e:	46bd      	mov	sp, r7
 8001aa0:	bd80      	pop	{r7, pc}

08001aa2 <_close>:

int _close(int file)
{
 8001aa2:	b480      	push	{r7}
 8001aa4:	b083      	sub	sp, #12
 8001aa6:	af00      	add	r7, sp, #0
 8001aa8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001aaa:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001aae:	4618      	mov	r0, r3
 8001ab0:	370c      	adds	r7, #12
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	bc80      	pop	{r7}
 8001ab6:	4770      	bx	lr

08001ab8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001ab8:	b480      	push	{r7}
 8001aba:	b083      	sub	sp, #12
 8001abc:	af00      	add	r7, sp, #0
 8001abe:	6078      	str	r0, [r7, #4]
 8001ac0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001ac2:	683b      	ldr	r3, [r7, #0]
 8001ac4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001ac8:	605a      	str	r2, [r3, #4]
  return 0;
 8001aca:	2300      	movs	r3, #0
}
 8001acc:	4618      	mov	r0, r3
 8001ace:	370c      	adds	r7, #12
 8001ad0:	46bd      	mov	sp, r7
 8001ad2:	bc80      	pop	{r7}
 8001ad4:	4770      	bx	lr

08001ad6 <_isatty>:

int _isatty(int file)
{
 8001ad6:	b480      	push	{r7}
 8001ad8:	b083      	sub	sp, #12
 8001ada:	af00      	add	r7, sp, #0
 8001adc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001ade:	2301      	movs	r3, #1
}
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	370c      	adds	r7, #12
 8001ae4:	46bd      	mov	sp, r7
 8001ae6:	bc80      	pop	{r7}
 8001ae8:	4770      	bx	lr

08001aea <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001aea:	b480      	push	{r7}
 8001aec:	b085      	sub	sp, #20
 8001aee:	af00      	add	r7, sp, #0
 8001af0:	60f8      	str	r0, [r7, #12]
 8001af2:	60b9      	str	r1, [r7, #8]
 8001af4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001af6:	2300      	movs	r3, #0
}
 8001af8:	4618      	mov	r0, r3
 8001afa:	3714      	adds	r7, #20
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bc80      	pop	{r7}
 8001b00:	4770      	bx	lr
	...

08001b04 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001b04:	b580      	push	{r7, lr}
 8001b06:	b086      	sub	sp, #24
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001b0c:	4a14      	ldr	r2, [pc, #80]	@ (8001b60 <_sbrk+0x5c>)
 8001b0e:	4b15      	ldr	r3, [pc, #84]	@ (8001b64 <_sbrk+0x60>)
 8001b10:	1ad3      	subs	r3, r2, r3
 8001b12:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001b14:	697b      	ldr	r3, [r7, #20]
 8001b16:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001b18:	4b13      	ldr	r3, [pc, #76]	@ (8001b68 <_sbrk+0x64>)
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	2b00      	cmp	r3, #0
 8001b1e:	d102      	bne.n	8001b26 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001b20:	4b11      	ldr	r3, [pc, #68]	@ (8001b68 <_sbrk+0x64>)
 8001b22:	4a12      	ldr	r2, [pc, #72]	@ (8001b6c <_sbrk+0x68>)
 8001b24:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001b26:	4b10      	ldr	r3, [pc, #64]	@ (8001b68 <_sbrk+0x64>)
 8001b28:	681a      	ldr	r2, [r3, #0]
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	4413      	add	r3, r2
 8001b2e:	693a      	ldr	r2, [r7, #16]
 8001b30:	429a      	cmp	r2, r3
 8001b32:	d207      	bcs.n	8001b44 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001b34:	f000 fefe 	bl	8002934 <__errno>
 8001b38:	4603      	mov	r3, r0
 8001b3a:	220c      	movs	r2, #12
 8001b3c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001b3e:	f04f 33ff 	mov.w	r3, #4294967295
 8001b42:	e009      	b.n	8001b58 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001b44:	4b08      	ldr	r3, [pc, #32]	@ (8001b68 <_sbrk+0x64>)
 8001b46:	681b      	ldr	r3, [r3, #0]
 8001b48:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001b4a:	4b07      	ldr	r3, [pc, #28]	@ (8001b68 <_sbrk+0x64>)
 8001b4c:	681a      	ldr	r2, [r3, #0]
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	4413      	add	r3, r2
 8001b52:	4a05      	ldr	r2, [pc, #20]	@ (8001b68 <_sbrk+0x64>)
 8001b54:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001b56:	68fb      	ldr	r3, [r7, #12]
}
 8001b58:	4618      	mov	r0, r3
 8001b5a:	3718      	adds	r7, #24
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	bd80      	pop	{r7, pc}
 8001b60:	20002800 	.word	0x20002800
 8001b64:	00000400 	.word	0x00000400
 8001b68:	20000424 	.word	0x20000424
 8001b6c:	20000578 	.word	0x20000578

08001b70 <Reset_Handler>:
 8001b70:	480d      	ldr	r0, [pc, #52]	@ (8001ba8 <LoopForever+0x2>)
 8001b72:	4685      	mov	sp, r0
 8001b74:	f7ff f95a 	bl	8000e2c <SystemInit>
 8001b78:	480c      	ldr	r0, [pc, #48]	@ (8001bac <LoopForever+0x6>)
 8001b7a:	490d      	ldr	r1, [pc, #52]	@ (8001bb0 <LoopForever+0xa>)
 8001b7c:	4a0d      	ldr	r2, [pc, #52]	@ (8001bb4 <LoopForever+0xe>)
 8001b7e:	2300      	movs	r3, #0
 8001b80:	e002      	b.n	8001b88 <LoopCopyDataInit>

08001b82 <CopyDataInit>:
 8001b82:	58d4      	ldr	r4, [r2, r3]
 8001b84:	50c4      	str	r4, [r0, r3]
 8001b86:	3304      	adds	r3, #4

08001b88 <LoopCopyDataInit>:
 8001b88:	18c4      	adds	r4, r0, r3
 8001b8a:	428c      	cmp	r4, r1
 8001b8c:	d3f9      	bcc.n	8001b82 <CopyDataInit>
 8001b8e:	4a0a      	ldr	r2, [pc, #40]	@ (8001bb8 <LoopForever+0x12>)
 8001b90:	4c0a      	ldr	r4, [pc, #40]	@ (8001bbc <LoopForever+0x16>)
 8001b92:	2300      	movs	r3, #0
 8001b94:	e001      	b.n	8001b9a <LoopFillZerobss>

08001b96 <FillZerobss>:
 8001b96:	6013      	str	r3, [r2, #0]
 8001b98:	3204      	adds	r2, #4

08001b9a <LoopFillZerobss>:
 8001b9a:	42a2      	cmp	r2, r4
 8001b9c:	d3fb      	bcc.n	8001b96 <FillZerobss>
 8001b9e:	f000 fecf 	bl	8002940 <__libc_init_array>
 8001ba2:	f7ff fe91 	bl	80018c8 <main>

08001ba6 <LoopForever>:
 8001ba6:	e7fe      	b.n	8001ba6 <LoopForever>
 8001ba8:	20002800 	.word	0x20002800
 8001bac:	20000000 	.word	0x20000000
 8001bb0:	200001cc 	.word	0x200001cc
 8001bb4:	08004a00 	.word	0x08004a00
 8001bb8:	200001cc 	.word	0x200001cc
 8001bbc:	20000574 	.word	0x20000574

08001bc0 <ADC1_2_IRQHandler>:
 8001bc0:	e7fe      	b.n	8001bc0 <ADC1_2_IRQHandler>

08001bc2 <__cvt>:
 8001bc2:	2b00      	cmp	r3, #0
 8001bc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001bc8:	461d      	mov	r5, r3
 8001bca:	bfbb      	ittet	lt
 8001bcc:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8001bd0:	461d      	movlt	r5, r3
 8001bd2:	2300      	movge	r3, #0
 8001bd4:	232d      	movlt	r3, #45	@ 0x2d
 8001bd6:	b088      	sub	sp, #32
 8001bd8:	4614      	mov	r4, r2
 8001bda:	bfb8      	it	lt
 8001bdc:	4614      	movlt	r4, r2
 8001bde:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8001be0:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8001be2:	7013      	strb	r3, [r2, #0]
 8001be4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8001be6:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8001bea:	f023 0820 	bic.w	r8, r3, #32
 8001bee:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001bf2:	d005      	beq.n	8001c00 <__cvt+0x3e>
 8001bf4:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001bf8:	d100      	bne.n	8001bfc <__cvt+0x3a>
 8001bfa:	3601      	adds	r6, #1
 8001bfc:	2302      	movs	r3, #2
 8001bfe:	e000      	b.n	8001c02 <__cvt+0x40>
 8001c00:	2303      	movs	r3, #3
 8001c02:	aa07      	add	r2, sp, #28
 8001c04:	9204      	str	r2, [sp, #16]
 8001c06:	aa06      	add	r2, sp, #24
 8001c08:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001c0c:	e9cd 3600 	strd	r3, r6, [sp]
 8001c10:	4622      	mov	r2, r4
 8001c12:	462b      	mov	r3, r5
 8001c14:	f000 ff54 	bl	8002ac0 <_dtoa_r>
 8001c18:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001c1c:	4607      	mov	r7, r0
 8001c1e:	d119      	bne.n	8001c54 <__cvt+0x92>
 8001c20:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001c22:	07db      	lsls	r3, r3, #31
 8001c24:	d50e      	bpl.n	8001c44 <__cvt+0x82>
 8001c26:	eb00 0906 	add.w	r9, r0, r6
 8001c2a:	2200      	movs	r2, #0
 8001c2c:	2300      	movs	r3, #0
 8001c2e:	4620      	mov	r0, r4
 8001c30:	4629      	mov	r1, r5
 8001c32:	f7fe ff7d 	bl	8000b30 <__aeabi_dcmpeq>
 8001c36:	b108      	cbz	r0, 8001c3c <__cvt+0x7a>
 8001c38:	f8cd 901c 	str.w	r9, [sp, #28]
 8001c3c:	2230      	movs	r2, #48	@ 0x30
 8001c3e:	9b07      	ldr	r3, [sp, #28]
 8001c40:	454b      	cmp	r3, r9
 8001c42:	d31e      	bcc.n	8001c82 <__cvt+0xc0>
 8001c44:	4638      	mov	r0, r7
 8001c46:	9b07      	ldr	r3, [sp, #28]
 8001c48:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001c4a:	1bdb      	subs	r3, r3, r7
 8001c4c:	6013      	str	r3, [r2, #0]
 8001c4e:	b008      	add	sp, #32
 8001c50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c54:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001c58:	eb00 0906 	add.w	r9, r0, r6
 8001c5c:	d1e5      	bne.n	8001c2a <__cvt+0x68>
 8001c5e:	7803      	ldrb	r3, [r0, #0]
 8001c60:	2b30      	cmp	r3, #48	@ 0x30
 8001c62:	d10a      	bne.n	8001c7a <__cvt+0xb8>
 8001c64:	2200      	movs	r2, #0
 8001c66:	2300      	movs	r3, #0
 8001c68:	4620      	mov	r0, r4
 8001c6a:	4629      	mov	r1, r5
 8001c6c:	f7fe ff60 	bl	8000b30 <__aeabi_dcmpeq>
 8001c70:	b918      	cbnz	r0, 8001c7a <__cvt+0xb8>
 8001c72:	f1c6 0601 	rsb	r6, r6, #1
 8001c76:	f8ca 6000 	str.w	r6, [sl]
 8001c7a:	f8da 3000 	ldr.w	r3, [sl]
 8001c7e:	4499      	add	r9, r3
 8001c80:	e7d3      	b.n	8001c2a <__cvt+0x68>
 8001c82:	1c59      	adds	r1, r3, #1
 8001c84:	9107      	str	r1, [sp, #28]
 8001c86:	701a      	strb	r2, [r3, #0]
 8001c88:	e7d9      	b.n	8001c3e <__cvt+0x7c>

08001c8a <__exponent>:
 8001c8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001c8c:	2900      	cmp	r1, #0
 8001c8e:	bfb6      	itet	lt
 8001c90:	232d      	movlt	r3, #45	@ 0x2d
 8001c92:	232b      	movge	r3, #43	@ 0x2b
 8001c94:	4249      	neglt	r1, r1
 8001c96:	2909      	cmp	r1, #9
 8001c98:	7002      	strb	r2, [r0, #0]
 8001c9a:	7043      	strb	r3, [r0, #1]
 8001c9c:	dd29      	ble.n	8001cf2 <__exponent+0x68>
 8001c9e:	f10d 0307 	add.w	r3, sp, #7
 8001ca2:	461d      	mov	r5, r3
 8001ca4:	270a      	movs	r7, #10
 8001ca6:	fbb1 f6f7 	udiv	r6, r1, r7
 8001caa:	461a      	mov	r2, r3
 8001cac:	fb07 1416 	mls	r4, r7, r6, r1
 8001cb0:	3430      	adds	r4, #48	@ 0x30
 8001cb2:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001cb6:	460c      	mov	r4, r1
 8001cb8:	2c63      	cmp	r4, #99	@ 0x63
 8001cba:	4631      	mov	r1, r6
 8001cbc:	f103 33ff 	add.w	r3, r3, #4294967295
 8001cc0:	dcf1      	bgt.n	8001ca6 <__exponent+0x1c>
 8001cc2:	3130      	adds	r1, #48	@ 0x30
 8001cc4:	1e94      	subs	r4, r2, #2
 8001cc6:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001cca:	4623      	mov	r3, r4
 8001ccc:	1c41      	adds	r1, r0, #1
 8001cce:	42ab      	cmp	r3, r5
 8001cd0:	d30a      	bcc.n	8001ce8 <__exponent+0x5e>
 8001cd2:	f10d 0309 	add.w	r3, sp, #9
 8001cd6:	1a9b      	subs	r3, r3, r2
 8001cd8:	42ac      	cmp	r4, r5
 8001cda:	bf88      	it	hi
 8001cdc:	2300      	movhi	r3, #0
 8001cde:	3302      	adds	r3, #2
 8001ce0:	4403      	add	r3, r0
 8001ce2:	1a18      	subs	r0, r3, r0
 8001ce4:	b003      	add	sp, #12
 8001ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ce8:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001cec:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001cf0:	e7ed      	b.n	8001cce <__exponent+0x44>
 8001cf2:	2330      	movs	r3, #48	@ 0x30
 8001cf4:	3130      	adds	r1, #48	@ 0x30
 8001cf6:	7083      	strb	r3, [r0, #2]
 8001cf8:	70c1      	strb	r1, [r0, #3]
 8001cfa:	1d03      	adds	r3, r0, #4
 8001cfc:	e7f1      	b.n	8001ce2 <__exponent+0x58>
	...

08001d00 <_printf_float>:
 8001d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d04:	b091      	sub	sp, #68	@ 0x44
 8001d06:	460c      	mov	r4, r1
 8001d08:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8001d0c:	4616      	mov	r6, r2
 8001d0e:	461f      	mov	r7, r3
 8001d10:	4605      	mov	r5, r0
 8001d12:	f000 fdc5 	bl	80028a0 <_localeconv_r>
 8001d16:	6803      	ldr	r3, [r0, #0]
 8001d18:	4618      	mov	r0, r3
 8001d1a:	9308      	str	r3, [sp, #32]
 8001d1c:	f7fe fa28 	bl	8000170 <strlen>
 8001d20:	2300      	movs	r3, #0
 8001d22:	930e      	str	r3, [sp, #56]	@ 0x38
 8001d24:	f8d8 3000 	ldr.w	r3, [r8]
 8001d28:	9009      	str	r0, [sp, #36]	@ 0x24
 8001d2a:	3307      	adds	r3, #7
 8001d2c:	f023 0307 	bic.w	r3, r3, #7
 8001d30:	f103 0208 	add.w	r2, r3, #8
 8001d34:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001d38:	f8d4 b000 	ldr.w	fp, [r4]
 8001d3c:	f8c8 2000 	str.w	r2, [r8]
 8001d40:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001d44:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001d48:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001d4a:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8001d4e:	f04f 32ff 	mov.w	r2, #4294967295
 8001d52:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001d56:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001d5a:	4b9c      	ldr	r3, [pc, #624]	@ (8001fcc <_printf_float+0x2cc>)
 8001d5c:	f7fe ff1a 	bl	8000b94 <__aeabi_dcmpun>
 8001d60:	bb70      	cbnz	r0, 8001dc0 <_printf_float+0xc0>
 8001d62:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001d66:	f04f 32ff 	mov.w	r2, #4294967295
 8001d6a:	4b98      	ldr	r3, [pc, #608]	@ (8001fcc <_printf_float+0x2cc>)
 8001d6c:	f7fe fef4 	bl	8000b58 <__aeabi_dcmple>
 8001d70:	bb30      	cbnz	r0, 8001dc0 <_printf_float+0xc0>
 8001d72:	2200      	movs	r2, #0
 8001d74:	2300      	movs	r3, #0
 8001d76:	4640      	mov	r0, r8
 8001d78:	4649      	mov	r1, r9
 8001d7a:	f7fe fee3 	bl	8000b44 <__aeabi_dcmplt>
 8001d7e:	b110      	cbz	r0, 8001d86 <_printf_float+0x86>
 8001d80:	232d      	movs	r3, #45	@ 0x2d
 8001d82:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001d86:	4a92      	ldr	r2, [pc, #584]	@ (8001fd0 <_printf_float+0x2d0>)
 8001d88:	4b92      	ldr	r3, [pc, #584]	@ (8001fd4 <_printf_float+0x2d4>)
 8001d8a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001d8e:	bf94      	ite	ls
 8001d90:	4690      	movls	r8, r2
 8001d92:	4698      	movhi	r8, r3
 8001d94:	2303      	movs	r3, #3
 8001d96:	f04f 0900 	mov.w	r9, #0
 8001d9a:	6123      	str	r3, [r4, #16]
 8001d9c:	f02b 0304 	bic.w	r3, fp, #4
 8001da0:	6023      	str	r3, [r4, #0]
 8001da2:	4633      	mov	r3, r6
 8001da4:	4621      	mov	r1, r4
 8001da6:	4628      	mov	r0, r5
 8001da8:	9700      	str	r7, [sp, #0]
 8001daa:	aa0f      	add	r2, sp, #60	@ 0x3c
 8001dac:	f000 f9d4 	bl	8002158 <_printf_common>
 8001db0:	3001      	adds	r0, #1
 8001db2:	f040 8090 	bne.w	8001ed6 <_printf_float+0x1d6>
 8001db6:	f04f 30ff 	mov.w	r0, #4294967295
 8001dba:	b011      	add	sp, #68	@ 0x44
 8001dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001dc0:	4642      	mov	r2, r8
 8001dc2:	464b      	mov	r3, r9
 8001dc4:	4640      	mov	r0, r8
 8001dc6:	4649      	mov	r1, r9
 8001dc8:	f7fe fee4 	bl	8000b94 <__aeabi_dcmpun>
 8001dcc:	b148      	cbz	r0, 8001de2 <_printf_float+0xe2>
 8001dce:	464b      	mov	r3, r9
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	bfb8      	it	lt
 8001dd4:	232d      	movlt	r3, #45	@ 0x2d
 8001dd6:	4a80      	ldr	r2, [pc, #512]	@ (8001fd8 <_printf_float+0x2d8>)
 8001dd8:	bfb8      	it	lt
 8001dda:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001dde:	4b7f      	ldr	r3, [pc, #508]	@ (8001fdc <_printf_float+0x2dc>)
 8001de0:	e7d3      	b.n	8001d8a <_printf_float+0x8a>
 8001de2:	6863      	ldr	r3, [r4, #4]
 8001de4:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8001de8:	1c5a      	adds	r2, r3, #1
 8001dea:	d13f      	bne.n	8001e6c <_printf_float+0x16c>
 8001dec:	2306      	movs	r3, #6
 8001dee:	6063      	str	r3, [r4, #4]
 8001df0:	2200      	movs	r2, #0
 8001df2:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8001df6:	6023      	str	r3, [r4, #0]
 8001df8:	9206      	str	r2, [sp, #24]
 8001dfa:	aa0e      	add	r2, sp, #56	@ 0x38
 8001dfc:	e9cd a204 	strd	sl, r2, [sp, #16]
 8001e00:	aa0d      	add	r2, sp, #52	@ 0x34
 8001e02:	9203      	str	r2, [sp, #12]
 8001e04:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8001e08:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001e0c:	6863      	ldr	r3, [r4, #4]
 8001e0e:	4642      	mov	r2, r8
 8001e10:	9300      	str	r3, [sp, #0]
 8001e12:	4628      	mov	r0, r5
 8001e14:	464b      	mov	r3, r9
 8001e16:	910a      	str	r1, [sp, #40]	@ 0x28
 8001e18:	f7ff fed3 	bl	8001bc2 <__cvt>
 8001e1c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001e1e:	4680      	mov	r8, r0
 8001e20:	2947      	cmp	r1, #71	@ 0x47
 8001e22:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8001e24:	d128      	bne.n	8001e78 <_printf_float+0x178>
 8001e26:	1cc8      	adds	r0, r1, #3
 8001e28:	db02      	blt.n	8001e30 <_printf_float+0x130>
 8001e2a:	6863      	ldr	r3, [r4, #4]
 8001e2c:	4299      	cmp	r1, r3
 8001e2e:	dd40      	ble.n	8001eb2 <_printf_float+0x1b2>
 8001e30:	f1aa 0a02 	sub.w	sl, sl, #2
 8001e34:	fa5f fa8a 	uxtb.w	sl, sl
 8001e38:	4652      	mov	r2, sl
 8001e3a:	3901      	subs	r1, #1
 8001e3c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001e40:	910d      	str	r1, [sp, #52]	@ 0x34
 8001e42:	f7ff ff22 	bl	8001c8a <__exponent>
 8001e46:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001e48:	4681      	mov	r9, r0
 8001e4a:	1813      	adds	r3, r2, r0
 8001e4c:	2a01      	cmp	r2, #1
 8001e4e:	6123      	str	r3, [r4, #16]
 8001e50:	dc02      	bgt.n	8001e58 <_printf_float+0x158>
 8001e52:	6822      	ldr	r2, [r4, #0]
 8001e54:	07d2      	lsls	r2, r2, #31
 8001e56:	d501      	bpl.n	8001e5c <_printf_float+0x15c>
 8001e58:	3301      	adds	r3, #1
 8001e5a:	6123      	str	r3, [r4, #16]
 8001e5c:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d09e      	beq.n	8001da2 <_printf_float+0xa2>
 8001e64:	232d      	movs	r3, #45	@ 0x2d
 8001e66:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001e6a:	e79a      	b.n	8001da2 <_printf_float+0xa2>
 8001e6c:	2947      	cmp	r1, #71	@ 0x47
 8001e6e:	d1bf      	bne.n	8001df0 <_printf_float+0xf0>
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	d1bd      	bne.n	8001df0 <_printf_float+0xf0>
 8001e74:	2301      	movs	r3, #1
 8001e76:	e7ba      	b.n	8001dee <_printf_float+0xee>
 8001e78:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001e7c:	d9dc      	bls.n	8001e38 <_printf_float+0x138>
 8001e7e:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001e82:	d118      	bne.n	8001eb6 <_printf_float+0x1b6>
 8001e84:	2900      	cmp	r1, #0
 8001e86:	6863      	ldr	r3, [r4, #4]
 8001e88:	dd0b      	ble.n	8001ea2 <_printf_float+0x1a2>
 8001e8a:	6121      	str	r1, [r4, #16]
 8001e8c:	b913      	cbnz	r3, 8001e94 <_printf_float+0x194>
 8001e8e:	6822      	ldr	r2, [r4, #0]
 8001e90:	07d0      	lsls	r0, r2, #31
 8001e92:	d502      	bpl.n	8001e9a <_printf_float+0x19a>
 8001e94:	3301      	adds	r3, #1
 8001e96:	440b      	add	r3, r1
 8001e98:	6123      	str	r3, [r4, #16]
 8001e9a:	f04f 0900 	mov.w	r9, #0
 8001e9e:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001ea0:	e7dc      	b.n	8001e5c <_printf_float+0x15c>
 8001ea2:	b913      	cbnz	r3, 8001eaa <_printf_float+0x1aa>
 8001ea4:	6822      	ldr	r2, [r4, #0]
 8001ea6:	07d2      	lsls	r2, r2, #31
 8001ea8:	d501      	bpl.n	8001eae <_printf_float+0x1ae>
 8001eaa:	3302      	adds	r3, #2
 8001eac:	e7f4      	b.n	8001e98 <_printf_float+0x198>
 8001eae:	2301      	movs	r3, #1
 8001eb0:	e7f2      	b.n	8001e98 <_printf_float+0x198>
 8001eb2:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001eb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8001eb8:	4299      	cmp	r1, r3
 8001eba:	db05      	blt.n	8001ec8 <_printf_float+0x1c8>
 8001ebc:	6823      	ldr	r3, [r4, #0]
 8001ebe:	6121      	str	r1, [r4, #16]
 8001ec0:	07d8      	lsls	r0, r3, #31
 8001ec2:	d5ea      	bpl.n	8001e9a <_printf_float+0x19a>
 8001ec4:	1c4b      	adds	r3, r1, #1
 8001ec6:	e7e7      	b.n	8001e98 <_printf_float+0x198>
 8001ec8:	2900      	cmp	r1, #0
 8001eca:	bfcc      	ite	gt
 8001ecc:	2201      	movgt	r2, #1
 8001ece:	f1c1 0202 	rsble	r2, r1, #2
 8001ed2:	4413      	add	r3, r2
 8001ed4:	e7e0      	b.n	8001e98 <_printf_float+0x198>
 8001ed6:	6823      	ldr	r3, [r4, #0]
 8001ed8:	055a      	lsls	r2, r3, #21
 8001eda:	d407      	bmi.n	8001eec <_printf_float+0x1ec>
 8001edc:	6923      	ldr	r3, [r4, #16]
 8001ede:	4642      	mov	r2, r8
 8001ee0:	4631      	mov	r1, r6
 8001ee2:	4628      	mov	r0, r5
 8001ee4:	47b8      	blx	r7
 8001ee6:	3001      	adds	r0, #1
 8001ee8:	d12b      	bne.n	8001f42 <_printf_float+0x242>
 8001eea:	e764      	b.n	8001db6 <_printf_float+0xb6>
 8001eec:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001ef0:	f240 80dc 	bls.w	80020ac <_printf_float+0x3ac>
 8001ef4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001ef8:	2200      	movs	r2, #0
 8001efa:	2300      	movs	r3, #0
 8001efc:	f7fe fe18 	bl	8000b30 <__aeabi_dcmpeq>
 8001f00:	2800      	cmp	r0, #0
 8001f02:	d033      	beq.n	8001f6c <_printf_float+0x26c>
 8001f04:	2301      	movs	r3, #1
 8001f06:	4631      	mov	r1, r6
 8001f08:	4628      	mov	r0, r5
 8001f0a:	4a35      	ldr	r2, [pc, #212]	@ (8001fe0 <_printf_float+0x2e0>)
 8001f0c:	47b8      	blx	r7
 8001f0e:	3001      	adds	r0, #1
 8001f10:	f43f af51 	beq.w	8001db6 <_printf_float+0xb6>
 8001f14:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8001f18:	4543      	cmp	r3, r8
 8001f1a:	db02      	blt.n	8001f22 <_printf_float+0x222>
 8001f1c:	6823      	ldr	r3, [r4, #0]
 8001f1e:	07d8      	lsls	r0, r3, #31
 8001f20:	d50f      	bpl.n	8001f42 <_printf_float+0x242>
 8001f22:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001f26:	4631      	mov	r1, r6
 8001f28:	4628      	mov	r0, r5
 8001f2a:	47b8      	blx	r7
 8001f2c:	3001      	adds	r0, #1
 8001f2e:	f43f af42 	beq.w	8001db6 <_printf_float+0xb6>
 8001f32:	f04f 0900 	mov.w	r9, #0
 8001f36:	f108 38ff 	add.w	r8, r8, #4294967295
 8001f3a:	f104 0a1a 	add.w	sl, r4, #26
 8001f3e:	45c8      	cmp	r8, r9
 8001f40:	dc09      	bgt.n	8001f56 <_printf_float+0x256>
 8001f42:	6823      	ldr	r3, [r4, #0]
 8001f44:	079b      	lsls	r3, r3, #30
 8001f46:	f100 8102 	bmi.w	800214e <_printf_float+0x44e>
 8001f4a:	68e0      	ldr	r0, [r4, #12]
 8001f4c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001f4e:	4298      	cmp	r0, r3
 8001f50:	bfb8      	it	lt
 8001f52:	4618      	movlt	r0, r3
 8001f54:	e731      	b.n	8001dba <_printf_float+0xba>
 8001f56:	2301      	movs	r3, #1
 8001f58:	4652      	mov	r2, sl
 8001f5a:	4631      	mov	r1, r6
 8001f5c:	4628      	mov	r0, r5
 8001f5e:	47b8      	blx	r7
 8001f60:	3001      	adds	r0, #1
 8001f62:	f43f af28 	beq.w	8001db6 <_printf_float+0xb6>
 8001f66:	f109 0901 	add.w	r9, r9, #1
 8001f6a:	e7e8      	b.n	8001f3e <_printf_float+0x23e>
 8001f6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	dc38      	bgt.n	8001fe4 <_printf_float+0x2e4>
 8001f72:	2301      	movs	r3, #1
 8001f74:	4631      	mov	r1, r6
 8001f76:	4628      	mov	r0, r5
 8001f78:	4a19      	ldr	r2, [pc, #100]	@ (8001fe0 <_printf_float+0x2e0>)
 8001f7a:	47b8      	blx	r7
 8001f7c:	3001      	adds	r0, #1
 8001f7e:	f43f af1a 	beq.w	8001db6 <_printf_float+0xb6>
 8001f82:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001f86:	ea59 0303 	orrs.w	r3, r9, r3
 8001f8a:	d102      	bne.n	8001f92 <_printf_float+0x292>
 8001f8c:	6823      	ldr	r3, [r4, #0]
 8001f8e:	07d9      	lsls	r1, r3, #31
 8001f90:	d5d7      	bpl.n	8001f42 <_printf_float+0x242>
 8001f92:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001f96:	4631      	mov	r1, r6
 8001f98:	4628      	mov	r0, r5
 8001f9a:	47b8      	blx	r7
 8001f9c:	3001      	adds	r0, #1
 8001f9e:	f43f af0a 	beq.w	8001db6 <_printf_float+0xb6>
 8001fa2:	f04f 0a00 	mov.w	sl, #0
 8001fa6:	f104 0b1a 	add.w	fp, r4, #26
 8001faa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001fac:	425b      	negs	r3, r3
 8001fae:	4553      	cmp	r3, sl
 8001fb0:	dc01      	bgt.n	8001fb6 <_printf_float+0x2b6>
 8001fb2:	464b      	mov	r3, r9
 8001fb4:	e793      	b.n	8001ede <_printf_float+0x1de>
 8001fb6:	2301      	movs	r3, #1
 8001fb8:	465a      	mov	r2, fp
 8001fba:	4631      	mov	r1, r6
 8001fbc:	4628      	mov	r0, r5
 8001fbe:	47b8      	blx	r7
 8001fc0:	3001      	adds	r0, #1
 8001fc2:	f43f aef8 	beq.w	8001db6 <_printf_float+0xb6>
 8001fc6:	f10a 0a01 	add.w	sl, sl, #1
 8001fca:	e7ee      	b.n	8001faa <_printf_float+0x2aa>
 8001fcc:	7fefffff 	.word	0x7fefffff
 8001fd0:	0800467c 	.word	0x0800467c
 8001fd4:	08004680 	.word	0x08004680
 8001fd8:	08004684 	.word	0x08004684
 8001fdc:	08004688 	.word	0x08004688
 8001fe0:	0800468c 	.word	0x0800468c
 8001fe4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001fe6:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001fea:	4553      	cmp	r3, sl
 8001fec:	bfa8      	it	ge
 8001fee:	4653      	movge	r3, sl
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	4699      	mov	r9, r3
 8001ff4:	dc36      	bgt.n	8002064 <_printf_float+0x364>
 8001ff6:	f04f 0b00 	mov.w	fp, #0
 8001ffa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ffe:	f104 021a 	add.w	r2, r4, #26
 8002002:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002004:	930a      	str	r3, [sp, #40]	@ 0x28
 8002006:	eba3 0309 	sub.w	r3, r3, r9
 800200a:	455b      	cmp	r3, fp
 800200c:	dc31      	bgt.n	8002072 <_printf_float+0x372>
 800200e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002010:	459a      	cmp	sl, r3
 8002012:	dc3a      	bgt.n	800208a <_printf_float+0x38a>
 8002014:	6823      	ldr	r3, [r4, #0]
 8002016:	07da      	lsls	r2, r3, #31
 8002018:	d437      	bmi.n	800208a <_printf_float+0x38a>
 800201a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800201c:	ebaa 0903 	sub.w	r9, sl, r3
 8002020:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002022:	ebaa 0303 	sub.w	r3, sl, r3
 8002026:	4599      	cmp	r9, r3
 8002028:	bfa8      	it	ge
 800202a:	4699      	movge	r9, r3
 800202c:	f1b9 0f00 	cmp.w	r9, #0
 8002030:	dc33      	bgt.n	800209a <_printf_float+0x39a>
 8002032:	f04f 0800 	mov.w	r8, #0
 8002036:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800203a:	f104 0b1a 	add.w	fp, r4, #26
 800203e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002040:	ebaa 0303 	sub.w	r3, sl, r3
 8002044:	eba3 0309 	sub.w	r3, r3, r9
 8002048:	4543      	cmp	r3, r8
 800204a:	f77f af7a 	ble.w	8001f42 <_printf_float+0x242>
 800204e:	2301      	movs	r3, #1
 8002050:	465a      	mov	r2, fp
 8002052:	4631      	mov	r1, r6
 8002054:	4628      	mov	r0, r5
 8002056:	47b8      	blx	r7
 8002058:	3001      	adds	r0, #1
 800205a:	f43f aeac 	beq.w	8001db6 <_printf_float+0xb6>
 800205e:	f108 0801 	add.w	r8, r8, #1
 8002062:	e7ec      	b.n	800203e <_printf_float+0x33e>
 8002064:	4642      	mov	r2, r8
 8002066:	4631      	mov	r1, r6
 8002068:	4628      	mov	r0, r5
 800206a:	47b8      	blx	r7
 800206c:	3001      	adds	r0, #1
 800206e:	d1c2      	bne.n	8001ff6 <_printf_float+0x2f6>
 8002070:	e6a1      	b.n	8001db6 <_printf_float+0xb6>
 8002072:	2301      	movs	r3, #1
 8002074:	4631      	mov	r1, r6
 8002076:	4628      	mov	r0, r5
 8002078:	920a      	str	r2, [sp, #40]	@ 0x28
 800207a:	47b8      	blx	r7
 800207c:	3001      	adds	r0, #1
 800207e:	f43f ae9a 	beq.w	8001db6 <_printf_float+0xb6>
 8002082:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002084:	f10b 0b01 	add.w	fp, fp, #1
 8002088:	e7bb      	b.n	8002002 <_printf_float+0x302>
 800208a:	4631      	mov	r1, r6
 800208c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002090:	4628      	mov	r0, r5
 8002092:	47b8      	blx	r7
 8002094:	3001      	adds	r0, #1
 8002096:	d1c0      	bne.n	800201a <_printf_float+0x31a>
 8002098:	e68d      	b.n	8001db6 <_printf_float+0xb6>
 800209a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800209c:	464b      	mov	r3, r9
 800209e:	4631      	mov	r1, r6
 80020a0:	4628      	mov	r0, r5
 80020a2:	4442      	add	r2, r8
 80020a4:	47b8      	blx	r7
 80020a6:	3001      	adds	r0, #1
 80020a8:	d1c3      	bne.n	8002032 <_printf_float+0x332>
 80020aa:	e684      	b.n	8001db6 <_printf_float+0xb6>
 80020ac:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 80020b0:	f1ba 0f01 	cmp.w	sl, #1
 80020b4:	dc01      	bgt.n	80020ba <_printf_float+0x3ba>
 80020b6:	07db      	lsls	r3, r3, #31
 80020b8:	d536      	bpl.n	8002128 <_printf_float+0x428>
 80020ba:	2301      	movs	r3, #1
 80020bc:	4642      	mov	r2, r8
 80020be:	4631      	mov	r1, r6
 80020c0:	4628      	mov	r0, r5
 80020c2:	47b8      	blx	r7
 80020c4:	3001      	adds	r0, #1
 80020c6:	f43f ae76 	beq.w	8001db6 <_printf_float+0xb6>
 80020ca:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80020ce:	4631      	mov	r1, r6
 80020d0:	4628      	mov	r0, r5
 80020d2:	47b8      	blx	r7
 80020d4:	3001      	adds	r0, #1
 80020d6:	f43f ae6e 	beq.w	8001db6 <_printf_float+0xb6>
 80020da:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80020de:	2200      	movs	r2, #0
 80020e0:	2300      	movs	r3, #0
 80020e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80020e6:	f7fe fd23 	bl	8000b30 <__aeabi_dcmpeq>
 80020ea:	b9c0      	cbnz	r0, 800211e <_printf_float+0x41e>
 80020ec:	4653      	mov	r3, sl
 80020ee:	f108 0201 	add.w	r2, r8, #1
 80020f2:	4631      	mov	r1, r6
 80020f4:	4628      	mov	r0, r5
 80020f6:	47b8      	blx	r7
 80020f8:	3001      	adds	r0, #1
 80020fa:	d10c      	bne.n	8002116 <_printf_float+0x416>
 80020fc:	e65b      	b.n	8001db6 <_printf_float+0xb6>
 80020fe:	2301      	movs	r3, #1
 8002100:	465a      	mov	r2, fp
 8002102:	4631      	mov	r1, r6
 8002104:	4628      	mov	r0, r5
 8002106:	47b8      	blx	r7
 8002108:	3001      	adds	r0, #1
 800210a:	f43f ae54 	beq.w	8001db6 <_printf_float+0xb6>
 800210e:	f108 0801 	add.w	r8, r8, #1
 8002112:	45d0      	cmp	r8, sl
 8002114:	dbf3      	blt.n	80020fe <_printf_float+0x3fe>
 8002116:	464b      	mov	r3, r9
 8002118:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800211c:	e6e0      	b.n	8001ee0 <_printf_float+0x1e0>
 800211e:	f04f 0800 	mov.w	r8, #0
 8002122:	f104 0b1a 	add.w	fp, r4, #26
 8002126:	e7f4      	b.n	8002112 <_printf_float+0x412>
 8002128:	2301      	movs	r3, #1
 800212a:	4642      	mov	r2, r8
 800212c:	e7e1      	b.n	80020f2 <_printf_float+0x3f2>
 800212e:	2301      	movs	r3, #1
 8002130:	464a      	mov	r2, r9
 8002132:	4631      	mov	r1, r6
 8002134:	4628      	mov	r0, r5
 8002136:	47b8      	blx	r7
 8002138:	3001      	adds	r0, #1
 800213a:	f43f ae3c 	beq.w	8001db6 <_printf_float+0xb6>
 800213e:	f108 0801 	add.w	r8, r8, #1
 8002142:	68e3      	ldr	r3, [r4, #12]
 8002144:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8002146:	1a5b      	subs	r3, r3, r1
 8002148:	4543      	cmp	r3, r8
 800214a:	dcf0      	bgt.n	800212e <_printf_float+0x42e>
 800214c:	e6fd      	b.n	8001f4a <_printf_float+0x24a>
 800214e:	f04f 0800 	mov.w	r8, #0
 8002152:	f104 0919 	add.w	r9, r4, #25
 8002156:	e7f4      	b.n	8002142 <_printf_float+0x442>

08002158 <_printf_common>:
 8002158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800215c:	4616      	mov	r6, r2
 800215e:	4698      	mov	r8, r3
 8002160:	688a      	ldr	r2, [r1, #8]
 8002162:	690b      	ldr	r3, [r1, #16]
 8002164:	4607      	mov	r7, r0
 8002166:	4293      	cmp	r3, r2
 8002168:	bfb8      	it	lt
 800216a:	4613      	movlt	r3, r2
 800216c:	6033      	str	r3, [r6, #0]
 800216e:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002172:	460c      	mov	r4, r1
 8002174:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002178:	b10a      	cbz	r2, 800217e <_printf_common+0x26>
 800217a:	3301      	adds	r3, #1
 800217c:	6033      	str	r3, [r6, #0]
 800217e:	6823      	ldr	r3, [r4, #0]
 8002180:	0699      	lsls	r1, r3, #26
 8002182:	bf42      	ittt	mi
 8002184:	6833      	ldrmi	r3, [r6, #0]
 8002186:	3302      	addmi	r3, #2
 8002188:	6033      	strmi	r3, [r6, #0]
 800218a:	6825      	ldr	r5, [r4, #0]
 800218c:	f015 0506 	ands.w	r5, r5, #6
 8002190:	d106      	bne.n	80021a0 <_printf_common+0x48>
 8002192:	f104 0a19 	add.w	sl, r4, #25
 8002196:	68e3      	ldr	r3, [r4, #12]
 8002198:	6832      	ldr	r2, [r6, #0]
 800219a:	1a9b      	subs	r3, r3, r2
 800219c:	42ab      	cmp	r3, r5
 800219e:	dc2b      	bgt.n	80021f8 <_printf_common+0xa0>
 80021a0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80021a4:	6822      	ldr	r2, [r4, #0]
 80021a6:	3b00      	subs	r3, #0
 80021a8:	bf18      	it	ne
 80021aa:	2301      	movne	r3, #1
 80021ac:	0692      	lsls	r2, r2, #26
 80021ae:	d430      	bmi.n	8002212 <_printf_common+0xba>
 80021b0:	4641      	mov	r1, r8
 80021b2:	4638      	mov	r0, r7
 80021b4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80021b8:	47c8      	blx	r9
 80021ba:	3001      	adds	r0, #1
 80021bc:	d023      	beq.n	8002206 <_printf_common+0xae>
 80021be:	6823      	ldr	r3, [r4, #0]
 80021c0:	6922      	ldr	r2, [r4, #16]
 80021c2:	f003 0306 	and.w	r3, r3, #6
 80021c6:	2b04      	cmp	r3, #4
 80021c8:	bf14      	ite	ne
 80021ca:	2500      	movne	r5, #0
 80021cc:	6833      	ldreq	r3, [r6, #0]
 80021ce:	f04f 0600 	mov.w	r6, #0
 80021d2:	bf08      	it	eq
 80021d4:	68e5      	ldreq	r5, [r4, #12]
 80021d6:	f104 041a 	add.w	r4, r4, #26
 80021da:	bf08      	it	eq
 80021dc:	1aed      	subeq	r5, r5, r3
 80021de:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80021e2:	bf08      	it	eq
 80021e4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80021e8:	4293      	cmp	r3, r2
 80021ea:	bfc4      	itt	gt
 80021ec:	1a9b      	subgt	r3, r3, r2
 80021ee:	18ed      	addgt	r5, r5, r3
 80021f0:	42b5      	cmp	r5, r6
 80021f2:	d11a      	bne.n	800222a <_printf_common+0xd2>
 80021f4:	2000      	movs	r0, #0
 80021f6:	e008      	b.n	800220a <_printf_common+0xb2>
 80021f8:	2301      	movs	r3, #1
 80021fa:	4652      	mov	r2, sl
 80021fc:	4641      	mov	r1, r8
 80021fe:	4638      	mov	r0, r7
 8002200:	47c8      	blx	r9
 8002202:	3001      	adds	r0, #1
 8002204:	d103      	bne.n	800220e <_printf_common+0xb6>
 8002206:	f04f 30ff 	mov.w	r0, #4294967295
 800220a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800220e:	3501      	adds	r5, #1
 8002210:	e7c1      	b.n	8002196 <_printf_common+0x3e>
 8002212:	2030      	movs	r0, #48	@ 0x30
 8002214:	18e1      	adds	r1, r4, r3
 8002216:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800221a:	1c5a      	adds	r2, r3, #1
 800221c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002220:	4422      	add	r2, r4
 8002222:	3302      	adds	r3, #2
 8002224:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002228:	e7c2      	b.n	80021b0 <_printf_common+0x58>
 800222a:	2301      	movs	r3, #1
 800222c:	4622      	mov	r2, r4
 800222e:	4641      	mov	r1, r8
 8002230:	4638      	mov	r0, r7
 8002232:	47c8      	blx	r9
 8002234:	3001      	adds	r0, #1
 8002236:	d0e6      	beq.n	8002206 <_printf_common+0xae>
 8002238:	3601      	adds	r6, #1
 800223a:	e7d9      	b.n	80021f0 <_printf_common+0x98>

0800223c <_printf_i>:
 800223c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002240:	7e0f      	ldrb	r7, [r1, #24]
 8002242:	4691      	mov	r9, r2
 8002244:	2f78      	cmp	r7, #120	@ 0x78
 8002246:	4680      	mov	r8, r0
 8002248:	460c      	mov	r4, r1
 800224a:	469a      	mov	sl, r3
 800224c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800224e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002252:	d807      	bhi.n	8002264 <_printf_i+0x28>
 8002254:	2f62      	cmp	r7, #98	@ 0x62
 8002256:	d80a      	bhi.n	800226e <_printf_i+0x32>
 8002258:	2f00      	cmp	r7, #0
 800225a:	f000 80d3 	beq.w	8002404 <_printf_i+0x1c8>
 800225e:	2f58      	cmp	r7, #88	@ 0x58
 8002260:	f000 80ba 	beq.w	80023d8 <_printf_i+0x19c>
 8002264:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002268:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800226c:	e03a      	b.n	80022e4 <_printf_i+0xa8>
 800226e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002272:	2b15      	cmp	r3, #21
 8002274:	d8f6      	bhi.n	8002264 <_printf_i+0x28>
 8002276:	a101      	add	r1, pc, #4	@ (adr r1, 800227c <_printf_i+0x40>)
 8002278:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800227c:	080022d5 	.word	0x080022d5
 8002280:	080022e9 	.word	0x080022e9
 8002284:	08002265 	.word	0x08002265
 8002288:	08002265 	.word	0x08002265
 800228c:	08002265 	.word	0x08002265
 8002290:	08002265 	.word	0x08002265
 8002294:	080022e9 	.word	0x080022e9
 8002298:	08002265 	.word	0x08002265
 800229c:	08002265 	.word	0x08002265
 80022a0:	08002265 	.word	0x08002265
 80022a4:	08002265 	.word	0x08002265
 80022a8:	080023eb 	.word	0x080023eb
 80022ac:	08002313 	.word	0x08002313
 80022b0:	080023a5 	.word	0x080023a5
 80022b4:	08002265 	.word	0x08002265
 80022b8:	08002265 	.word	0x08002265
 80022bc:	0800240d 	.word	0x0800240d
 80022c0:	08002265 	.word	0x08002265
 80022c4:	08002313 	.word	0x08002313
 80022c8:	08002265 	.word	0x08002265
 80022cc:	08002265 	.word	0x08002265
 80022d0:	080023ad 	.word	0x080023ad
 80022d4:	6833      	ldr	r3, [r6, #0]
 80022d6:	1d1a      	adds	r2, r3, #4
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	6032      	str	r2, [r6, #0]
 80022dc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80022e0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80022e4:	2301      	movs	r3, #1
 80022e6:	e09e      	b.n	8002426 <_printf_i+0x1ea>
 80022e8:	6833      	ldr	r3, [r6, #0]
 80022ea:	6820      	ldr	r0, [r4, #0]
 80022ec:	1d19      	adds	r1, r3, #4
 80022ee:	6031      	str	r1, [r6, #0]
 80022f0:	0606      	lsls	r6, r0, #24
 80022f2:	d501      	bpl.n	80022f8 <_printf_i+0xbc>
 80022f4:	681d      	ldr	r5, [r3, #0]
 80022f6:	e003      	b.n	8002300 <_printf_i+0xc4>
 80022f8:	0645      	lsls	r5, r0, #25
 80022fa:	d5fb      	bpl.n	80022f4 <_printf_i+0xb8>
 80022fc:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002300:	2d00      	cmp	r5, #0
 8002302:	da03      	bge.n	800230c <_printf_i+0xd0>
 8002304:	232d      	movs	r3, #45	@ 0x2d
 8002306:	426d      	negs	r5, r5
 8002308:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800230c:	230a      	movs	r3, #10
 800230e:	4859      	ldr	r0, [pc, #356]	@ (8002474 <_printf_i+0x238>)
 8002310:	e011      	b.n	8002336 <_printf_i+0xfa>
 8002312:	6821      	ldr	r1, [r4, #0]
 8002314:	6833      	ldr	r3, [r6, #0]
 8002316:	0608      	lsls	r0, r1, #24
 8002318:	f853 5b04 	ldr.w	r5, [r3], #4
 800231c:	d402      	bmi.n	8002324 <_printf_i+0xe8>
 800231e:	0649      	lsls	r1, r1, #25
 8002320:	bf48      	it	mi
 8002322:	b2ad      	uxthmi	r5, r5
 8002324:	2f6f      	cmp	r7, #111	@ 0x6f
 8002326:	6033      	str	r3, [r6, #0]
 8002328:	bf14      	ite	ne
 800232a:	230a      	movne	r3, #10
 800232c:	2308      	moveq	r3, #8
 800232e:	4851      	ldr	r0, [pc, #324]	@ (8002474 <_printf_i+0x238>)
 8002330:	2100      	movs	r1, #0
 8002332:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002336:	6866      	ldr	r6, [r4, #4]
 8002338:	2e00      	cmp	r6, #0
 800233a:	bfa8      	it	ge
 800233c:	6821      	ldrge	r1, [r4, #0]
 800233e:	60a6      	str	r6, [r4, #8]
 8002340:	bfa4      	itt	ge
 8002342:	f021 0104 	bicge.w	r1, r1, #4
 8002346:	6021      	strge	r1, [r4, #0]
 8002348:	b90d      	cbnz	r5, 800234e <_printf_i+0x112>
 800234a:	2e00      	cmp	r6, #0
 800234c:	d04b      	beq.n	80023e6 <_printf_i+0x1aa>
 800234e:	4616      	mov	r6, r2
 8002350:	fbb5 f1f3 	udiv	r1, r5, r3
 8002354:	fb03 5711 	mls	r7, r3, r1, r5
 8002358:	5dc7      	ldrb	r7, [r0, r7]
 800235a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800235e:	462f      	mov	r7, r5
 8002360:	42bb      	cmp	r3, r7
 8002362:	460d      	mov	r5, r1
 8002364:	d9f4      	bls.n	8002350 <_printf_i+0x114>
 8002366:	2b08      	cmp	r3, #8
 8002368:	d10b      	bne.n	8002382 <_printf_i+0x146>
 800236a:	6823      	ldr	r3, [r4, #0]
 800236c:	07df      	lsls	r7, r3, #31
 800236e:	d508      	bpl.n	8002382 <_printf_i+0x146>
 8002370:	6923      	ldr	r3, [r4, #16]
 8002372:	6861      	ldr	r1, [r4, #4]
 8002374:	4299      	cmp	r1, r3
 8002376:	bfde      	ittt	le
 8002378:	2330      	movle	r3, #48	@ 0x30
 800237a:	f806 3c01 	strble.w	r3, [r6, #-1]
 800237e:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002382:	1b92      	subs	r2, r2, r6
 8002384:	6122      	str	r2, [r4, #16]
 8002386:	464b      	mov	r3, r9
 8002388:	4621      	mov	r1, r4
 800238a:	4640      	mov	r0, r8
 800238c:	f8cd a000 	str.w	sl, [sp]
 8002390:	aa03      	add	r2, sp, #12
 8002392:	f7ff fee1 	bl	8002158 <_printf_common>
 8002396:	3001      	adds	r0, #1
 8002398:	d14a      	bne.n	8002430 <_printf_i+0x1f4>
 800239a:	f04f 30ff 	mov.w	r0, #4294967295
 800239e:	b004      	add	sp, #16
 80023a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023a4:	6823      	ldr	r3, [r4, #0]
 80023a6:	f043 0320 	orr.w	r3, r3, #32
 80023aa:	6023      	str	r3, [r4, #0]
 80023ac:	2778      	movs	r7, #120	@ 0x78
 80023ae:	4832      	ldr	r0, [pc, #200]	@ (8002478 <_printf_i+0x23c>)
 80023b0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80023b4:	6823      	ldr	r3, [r4, #0]
 80023b6:	6831      	ldr	r1, [r6, #0]
 80023b8:	061f      	lsls	r7, r3, #24
 80023ba:	f851 5b04 	ldr.w	r5, [r1], #4
 80023be:	d402      	bmi.n	80023c6 <_printf_i+0x18a>
 80023c0:	065f      	lsls	r7, r3, #25
 80023c2:	bf48      	it	mi
 80023c4:	b2ad      	uxthmi	r5, r5
 80023c6:	6031      	str	r1, [r6, #0]
 80023c8:	07d9      	lsls	r1, r3, #31
 80023ca:	bf44      	itt	mi
 80023cc:	f043 0320 	orrmi.w	r3, r3, #32
 80023d0:	6023      	strmi	r3, [r4, #0]
 80023d2:	b11d      	cbz	r5, 80023dc <_printf_i+0x1a0>
 80023d4:	2310      	movs	r3, #16
 80023d6:	e7ab      	b.n	8002330 <_printf_i+0xf4>
 80023d8:	4826      	ldr	r0, [pc, #152]	@ (8002474 <_printf_i+0x238>)
 80023da:	e7e9      	b.n	80023b0 <_printf_i+0x174>
 80023dc:	6823      	ldr	r3, [r4, #0]
 80023de:	f023 0320 	bic.w	r3, r3, #32
 80023e2:	6023      	str	r3, [r4, #0]
 80023e4:	e7f6      	b.n	80023d4 <_printf_i+0x198>
 80023e6:	4616      	mov	r6, r2
 80023e8:	e7bd      	b.n	8002366 <_printf_i+0x12a>
 80023ea:	6833      	ldr	r3, [r6, #0]
 80023ec:	6825      	ldr	r5, [r4, #0]
 80023ee:	1d18      	adds	r0, r3, #4
 80023f0:	6961      	ldr	r1, [r4, #20]
 80023f2:	6030      	str	r0, [r6, #0]
 80023f4:	062e      	lsls	r6, r5, #24
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	d501      	bpl.n	80023fe <_printf_i+0x1c2>
 80023fa:	6019      	str	r1, [r3, #0]
 80023fc:	e002      	b.n	8002404 <_printf_i+0x1c8>
 80023fe:	0668      	lsls	r0, r5, #25
 8002400:	d5fb      	bpl.n	80023fa <_printf_i+0x1be>
 8002402:	8019      	strh	r1, [r3, #0]
 8002404:	2300      	movs	r3, #0
 8002406:	4616      	mov	r6, r2
 8002408:	6123      	str	r3, [r4, #16]
 800240a:	e7bc      	b.n	8002386 <_printf_i+0x14a>
 800240c:	6833      	ldr	r3, [r6, #0]
 800240e:	2100      	movs	r1, #0
 8002410:	1d1a      	adds	r2, r3, #4
 8002412:	6032      	str	r2, [r6, #0]
 8002414:	681e      	ldr	r6, [r3, #0]
 8002416:	6862      	ldr	r2, [r4, #4]
 8002418:	4630      	mov	r0, r6
 800241a:	f000 fab8 	bl	800298e <memchr>
 800241e:	b108      	cbz	r0, 8002424 <_printf_i+0x1e8>
 8002420:	1b80      	subs	r0, r0, r6
 8002422:	6060      	str	r0, [r4, #4]
 8002424:	6863      	ldr	r3, [r4, #4]
 8002426:	6123      	str	r3, [r4, #16]
 8002428:	2300      	movs	r3, #0
 800242a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800242e:	e7aa      	b.n	8002386 <_printf_i+0x14a>
 8002430:	4632      	mov	r2, r6
 8002432:	4649      	mov	r1, r9
 8002434:	4640      	mov	r0, r8
 8002436:	6923      	ldr	r3, [r4, #16]
 8002438:	47d0      	blx	sl
 800243a:	3001      	adds	r0, #1
 800243c:	d0ad      	beq.n	800239a <_printf_i+0x15e>
 800243e:	6823      	ldr	r3, [r4, #0]
 8002440:	079b      	lsls	r3, r3, #30
 8002442:	d413      	bmi.n	800246c <_printf_i+0x230>
 8002444:	68e0      	ldr	r0, [r4, #12]
 8002446:	9b03      	ldr	r3, [sp, #12]
 8002448:	4298      	cmp	r0, r3
 800244a:	bfb8      	it	lt
 800244c:	4618      	movlt	r0, r3
 800244e:	e7a6      	b.n	800239e <_printf_i+0x162>
 8002450:	2301      	movs	r3, #1
 8002452:	4632      	mov	r2, r6
 8002454:	4649      	mov	r1, r9
 8002456:	4640      	mov	r0, r8
 8002458:	47d0      	blx	sl
 800245a:	3001      	adds	r0, #1
 800245c:	d09d      	beq.n	800239a <_printf_i+0x15e>
 800245e:	3501      	adds	r5, #1
 8002460:	68e3      	ldr	r3, [r4, #12]
 8002462:	9903      	ldr	r1, [sp, #12]
 8002464:	1a5b      	subs	r3, r3, r1
 8002466:	42ab      	cmp	r3, r5
 8002468:	dcf2      	bgt.n	8002450 <_printf_i+0x214>
 800246a:	e7eb      	b.n	8002444 <_printf_i+0x208>
 800246c:	2500      	movs	r5, #0
 800246e:	f104 0619 	add.w	r6, r4, #25
 8002472:	e7f5      	b.n	8002460 <_printf_i+0x224>
 8002474:	0800468e 	.word	0x0800468e
 8002478:	0800469f 	.word	0x0800469f

0800247c <std>:
 800247c:	2300      	movs	r3, #0
 800247e:	b510      	push	{r4, lr}
 8002480:	4604      	mov	r4, r0
 8002482:	e9c0 3300 	strd	r3, r3, [r0]
 8002486:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800248a:	6083      	str	r3, [r0, #8]
 800248c:	8181      	strh	r1, [r0, #12]
 800248e:	6643      	str	r3, [r0, #100]	@ 0x64
 8002490:	81c2      	strh	r2, [r0, #14]
 8002492:	6183      	str	r3, [r0, #24]
 8002494:	4619      	mov	r1, r3
 8002496:	2208      	movs	r2, #8
 8002498:	305c      	adds	r0, #92	@ 0x5c
 800249a:	f000 f9f9 	bl	8002890 <memset>
 800249e:	4b0d      	ldr	r3, [pc, #52]	@ (80024d4 <std+0x58>)
 80024a0:	6224      	str	r4, [r4, #32]
 80024a2:	6263      	str	r3, [r4, #36]	@ 0x24
 80024a4:	4b0c      	ldr	r3, [pc, #48]	@ (80024d8 <std+0x5c>)
 80024a6:	62a3      	str	r3, [r4, #40]	@ 0x28
 80024a8:	4b0c      	ldr	r3, [pc, #48]	@ (80024dc <std+0x60>)
 80024aa:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80024ac:	4b0c      	ldr	r3, [pc, #48]	@ (80024e0 <std+0x64>)
 80024ae:	6323      	str	r3, [r4, #48]	@ 0x30
 80024b0:	4b0c      	ldr	r3, [pc, #48]	@ (80024e4 <std+0x68>)
 80024b2:	429c      	cmp	r4, r3
 80024b4:	d006      	beq.n	80024c4 <std+0x48>
 80024b6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80024ba:	4294      	cmp	r4, r2
 80024bc:	d002      	beq.n	80024c4 <std+0x48>
 80024be:	33d0      	adds	r3, #208	@ 0xd0
 80024c0:	429c      	cmp	r4, r3
 80024c2:	d105      	bne.n	80024d0 <std+0x54>
 80024c4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80024c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024cc:	f000 ba5c 	b.w	8002988 <__retarget_lock_init_recursive>
 80024d0:	bd10      	pop	{r4, pc}
 80024d2:	bf00      	nop
 80024d4:	080026e1 	.word	0x080026e1
 80024d8:	08002703 	.word	0x08002703
 80024dc:	0800273b 	.word	0x0800273b
 80024e0:	0800275f 	.word	0x0800275f
 80024e4:	20000428 	.word	0x20000428

080024e8 <stdio_exit_handler>:
 80024e8:	4a02      	ldr	r2, [pc, #8]	@ (80024f4 <stdio_exit_handler+0xc>)
 80024ea:	4903      	ldr	r1, [pc, #12]	@ (80024f8 <stdio_exit_handler+0x10>)
 80024ec:	4803      	ldr	r0, [pc, #12]	@ (80024fc <stdio_exit_handler+0x14>)
 80024ee:	f000 b869 	b.w	80025c4 <_fwalk_sglue>
 80024f2:	bf00      	nop
 80024f4:	20000004 	.word	0x20000004
 80024f8:	080042cd 	.word	0x080042cd
 80024fc:	20000014 	.word	0x20000014

08002500 <cleanup_stdio>:
 8002500:	6841      	ldr	r1, [r0, #4]
 8002502:	4b0c      	ldr	r3, [pc, #48]	@ (8002534 <cleanup_stdio+0x34>)
 8002504:	b510      	push	{r4, lr}
 8002506:	4299      	cmp	r1, r3
 8002508:	4604      	mov	r4, r0
 800250a:	d001      	beq.n	8002510 <cleanup_stdio+0x10>
 800250c:	f001 fede 	bl	80042cc <_fflush_r>
 8002510:	68a1      	ldr	r1, [r4, #8]
 8002512:	4b09      	ldr	r3, [pc, #36]	@ (8002538 <cleanup_stdio+0x38>)
 8002514:	4299      	cmp	r1, r3
 8002516:	d002      	beq.n	800251e <cleanup_stdio+0x1e>
 8002518:	4620      	mov	r0, r4
 800251a:	f001 fed7 	bl	80042cc <_fflush_r>
 800251e:	68e1      	ldr	r1, [r4, #12]
 8002520:	4b06      	ldr	r3, [pc, #24]	@ (800253c <cleanup_stdio+0x3c>)
 8002522:	4299      	cmp	r1, r3
 8002524:	d004      	beq.n	8002530 <cleanup_stdio+0x30>
 8002526:	4620      	mov	r0, r4
 8002528:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800252c:	f001 bece 	b.w	80042cc <_fflush_r>
 8002530:	bd10      	pop	{r4, pc}
 8002532:	bf00      	nop
 8002534:	20000428 	.word	0x20000428
 8002538:	20000490 	.word	0x20000490
 800253c:	200004f8 	.word	0x200004f8

08002540 <global_stdio_init.part.0>:
 8002540:	b510      	push	{r4, lr}
 8002542:	4b0b      	ldr	r3, [pc, #44]	@ (8002570 <global_stdio_init.part.0+0x30>)
 8002544:	4c0b      	ldr	r4, [pc, #44]	@ (8002574 <global_stdio_init.part.0+0x34>)
 8002546:	4a0c      	ldr	r2, [pc, #48]	@ (8002578 <global_stdio_init.part.0+0x38>)
 8002548:	4620      	mov	r0, r4
 800254a:	601a      	str	r2, [r3, #0]
 800254c:	2104      	movs	r1, #4
 800254e:	2200      	movs	r2, #0
 8002550:	f7ff ff94 	bl	800247c <std>
 8002554:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002558:	2201      	movs	r2, #1
 800255a:	2109      	movs	r1, #9
 800255c:	f7ff ff8e 	bl	800247c <std>
 8002560:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002564:	2202      	movs	r2, #2
 8002566:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800256a:	2112      	movs	r1, #18
 800256c:	f7ff bf86 	b.w	800247c <std>
 8002570:	20000560 	.word	0x20000560
 8002574:	20000428 	.word	0x20000428
 8002578:	080024e9 	.word	0x080024e9

0800257c <__sfp_lock_acquire>:
 800257c:	4801      	ldr	r0, [pc, #4]	@ (8002584 <__sfp_lock_acquire+0x8>)
 800257e:	f000 ba04 	b.w	800298a <__retarget_lock_acquire_recursive>
 8002582:	bf00      	nop
 8002584:	20000569 	.word	0x20000569

08002588 <__sfp_lock_release>:
 8002588:	4801      	ldr	r0, [pc, #4]	@ (8002590 <__sfp_lock_release+0x8>)
 800258a:	f000 b9ff 	b.w	800298c <__retarget_lock_release_recursive>
 800258e:	bf00      	nop
 8002590:	20000569 	.word	0x20000569

08002594 <__sinit>:
 8002594:	b510      	push	{r4, lr}
 8002596:	4604      	mov	r4, r0
 8002598:	f7ff fff0 	bl	800257c <__sfp_lock_acquire>
 800259c:	6a23      	ldr	r3, [r4, #32]
 800259e:	b11b      	cbz	r3, 80025a8 <__sinit+0x14>
 80025a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80025a4:	f7ff bff0 	b.w	8002588 <__sfp_lock_release>
 80025a8:	4b04      	ldr	r3, [pc, #16]	@ (80025bc <__sinit+0x28>)
 80025aa:	6223      	str	r3, [r4, #32]
 80025ac:	4b04      	ldr	r3, [pc, #16]	@ (80025c0 <__sinit+0x2c>)
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d1f5      	bne.n	80025a0 <__sinit+0xc>
 80025b4:	f7ff ffc4 	bl	8002540 <global_stdio_init.part.0>
 80025b8:	e7f2      	b.n	80025a0 <__sinit+0xc>
 80025ba:	bf00      	nop
 80025bc:	08002501 	.word	0x08002501
 80025c0:	20000560 	.word	0x20000560

080025c4 <_fwalk_sglue>:
 80025c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80025c8:	4607      	mov	r7, r0
 80025ca:	4688      	mov	r8, r1
 80025cc:	4614      	mov	r4, r2
 80025ce:	2600      	movs	r6, #0
 80025d0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80025d4:	f1b9 0901 	subs.w	r9, r9, #1
 80025d8:	d505      	bpl.n	80025e6 <_fwalk_sglue+0x22>
 80025da:	6824      	ldr	r4, [r4, #0]
 80025dc:	2c00      	cmp	r4, #0
 80025de:	d1f7      	bne.n	80025d0 <_fwalk_sglue+0xc>
 80025e0:	4630      	mov	r0, r6
 80025e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80025e6:	89ab      	ldrh	r3, [r5, #12]
 80025e8:	2b01      	cmp	r3, #1
 80025ea:	d907      	bls.n	80025fc <_fwalk_sglue+0x38>
 80025ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80025f0:	3301      	adds	r3, #1
 80025f2:	d003      	beq.n	80025fc <_fwalk_sglue+0x38>
 80025f4:	4629      	mov	r1, r5
 80025f6:	4638      	mov	r0, r7
 80025f8:	47c0      	blx	r8
 80025fa:	4306      	orrs	r6, r0
 80025fc:	3568      	adds	r5, #104	@ 0x68
 80025fe:	e7e9      	b.n	80025d4 <_fwalk_sglue+0x10>

08002600 <iprintf>:
 8002600:	b40f      	push	{r0, r1, r2, r3}
 8002602:	b507      	push	{r0, r1, r2, lr}
 8002604:	4906      	ldr	r1, [pc, #24]	@ (8002620 <iprintf+0x20>)
 8002606:	ab04      	add	r3, sp, #16
 8002608:	6808      	ldr	r0, [r1, #0]
 800260a:	f853 2b04 	ldr.w	r2, [r3], #4
 800260e:	6881      	ldr	r1, [r0, #8]
 8002610:	9301      	str	r3, [sp, #4]
 8002612:	f001 fcc3 	bl	8003f9c <_vfiprintf_r>
 8002616:	b003      	add	sp, #12
 8002618:	f85d eb04 	ldr.w	lr, [sp], #4
 800261c:	b004      	add	sp, #16
 800261e:	4770      	bx	lr
 8002620:	20000010 	.word	0x20000010

08002624 <_puts_r>:
 8002624:	6a03      	ldr	r3, [r0, #32]
 8002626:	b570      	push	{r4, r5, r6, lr}
 8002628:	4605      	mov	r5, r0
 800262a:	460e      	mov	r6, r1
 800262c:	6884      	ldr	r4, [r0, #8]
 800262e:	b90b      	cbnz	r3, 8002634 <_puts_r+0x10>
 8002630:	f7ff ffb0 	bl	8002594 <__sinit>
 8002634:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002636:	07db      	lsls	r3, r3, #31
 8002638:	d405      	bmi.n	8002646 <_puts_r+0x22>
 800263a:	89a3      	ldrh	r3, [r4, #12]
 800263c:	0598      	lsls	r0, r3, #22
 800263e:	d402      	bmi.n	8002646 <_puts_r+0x22>
 8002640:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002642:	f000 f9a2 	bl	800298a <__retarget_lock_acquire_recursive>
 8002646:	89a3      	ldrh	r3, [r4, #12]
 8002648:	0719      	lsls	r1, r3, #28
 800264a:	d502      	bpl.n	8002652 <_puts_r+0x2e>
 800264c:	6923      	ldr	r3, [r4, #16]
 800264e:	2b00      	cmp	r3, #0
 8002650:	d135      	bne.n	80026be <_puts_r+0x9a>
 8002652:	4621      	mov	r1, r4
 8002654:	4628      	mov	r0, r5
 8002656:	f000 f8c5 	bl	80027e4 <__swsetup_r>
 800265a:	b380      	cbz	r0, 80026be <_puts_r+0x9a>
 800265c:	f04f 35ff 	mov.w	r5, #4294967295
 8002660:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8002662:	07da      	lsls	r2, r3, #31
 8002664:	d405      	bmi.n	8002672 <_puts_r+0x4e>
 8002666:	89a3      	ldrh	r3, [r4, #12]
 8002668:	059b      	lsls	r3, r3, #22
 800266a:	d402      	bmi.n	8002672 <_puts_r+0x4e>
 800266c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800266e:	f000 f98d 	bl	800298c <__retarget_lock_release_recursive>
 8002672:	4628      	mov	r0, r5
 8002674:	bd70      	pop	{r4, r5, r6, pc}
 8002676:	2b00      	cmp	r3, #0
 8002678:	da04      	bge.n	8002684 <_puts_r+0x60>
 800267a:	69a2      	ldr	r2, [r4, #24]
 800267c:	429a      	cmp	r2, r3
 800267e:	dc17      	bgt.n	80026b0 <_puts_r+0x8c>
 8002680:	290a      	cmp	r1, #10
 8002682:	d015      	beq.n	80026b0 <_puts_r+0x8c>
 8002684:	6823      	ldr	r3, [r4, #0]
 8002686:	1c5a      	adds	r2, r3, #1
 8002688:	6022      	str	r2, [r4, #0]
 800268a:	7019      	strb	r1, [r3, #0]
 800268c:	68a3      	ldr	r3, [r4, #8]
 800268e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002692:	3b01      	subs	r3, #1
 8002694:	60a3      	str	r3, [r4, #8]
 8002696:	2900      	cmp	r1, #0
 8002698:	d1ed      	bne.n	8002676 <_puts_r+0x52>
 800269a:	2b00      	cmp	r3, #0
 800269c:	da11      	bge.n	80026c2 <_puts_r+0x9e>
 800269e:	4622      	mov	r2, r4
 80026a0:	210a      	movs	r1, #10
 80026a2:	4628      	mov	r0, r5
 80026a4:	f000 f85f 	bl	8002766 <__swbuf_r>
 80026a8:	3001      	adds	r0, #1
 80026aa:	d0d7      	beq.n	800265c <_puts_r+0x38>
 80026ac:	250a      	movs	r5, #10
 80026ae:	e7d7      	b.n	8002660 <_puts_r+0x3c>
 80026b0:	4622      	mov	r2, r4
 80026b2:	4628      	mov	r0, r5
 80026b4:	f000 f857 	bl	8002766 <__swbuf_r>
 80026b8:	3001      	adds	r0, #1
 80026ba:	d1e7      	bne.n	800268c <_puts_r+0x68>
 80026bc:	e7ce      	b.n	800265c <_puts_r+0x38>
 80026be:	3e01      	subs	r6, #1
 80026c0:	e7e4      	b.n	800268c <_puts_r+0x68>
 80026c2:	6823      	ldr	r3, [r4, #0]
 80026c4:	1c5a      	adds	r2, r3, #1
 80026c6:	6022      	str	r2, [r4, #0]
 80026c8:	220a      	movs	r2, #10
 80026ca:	701a      	strb	r2, [r3, #0]
 80026cc:	e7ee      	b.n	80026ac <_puts_r+0x88>
	...

080026d0 <puts>:
 80026d0:	4b02      	ldr	r3, [pc, #8]	@ (80026dc <puts+0xc>)
 80026d2:	4601      	mov	r1, r0
 80026d4:	6818      	ldr	r0, [r3, #0]
 80026d6:	f7ff bfa5 	b.w	8002624 <_puts_r>
 80026da:	bf00      	nop
 80026dc:	20000010 	.word	0x20000010

080026e0 <__sread>:
 80026e0:	b510      	push	{r4, lr}
 80026e2:	460c      	mov	r4, r1
 80026e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80026e8:	f000 f900 	bl	80028ec <_read_r>
 80026ec:	2800      	cmp	r0, #0
 80026ee:	bfab      	itete	ge
 80026f0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80026f2:	89a3      	ldrhlt	r3, [r4, #12]
 80026f4:	181b      	addge	r3, r3, r0
 80026f6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80026fa:	bfac      	ite	ge
 80026fc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80026fe:	81a3      	strhlt	r3, [r4, #12]
 8002700:	bd10      	pop	{r4, pc}

08002702 <__swrite>:
 8002702:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002706:	461f      	mov	r7, r3
 8002708:	898b      	ldrh	r3, [r1, #12]
 800270a:	4605      	mov	r5, r0
 800270c:	05db      	lsls	r3, r3, #23
 800270e:	460c      	mov	r4, r1
 8002710:	4616      	mov	r6, r2
 8002712:	d505      	bpl.n	8002720 <__swrite+0x1e>
 8002714:	2302      	movs	r3, #2
 8002716:	2200      	movs	r2, #0
 8002718:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800271c:	f000 f8d4 	bl	80028c8 <_lseek_r>
 8002720:	89a3      	ldrh	r3, [r4, #12]
 8002722:	4632      	mov	r2, r6
 8002724:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002728:	81a3      	strh	r3, [r4, #12]
 800272a:	4628      	mov	r0, r5
 800272c:	463b      	mov	r3, r7
 800272e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002732:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002736:	f000 b8eb 	b.w	8002910 <_write_r>

0800273a <__sseek>:
 800273a:	b510      	push	{r4, lr}
 800273c:	460c      	mov	r4, r1
 800273e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002742:	f000 f8c1 	bl	80028c8 <_lseek_r>
 8002746:	1c43      	adds	r3, r0, #1
 8002748:	89a3      	ldrh	r3, [r4, #12]
 800274a:	bf15      	itete	ne
 800274c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800274e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002752:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002756:	81a3      	strheq	r3, [r4, #12]
 8002758:	bf18      	it	ne
 800275a:	81a3      	strhne	r3, [r4, #12]
 800275c:	bd10      	pop	{r4, pc}

0800275e <__sclose>:
 800275e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002762:	f000 b8a1 	b.w	80028a8 <_close_r>

08002766 <__swbuf_r>:
 8002766:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002768:	460e      	mov	r6, r1
 800276a:	4614      	mov	r4, r2
 800276c:	4605      	mov	r5, r0
 800276e:	b118      	cbz	r0, 8002778 <__swbuf_r+0x12>
 8002770:	6a03      	ldr	r3, [r0, #32]
 8002772:	b90b      	cbnz	r3, 8002778 <__swbuf_r+0x12>
 8002774:	f7ff ff0e 	bl	8002594 <__sinit>
 8002778:	69a3      	ldr	r3, [r4, #24]
 800277a:	60a3      	str	r3, [r4, #8]
 800277c:	89a3      	ldrh	r3, [r4, #12]
 800277e:	071a      	lsls	r2, r3, #28
 8002780:	d501      	bpl.n	8002786 <__swbuf_r+0x20>
 8002782:	6923      	ldr	r3, [r4, #16]
 8002784:	b943      	cbnz	r3, 8002798 <__swbuf_r+0x32>
 8002786:	4621      	mov	r1, r4
 8002788:	4628      	mov	r0, r5
 800278a:	f000 f82b 	bl	80027e4 <__swsetup_r>
 800278e:	b118      	cbz	r0, 8002798 <__swbuf_r+0x32>
 8002790:	f04f 37ff 	mov.w	r7, #4294967295
 8002794:	4638      	mov	r0, r7
 8002796:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002798:	6823      	ldr	r3, [r4, #0]
 800279a:	6922      	ldr	r2, [r4, #16]
 800279c:	b2f6      	uxtb	r6, r6
 800279e:	1a98      	subs	r0, r3, r2
 80027a0:	6963      	ldr	r3, [r4, #20]
 80027a2:	4637      	mov	r7, r6
 80027a4:	4283      	cmp	r3, r0
 80027a6:	dc05      	bgt.n	80027b4 <__swbuf_r+0x4e>
 80027a8:	4621      	mov	r1, r4
 80027aa:	4628      	mov	r0, r5
 80027ac:	f001 fd8e 	bl	80042cc <_fflush_r>
 80027b0:	2800      	cmp	r0, #0
 80027b2:	d1ed      	bne.n	8002790 <__swbuf_r+0x2a>
 80027b4:	68a3      	ldr	r3, [r4, #8]
 80027b6:	3b01      	subs	r3, #1
 80027b8:	60a3      	str	r3, [r4, #8]
 80027ba:	6823      	ldr	r3, [r4, #0]
 80027bc:	1c5a      	adds	r2, r3, #1
 80027be:	6022      	str	r2, [r4, #0]
 80027c0:	701e      	strb	r6, [r3, #0]
 80027c2:	6962      	ldr	r2, [r4, #20]
 80027c4:	1c43      	adds	r3, r0, #1
 80027c6:	429a      	cmp	r2, r3
 80027c8:	d004      	beq.n	80027d4 <__swbuf_r+0x6e>
 80027ca:	89a3      	ldrh	r3, [r4, #12]
 80027cc:	07db      	lsls	r3, r3, #31
 80027ce:	d5e1      	bpl.n	8002794 <__swbuf_r+0x2e>
 80027d0:	2e0a      	cmp	r6, #10
 80027d2:	d1df      	bne.n	8002794 <__swbuf_r+0x2e>
 80027d4:	4621      	mov	r1, r4
 80027d6:	4628      	mov	r0, r5
 80027d8:	f001 fd78 	bl	80042cc <_fflush_r>
 80027dc:	2800      	cmp	r0, #0
 80027de:	d0d9      	beq.n	8002794 <__swbuf_r+0x2e>
 80027e0:	e7d6      	b.n	8002790 <__swbuf_r+0x2a>
	...

080027e4 <__swsetup_r>:
 80027e4:	b538      	push	{r3, r4, r5, lr}
 80027e6:	4b29      	ldr	r3, [pc, #164]	@ (800288c <__swsetup_r+0xa8>)
 80027e8:	4605      	mov	r5, r0
 80027ea:	6818      	ldr	r0, [r3, #0]
 80027ec:	460c      	mov	r4, r1
 80027ee:	b118      	cbz	r0, 80027f8 <__swsetup_r+0x14>
 80027f0:	6a03      	ldr	r3, [r0, #32]
 80027f2:	b90b      	cbnz	r3, 80027f8 <__swsetup_r+0x14>
 80027f4:	f7ff fece 	bl	8002594 <__sinit>
 80027f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80027fc:	0719      	lsls	r1, r3, #28
 80027fe:	d422      	bmi.n	8002846 <__swsetup_r+0x62>
 8002800:	06da      	lsls	r2, r3, #27
 8002802:	d407      	bmi.n	8002814 <__swsetup_r+0x30>
 8002804:	2209      	movs	r2, #9
 8002806:	602a      	str	r2, [r5, #0]
 8002808:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800280c:	f04f 30ff 	mov.w	r0, #4294967295
 8002810:	81a3      	strh	r3, [r4, #12]
 8002812:	e033      	b.n	800287c <__swsetup_r+0x98>
 8002814:	0758      	lsls	r0, r3, #29
 8002816:	d512      	bpl.n	800283e <__swsetup_r+0x5a>
 8002818:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800281a:	b141      	cbz	r1, 800282e <__swsetup_r+0x4a>
 800281c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002820:	4299      	cmp	r1, r3
 8002822:	d002      	beq.n	800282a <__swsetup_r+0x46>
 8002824:	4628      	mov	r0, r5
 8002826:	f000 ff13 	bl	8003650 <_free_r>
 800282a:	2300      	movs	r3, #0
 800282c:	6363      	str	r3, [r4, #52]	@ 0x34
 800282e:	89a3      	ldrh	r3, [r4, #12]
 8002830:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8002834:	81a3      	strh	r3, [r4, #12]
 8002836:	2300      	movs	r3, #0
 8002838:	6063      	str	r3, [r4, #4]
 800283a:	6923      	ldr	r3, [r4, #16]
 800283c:	6023      	str	r3, [r4, #0]
 800283e:	89a3      	ldrh	r3, [r4, #12]
 8002840:	f043 0308 	orr.w	r3, r3, #8
 8002844:	81a3      	strh	r3, [r4, #12]
 8002846:	6923      	ldr	r3, [r4, #16]
 8002848:	b94b      	cbnz	r3, 800285e <__swsetup_r+0x7a>
 800284a:	89a3      	ldrh	r3, [r4, #12]
 800284c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8002850:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002854:	d003      	beq.n	800285e <__swsetup_r+0x7a>
 8002856:	4621      	mov	r1, r4
 8002858:	4628      	mov	r0, r5
 800285a:	f001 fd84 	bl	8004366 <__smakebuf_r>
 800285e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002862:	f013 0201 	ands.w	r2, r3, #1
 8002866:	d00a      	beq.n	800287e <__swsetup_r+0x9a>
 8002868:	2200      	movs	r2, #0
 800286a:	60a2      	str	r2, [r4, #8]
 800286c:	6962      	ldr	r2, [r4, #20]
 800286e:	4252      	negs	r2, r2
 8002870:	61a2      	str	r2, [r4, #24]
 8002872:	6922      	ldr	r2, [r4, #16]
 8002874:	b942      	cbnz	r2, 8002888 <__swsetup_r+0xa4>
 8002876:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800287a:	d1c5      	bne.n	8002808 <__swsetup_r+0x24>
 800287c:	bd38      	pop	{r3, r4, r5, pc}
 800287e:	0799      	lsls	r1, r3, #30
 8002880:	bf58      	it	pl
 8002882:	6962      	ldrpl	r2, [r4, #20]
 8002884:	60a2      	str	r2, [r4, #8]
 8002886:	e7f4      	b.n	8002872 <__swsetup_r+0x8e>
 8002888:	2000      	movs	r0, #0
 800288a:	e7f7      	b.n	800287c <__swsetup_r+0x98>
 800288c:	20000010 	.word	0x20000010

08002890 <memset>:
 8002890:	4603      	mov	r3, r0
 8002892:	4402      	add	r2, r0
 8002894:	4293      	cmp	r3, r2
 8002896:	d100      	bne.n	800289a <memset+0xa>
 8002898:	4770      	bx	lr
 800289a:	f803 1b01 	strb.w	r1, [r3], #1
 800289e:	e7f9      	b.n	8002894 <memset+0x4>

080028a0 <_localeconv_r>:
 80028a0:	4800      	ldr	r0, [pc, #0]	@ (80028a4 <_localeconv_r+0x4>)
 80028a2:	4770      	bx	lr
 80028a4:	20000150 	.word	0x20000150

080028a8 <_close_r>:
 80028a8:	b538      	push	{r3, r4, r5, lr}
 80028aa:	2300      	movs	r3, #0
 80028ac:	4d05      	ldr	r5, [pc, #20]	@ (80028c4 <_close_r+0x1c>)
 80028ae:	4604      	mov	r4, r0
 80028b0:	4608      	mov	r0, r1
 80028b2:	602b      	str	r3, [r5, #0]
 80028b4:	f7ff f8f5 	bl	8001aa2 <_close>
 80028b8:	1c43      	adds	r3, r0, #1
 80028ba:	d102      	bne.n	80028c2 <_close_r+0x1a>
 80028bc:	682b      	ldr	r3, [r5, #0]
 80028be:	b103      	cbz	r3, 80028c2 <_close_r+0x1a>
 80028c0:	6023      	str	r3, [r4, #0]
 80028c2:	bd38      	pop	{r3, r4, r5, pc}
 80028c4:	20000564 	.word	0x20000564

080028c8 <_lseek_r>:
 80028c8:	b538      	push	{r3, r4, r5, lr}
 80028ca:	4604      	mov	r4, r0
 80028cc:	4608      	mov	r0, r1
 80028ce:	4611      	mov	r1, r2
 80028d0:	2200      	movs	r2, #0
 80028d2:	4d05      	ldr	r5, [pc, #20]	@ (80028e8 <_lseek_r+0x20>)
 80028d4:	602a      	str	r2, [r5, #0]
 80028d6:	461a      	mov	r2, r3
 80028d8:	f7ff f907 	bl	8001aea <_lseek>
 80028dc:	1c43      	adds	r3, r0, #1
 80028de:	d102      	bne.n	80028e6 <_lseek_r+0x1e>
 80028e0:	682b      	ldr	r3, [r5, #0]
 80028e2:	b103      	cbz	r3, 80028e6 <_lseek_r+0x1e>
 80028e4:	6023      	str	r3, [r4, #0]
 80028e6:	bd38      	pop	{r3, r4, r5, pc}
 80028e8:	20000564 	.word	0x20000564

080028ec <_read_r>:
 80028ec:	b538      	push	{r3, r4, r5, lr}
 80028ee:	4604      	mov	r4, r0
 80028f0:	4608      	mov	r0, r1
 80028f2:	4611      	mov	r1, r2
 80028f4:	2200      	movs	r2, #0
 80028f6:	4d05      	ldr	r5, [pc, #20]	@ (800290c <_read_r+0x20>)
 80028f8:	602a      	str	r2, [r5, #0]
 80028fa:	461a      	mov	r2, r3
 80028fc:	f7ff f898 	bl	8001a30 <_read>
 8002900:	1c43      	adds	r3, r0, #1
 8002902:	d102      	bne.n	800290a <_read_r+0x1e>
 8002904:	682b      	ldr	r3, [r5, #0]
 8002906:	b103      	cbz	r3, 800290a <_read_r+0x1e>
 8002908:	6023      	str	r3, [r4, #0]
 800290a:	bd38      	pop	{r3, r4, r5, pc}
 800290c:	20000564 	.word	0x20000564

08002910 <_write_r>:
 8002910:	b538      	push	{r3, r4, r5, lr}
 8002912:	4604      	mov	r4, r0
 8002914:	4608      	mov	r0, r1
 8002916:	4611      	mov	r1, r2
 8002918:	2200      	movs	r2, #0
 800291a:	4d05      	ldr	r5, [pc, #20]	@ (8002930 <_write_r+0x20>)
 800291c:	602a      	str	r2, [r5, #0]
 800291e:	461a      	mov	r2, r3
 8002920:	f7ff f8a3 	bl	8001a6a <_write>
 8002924:	1c43      	adds	r3, r0, #1
 8002926:	d102      	bne.n	800292e <_write_r+0x1e>
 8002928:	682b      	ldr	r3, [r5, #0]
 800292a:	b103      	cbz	r3, 800292e <_write_r+0x1e>
 800292c:	6023      	str	r3, [r4, #0]
 800292e:	bd38      	pop	{r3, r4, r5, pc}
 8002930:	20000564 	.word	0x20000564

08002934 <__errno>:
 8002934:	4b01      	ldr	r3, [pc, #4]	@ (800293c <__errno+0x8>)
 8002936:	6818      	ldr	r0, [r3, #0]
 8002938:	4770      	bx	lr
 800293a:	bf00      	nop
 800293c:	20000010 	.word	0x20000010

08002940 <__libc_init_array>:
 8002940:	b570      	push	{r4, r5, r6, lr}
 8002942:	2600      	movs	r6, #0
 8002944:	4d0c      	ldr	r5, [pc, #48]	@ (8002978 <__libc_init_array+0x38>)
 8002946:	4c0d      	ldr	r4, [pc, #52]	@ (800297c <__libc_init_array+0x3c>)
 8002948:	1b64      	subs	r4, r4, r5
 800294a:	10a4      	asrs	r4, r4, #2
 800294c:	42a6      	cmp	r6, r4
 800294e:	d109      	bne.n	8002964 <__libc_init_array+0x24>
 8002950:	f001 fe36 	bl	80045c0 <_init>
 8002954:	2600      	movs	r6, #0
 8002956:	4d0a      	ldr	r5, [pc, #40]	@ (8002980 <__libc_init_array+0x40>)
 8002958:	4c0a      	ldr	r4, [pc, #40]	@ (8002984 <__libc_init_array+0x44>)
 800295a:	1b64      	subs	r4, r4, r5
 800295c:	10a4      	asrs	r4, r4, #2
 800295e:	42a6      	cmp	r6, r4
 8002960:	d105      	bne.n	800296e <__libc_init_array+0x2e>
 8002962:	bd70      	pop	{r4, r5, r6, pc}
 8002964:	f855 3b04 	ldr.w	r3, [r5], #4
 8002968:	4798      	blx	r3
 800296a:	3601      	adds	r6, #1
 800296c:	e7ee      	b.n	800294c <__libc_init_array+0xc>
 800296e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002972:	4798      	blx	r3
 8002974:	3601      	adds	r6, #1
 8002976:	e7f2      	b.n	800295e <__libc_init_array+0x1e>
 8002978:	080049f8 	.word	0x080049f8
 800297c:	080049f8 	.word	0x080049f8
 8002980:	080049f8 	.word	0x080049f8
 8002984:	080049fc 	.word	0x080049fc

08002988 <__retarget_lock_init_recursive>:
 8002988:	4770      	bx	lr

0800298a <__retarget_lock_acquire_recursive>:
 800298a:	4770      	bx	lr

0800298c <__retarget_lock_release_recursive>:
 800298c:	4770      	bx	lr

0800298e <memchr>:
 800298e:	4603      	mov	r3, r0
 8002990:	b510      	push	{r4, lr}
 8002992:	b2c9      	uxtb	r1, r1
 8002994:	4402      	add	r2, r0
 8002996:	4293      	cmp	r3, r2
 8002998:	4618      	mov	r0, r3
 800299a:	d101      	bne.n	80029a0 <memchr+0x12>
 800299c:	2000      	movs	r0, #0
 800299e:	e003      	b.n	80029a8 <memchr+0x1a>
 80029a0:	7804      	ldrb	r4, [r0, #0]
 80029a2:	3301      	adds	r3, #1
 80029a4:	428c      	cmp	r4, r1
 80029a6:	d1f6      	bne.n	8002996 <memchr+0x8>
 80029a8:	bd10      	pop	{r4, pc}

080029aa <quorem>:
 80029aa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029ae:	6903      	ldr	r3, [r0, #16]
 80029b0:	690c      	ldr	r4, [r1, #16]
 80029b2:	4607      	mov	r7, r0
 80029b4:	42a3      	cmp	r3, r4
 80029b6:	db7e      	blt.n	8002ab6 <quorem+0x10c>
 80029b8:	3c01      	subs	r4, #1
 80029ba:	00a3      	lsls	r3, r4, #2
 80029bc:	f100 0514 	add.w	r5, r0, #20
 80029c0:	f101 0814 	add.w	r8, r1, #20
 80029c4:	9300      	str	r3, [sp, #0]
 80029c6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80029ca:	9301      	str	r3, [sp, #4]
 80029cc:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80029d0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80029d4:	3301      	adds	r3, #1
 80029d6:	429a      	cmp	r2, r3
 80029d8:	fbb2 f6f3 	udiv	r6, r2, r3
 80029dc:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80029e0:	d32e      	bcc.n	8002a40 <quorem+0x96>
 80029e2:	f04f 0a00 	mov.w	sl, #0
 80029e6:	46c4      	mov	ip, r8
 80029e8:	46ae      	mov	lr, r5
 80029ea:	46d3      	mov	fp, sl
 80029ec:	f85c 3b04 	ldr.w	r3, [ip], #4
 80029f0:	b298      	uxth	r0, r3
 80029f2:	fb06 a000 	mla	r0, r6, r0, sl
 80029f6:	0c1b      	lsrs	r3, r3, #16
 80029f8:	0c02      	lsrs	r2, r0, #16
 80029fa:	fb06 2303 	mla	r3, r6, r3, r2
 80029fe:	f8de 2000 	ldr.w	r2, [lr]
 8002a02:	b280      	uxth	r0, r0
 8002a04:	b292      	uxth	r2, r2
 8002a06:	1a12      	subs	r2, r2, r0
 8002a08:	445a      	add	r2, fp
 8002a0a:	f8de 0000 	ldr.w	r0, [lr]
 8002a0e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002a12:	b29b      	uxth	r3, r3
 8002a14:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002a18:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002a1c:	b292      	uxth	r2, r2
 8002a1e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002a22:	45e1      	cmp	r9, ip
 8002a24:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002a28:	f84e 2b04 	str.w	r2, [lr], #4
 8002a2c:	d2de      	bcs.n	80029ec <quorem+0x42>
 8002a2e:	9b00      	ldr	r3, [sp, #0]
 8002a30:	58eb      	ldr	r3, [r5, r3]
 8002a32:	b92b      	cbnz	r3, 8002a40 <quorem+0x96>
 8002a34:	9b01      	ldr	r3, [sp, #4]
 8002a36:	3b04      	subs	r3, #4
 8002a38:	429d      	cmp	r5, r3
 8002a3a:	461a      	mov	r2, r3
 8002a3c:	d32f      	bcc.n	8002a9e <quorem+0xf4>
 8002a3e:	613c      	str	r4, [r7, #16]
 8002a40:	4638      	mov	r0, r7
 8002a42:	f001 f97b 	bl	8003d3c <__mcmp>
 8002a46:	2800      	cmp	r0, #0
 8002a48:	db25      	blt.n	8002a96 <quorem+0xec>
 8002a4a:	4629      	mov	r1, r5
 8002a4c:	2000      	movs	r0, #0
 8002a4e:	f858 2b04 	ldr.w	r2, [r8], #4
 8002a52:	f8d1 c000 	ldr.w	ip, [r1]
 8002a56:	fa1f fe82 	uxth.w	lr, r2
 8002a5a:	fa1f f38c 	uxth.w	r3, ip
 8002a5e:	eba3 030e 	sub.w	r3, r3, lr
 8002a62:	4403      	add	r3, r0
 8002a64:	0c12      	lsrs	r2, r2, #16
 8002a66:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002a6a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002a6e:	b29b      	uxth	r3, r3
 8002a70:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002a74:	45c1      	cmp	r9, r8
 8002a76:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002a7a:	f841 3b04 	str.w	r3, [r1], #4
 8002a7e:	d2e6      	bcs.n	8002a4e <quorem+0xa4>
 8002a80:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002a84:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a88:	b922      	cbnz	r2, 8002a94 <quorem+0xea>
 8002a8a:	3b04      	subs	r3, #4
 8002a8c:	429d      	cmp	r5, r3
 8002a8e:	461a      	mov	r2, r3
 8002a90:	d30b      	bcc.n	8002aaa <quorem+0x100>
 8002a92:	613c      	str	r4, [r7, #16]
 8002a94:	3601      	adds	r6, #1
 8002a96:	4630      	mov	r0, r6
 8002a98:	b003      	add	sp, #12
 8002a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a9e:	6812      	ldr	r2, [r2, #0]
 8002aa0:	3b04      	subs	r3, #4
 8002aa2:	2a00      	cmp	r2, #0
 8002aa4:	d1cb      	bne.n	8002a3e <quorem+0x94>
 8002aa6:	3c01      	subs	r4, #1
 8002aa8:	e7c6      	b.n	8002a38 <quorem+0x8e>
 8002aaa:	6812      	ldr	r2, [r2, #0]
 8002aac:	3b04      	subs	r3, #4
 8002aae:	2a00      	cmp	r2, #0
 8002ab0:	d1ef      	bne.n	8002a92 <quorem+0xe8>
 8002ab2:	3c01      	subs	r4, #1
 8002ab4:	e7ea      	b.n	8002a8c <quorem+0xe2>
 8002ab6:	2000      	movs	r0, #0
 8002ab8:	e7ee      	b.n	8002a98 <quorem+0xee>
 8002aba:	0000      	movs	r0, r0
 8002abc:	0000      	movs	r0, r0
	...

08002ac0 <_dtoa_r>:
 8002ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ac4:	4614      	mov	r4, r2
 8002ac6:	461d      	mov	r5, r3
 8002ac8:	69c7      	ldr	r7, [r0, #28]
 8002aca:	b097      	sub	sp, #92	@ 0x5c
 8002acc:	4683      	mov	fp, r0
 8002ace:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8002ad2:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8002ad4:	b97f      	cbnz	r7, 8002af6 <_dtoa_r+0x36>
 8002ad6:	2010      	movs	r0, #16
 8002ad8:	f000 fe02 	bl	80036e0 <malloc>
 8002adc:	4602      	mov	r2, r0
 8002ade:	f8cb 001c 	str.w	r0, [fp, #28]
 8002ae2:	b920      	cbnz	r0, 8002aee <_dtoa_r+0x2e>
 8002ae4:	21ef      	movs	r1, #239	@ 0xef
 8002ae6:	4ba8      	ldr	r3, [pc, #672]	@ (8002d88 <_dtoa_r+0x2c8>)
 8002ae8:	48a8      	ldr	r0, [pc, #672]	@ (8002d8c <_dtoa_r+0x2cc>)
 8002aea:	f001 fcb9 	bl	8004460 <__assert_func>
 8002aee:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002af2:	6007      	str	r7, [r0, #0]
 8002af4:	60c7      	str	r7, [r0, #12]
 8002af6:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002afa:	6819      	ldr	r1, [r3, #0]
 8002afc:	b159      	cbz	r1, 8002b16 <_dtoa_r+0x56>
 8002afe:	685a      	ldr	r2, [r3, #4]
 8002b00:	2301      	movs	r3, #1
 8002b02:	4093      	lsls	r3, r2
 8002b04:	604a      	str	r2, [r1, #4]
 8002b06:	608b      	str	r3, [r1, #8]
 8002b08:	4658      	mov	r0, fp
 8002b0a:	f000 fedf 	bl	80038cc <_Bfree>
 8002b0e:	2200      	movs	r2, #0
 8002b10:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002b14:	601a      	str	r2, [r3, #0]
 8002b16:	1e2b      	subs	r3, r5, #0
 8002b18:	bfaf      	iteee	ge
 8002b1a:	2300      	movge	r3, #0
 8002b1c:	2201      	movlt	r2, #1
 8002b1e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002b22:	9303      	strlt	r3, [sp, #12]
 8002b24:	bfa8      	it	ge
 8002b26:	6033      	strge	r3, [r6, #0]
 8002b28:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002b2c:	4b98      	ldr	r3, [pc, #608]	@ (8002d90 <_dtoa_r+0x2d0>)
 8002b2e:	bfb8      	it	lt
 8002b30:	6032      	strlt	r2, [r6, #0]
 8002b32:	ea33 0308 	bics.w	r3, r3, r8
 8002b36:	d112      	bne.n	8002b5e <_dtoa_r+0x9e>
 8002b38:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002b3c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002b3e:	6013      	str	r3, [r2, #0]
 8002b40:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002b44:	4323      	orrs	r3, r4
 8002b46:	f000 8550 	beq.w	80035ea <_dtoa_r+0xb2a>
 8002b4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002b4c:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8002d94 <_dtoa_r+0x2d4>
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	f000 8552 	beq.w	80035fa <_dtoa_r+0xb3a>
 8002b56:	f10a 0303 	add.w	r3, sl, #3
 8002b5a:	f000 bd4c 	b.w	80035f6 <_dtoa_r+0xb36>
 8002b5e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b62:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8002b66:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002b6a:	2200      	movs	r2, #0
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	f7fd ffdf 	bl	8000b30 <__aeabi_dcmpeq>
 8002b72:	4607      	mov	r7, r0
 8002b74:	b158      	cbz	r0, 8002b8e <_dtoa_r+0xce>
 8002b76:	2301      	movs	r3, #1
 8002b78:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002b7a:	6013      	str	r3, [r2, #0]
 8002b7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002b7e:	b113      	cbz	r3, 8002b86 <_dtoa_r+0xc6>
 8002b80:	4b85      	ldr	r3, [pc, #532]	@ (8002d98 <_dtoa_r+0x2d8>)
 8002b82:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002b84:	6013      	str	r3, [r2, #0]
 8002b86:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8002d9c <_dtoa_r+0x2dc>
 8002b8a:	f000 bd36 	b.w	80035fa <_dtoa_r+0xb3a>
 8002b8e:	ab14      	add	r3, sp, #80	@ 0x50
 8002b90:	9301      	str	r3, [sp, #4]
 8002b92:	ab15      	add	r3, sp, #84	@ 0x54
 8002b94:	9300      	str	r3, [sp, #0]
 8002b96:	4658      	mov	r0, fp
 8002b98:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8002b9c:	f001 f97e 	bl	8003e9c <__d2b>
 8002ba0:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8002ba4:	4681      	mov	r9, r0
 8002ba6:	2e00      	cmp	r6, #0
 8002ba8:	d077      	beq.n	8002c9a <_dtoa_r+0x1da>
 8002baa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002bae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002bb0:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002bb4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002bb8:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002bbc:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002bc0:	9712      	str	r7, [sp, #72]	@ 0x48
 8002bc2:	4619      	mov	r1, r3
 8002bc4:	2200      	movs	r2, #0
 8002bc6:	4b76      	ldr	r3, [pc, #472]	@ (8002da0 <_dtoa_r+0x2e0>)
 8002bc8:	f7fd fb92 	bl	80002f0 <__aeabi_dsub>
 8002bcc:	a368      	add	r3, pc, #416	@ (adr r3, 8002d70 <_dtoa_r+0x2b0>)
 8002bce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bd2:	f7fd fd45 	bl	8000660 <__aeabi_dmul>
 8002bd6:	a368      	add	r3, pc, #416	@ (adr r3, 8002d78 <_dtoa_r+0x2b8>)
 8002bd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bdc:	f7fd fb8a 	bl	80002f4 <__adddf3>
 8002be0:	4604      	mov	r4, r0
 8002be2:	4630      	mov	r0, r6
 8002be4:	460d      	mov	r5, r1
 8002be6:	f7fd fcd1 	bl	800058c <__aeabi_i2d>
 8002bea:	a365      	add	r3, pc, #404	@ (adr r3, 8002d80 <_dtoa_r+0x2c0>)
 8002bec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bf0:	f7fd fd36 	bl	8000660 <__aeabi_dmul>
 8002bf4:	4602      	mov	r2, r0
 8002bf6:	460b      	mov	r3, r1
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	4629      	mov	r1, r5
 8002bfc:	f7fd fb7a 	bl	80002f4 <__adddf3>
 8002c00:	4604      	mov	r4, r0
 8002c02:	460d      	mov	r5, r1
 8002c04:	f7fd ffdc 	bl	8000bc0 <__aeabi_d2iz>
 8002c08:	2200      	movs	r2, #0
 8002c0a:	4607      	mov	r7, r0
 8002c0c:	2300      	movs	r3, #0
 8002c0e:	4620      	mov	r0, r4
 8002c10:	4629      	mov	r1, r5
 8002c12:	f7fd ff97 	bl	8000b44 <__aeabi_dcmplt>
 8002c16:	b140      	cbz	r0, 8002c2a <_dtoa_r+0x16a>
 8002c18:	4638      	mov	r0, r7
 8002c1a:	f7fd fcb7 	bl	800058c <__aeabi_i2d>
 8002c1e:	4622      	mov	r2, r4
 8002c20:	462b      	mov	r3, r5
 8002c22:	f7fd ff85 	bl	8000b30 <__aeabi_dcmpeq>
 8002c26:	b900      	cbnz	r0, 8002c2a <_dtoa_r+0x16a>
 8002c28:	3f01      	subs	r7, #1
 8002c2a:	2f16      	cmp	r7, #22
 8002c2c:	d853      	bhi.n	8002cd6 <_dtoa_r+0x216>
 8002c2e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002c32:	4b5c      	ldr	r3, [pc, #368]	@ (8002da4 <_dtoa_r+0x2e4>)
 8002c34:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002c38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c3c:	f7fd ff82 	bl	8000b44 <__aeabi_dcmplt>
 8002c40:	2800      	cmp	r0, #0
 8002c42:	d04a      	beq.n	8002cda <_dtoa_r+0x21a>
 8002c44:	2300      	movs	r3, #0
 8002c46:	3f01      	subs	r7, #1
 8002c48:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002c4a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002c4c:	1b9b      	subs	r3, r3, r6
 8002c4e:	1e5a      	subs	r2, r3, #1
 8002c50:	bf46      	itte	mi
 8002c52:	f1c3 0801 	rsbmi	r8, r3, #1
 8002c56:	2300      	movmi	r3, #0
 8002c58:	f04f 0800 	movpl.w	r8, #0
 8002c5c:	9209      	str	r2, [sp, #36]	@ 0x24
 8002c5e:	bf48      	it	mi
 8002c60:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002c62:	2f00      	cmp	r7, #0
 8002c64:	db3b      	blt.n	8002cde <_dtoa_r+0x21e>
 8002c66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002c68:	970e      	str	r7, [sp, #56]	@ 0x38
 8002c6a:	443b      	add	r3, r7
 8002c6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c6e:	2300      	movs	r3, #0
 8002c70:	930a      	str	r3, [sp, #40]	@ 0x28
 8002c72:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002c74:	2b09      	cmp	r3, #9
 8002c76:	d866      	bhi.n	8002d46 <_dtoa_r+0x286>
 8002c78:	2b05      	cmp	r3, #5
 8002c7a:	bfc4      	itt	gt
 8002c7c:	3b04      	subgt	r3, #4
 8002c7e:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8002c80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002c82:	bfc8      	it	gt
 8002c84:	2400      	movgt	r4, #0
 8002c86:	f1a3 0302 	sub.w	r3, r3, #2
 8002c8a:	bfd8      	it	le
 8002c8c:	2401      	movle	r4, #1
 8002c8e:	2b03      	cmp	r3, #3
 8002c90:	d864      	bhi.n	8002d5c <_dtoa_r+0x29c>
 8002c92:	e8df f003 	tbb	[pc, r3]
 8002c96:	382b      	.short	0x382b
 8002c98:	5636      	.short	0x5636
 8002c9a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002c9e:	441e      	add	r6, r3
 8002ca0:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002ca4:	2b20      	cmp	r3, #32
 8002ca6:	bfc1      	itttt	gt
 8002ca8:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002cac:	fa08 f803 	lslgt.w	r8, r8, r3
 8002cb0:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002cb4:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002cb8:	bfd6      	itet	le
 8002cba:	f1c3 0320 	rsble	r3, r3, #32
 8002cbe:	ea48 0003 	orrgt.w	r0, r8, r3
 8002cc2:	fa04 f003 	lslle.w	r0, r4, r3
 8002cc6:	f7fd fc51 	bl	800056c <__aeabi_ui2d>
 8002cca:	2201      	movs	r2, #1
 8002ccc:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002cd0:	3e01      	subs	r6, #1
 8002cd2:	9212      	str	r2, [sp, #72]	@ 0x48
 8002cd4:	e775      	b.n	8002bc2 <_dtoa_r+0x102>
 8002cd6:	2301      	movs	r3, #1
 8002cd8:	e7b6      	b.n	8002c48 <_dtoa_r+0x188>
 8002cda:	900f      	str	r0, [sp, #60]	@ 0x3c
 8002cdc:	e7b5      	b.n	8002c4a <_dtoa_r+0x18a>
 8002cde:	427b      	negs	r3, r7
 8002ce0:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	eba8 0807 	sub.w	r8, r8, r7
 8002ce8:	930e      	str	r3, [sp, #56]	@ 0x38
 8002cea:	e7c2      	b.n	8002c72 <_dtoa_r+0x1b2>
 8002cec:	2300      	movs	r3, #0
 8002cee:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002cf0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002cf2:	2b00      	cmp	r3, #0
 8002cf4:	dc35      	bgt.n	8002d62 <_dtoa_r+0x2a2>
 8002cf6:	2301      	movs	r3, #1
 8002cf8:	461a      	mov	r2, r3
 8002cfa:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002cfe:	9221      	str	r2, [sp, #132]	@ 0x84
 8002d00:	e00b      	b.n	8002d1a <_dtoa_r+0x25a>
 8002d02:	2301      	movs	r3, #1
 8002d04:	e7f3      	b.n	8002cee <_dtoa_r+0x22e>
 8002d06:	2300      	movs	r3, #0
 8002d08:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d0a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002d0c:	18fb      	adds	r3, r7, r3
 8002d0e:	9308      	str	r3, [sp, #32]
 8002d10:	3301      	adds	r3, #1
 8002d12:	2b01      	cmp	r3, #1
 8002d14:	9307      	str	r3, [sp, #28]
 8002d16:	bfb8      	it	lt
 8002d18:	2301      	movlt	r3, #1
 8002d1a:	2100      	movs	r1, #0
 8002d1c:	2204      	movs	r2, #4
 8002d1e:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002d22:	f102 0514 	add.w	r5, r2, #20
 8002d26:	429d      	cmp	r5, r3
 8002d28:	d91f      	bls.n	8002d6a <_dtoa_r+0x2aa>
 8002d2a:	6041      	str	r1, [r0, #4]
 8002d2c:	4658      	mov	r0, fp
 8002d2e:	f000 fd8d 	bl	800384c <_Balloc>
 8002d32:	4682      	mov	sl, r0
 8002d34:	2800      	cmp	r0, #0
 8002d36:	d139      	bne.n	8002dac <_dtoa_r+0x2ec>
 8002d38:	4602      	mov	r2, r0
 8002d3a:	f240 11af 	movw	r1, #431	@ 0x1af
 8002d3e:	4b1a      	ldr	r3, [pc, #104]	@ (8002da8 <_dtoa_r+0x2e8>)
 8002d40:	e6d2      	b.n	8002ae8 <_dtoa_r+0x28>
 8002d42:	2301      	movs	r3, #1
 8002d44:	e7e0      	b.n	8002d08 <_dtoa_r+0x248>
 8002d46:	2401      	movs	r4, #1
 8002d48:	2300      	movs	r3, #0
 8002d4a:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002d4c:	9320      	str	r3, [sp, #128]	@ 0x80
 8002d4e:	f04f 33ff 	mov.w	r3, #4294967295
 8002d52:	2200      	movs	r2, #0
 8002d54:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002d58:	2312      	movs	r3, #18
 8002d5a:	e7d0      	b.n	8002cfe <_dtoa_r+0x23e>
 8002d5c:	2301      	movs	r3, #1
 8002d5e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d60:	e7f5      	b.n	8002d4e <_dtoa_r+0x28e>
 8002d62:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002d64:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002d68:	e7d7      	b.n	8002d1a <_dtoa_r+0x25a>
 8002d6a:	3101      	adds	r1, #1
 8002d6c:	0052      	lsls	r2, r2, #1
 8002d6e:	e7d8      	b.n	8002d22 <_dtoa_r+0x262>
 8002d70:	636f4361 	.word	0x636f4361
 8002d74:	3fd287a7 	.word	0x3fd287a7
 8002d78:	8b60c8b3 	.word	0x8b60c8b3
 8002d7c:	3fc68a28 	.word	0x3fc68a28
 8002d80:	509f79fb 	.word	0x509f79fb
 8002d84:	3fd34413 	.word	0x3fd34413
 8002d88:	080046bd 	.word	0x080046bd
 8002d8c:	080046d4 	.word	0x080046d4
 8002d90:	7ff00000 	.word	0x7ff00000
 8002d94:	080046b9 	.word	0x080046b9
 8002d98:	0800468d 	.word	0x0800468d
 8002d9c:	0800468c 	.word	0x0800468c
 8002da0:	3ff80000 	.word	0x3ff80000
 8002da4:	080047d0 	.word	0x080047d0
 8002da8:	0800472c 	.word	0x0800472c
 8002dac:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002db0:	6018      	str	r0, [r3, #0]
 8002db2:	9b07      	ldr	r3, [sp, #28]
 8002db4:	2b0e      	cmp	r3, #14
 8002db6:	f200 80a4 	bhi.w	8002f02 <_dtoa_r+0x442>
 8002dba:	2c00      	cmp	r4, #0
 8002dbc:	f000 80a1 	beq.w	8002f02 <_dtoa_r+0x442>
 8002dc0:	2f00      	cmp	r7, #0
 8002dc2:	dd33      	ble.n	8002e2c <_dtoa_r+0x36c>
 8002dc4:	4b86      	ldr	r3, [pc, #536]	@ (8002fe0 <_dtoa_r+0x520>)
 8002dc6:	f007 020f 	and.w	r2, r7, #15
 8002dca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002dce:	05f8      	lsls	r0, r7, #23
 8002dd0:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002dd4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002dd8:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002ddc:	d516      	bpl.n	8002e0c <_dtoa_r+0x34c>
 8002dde:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002de2:	4b80      	ldr	r3, [pc, #512]	@ (8002fe4 <_dtoa_r+0x524>)
 8002de4:	2603      	movs	r6, #3
 8002de6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002dea:	f7fd fd63 	bl	80008b4 <__aeabi_ddiv>
 8002dee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002df2:	f004 040f 	and.w	r4, r4, #15
 8002df6:	4d7b      	ldr	r5, [pc, #492]	@ (8002fe4 <_dtoa_r+0x524>)
 8002df8:	b954      	cbnz	r4, 8002e10 <_dtoa_r+0x350>
 8002dfa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002dfe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e02:	f7fd fd57 	bl	80008b4 <__aeabi_ddiv>
 8002e06:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e0a:	e028      	b.n	8002e5e <_dtoa_r+0x39e>
 8002e0c:	2602      	movs	r6, #2
 8002e0e:	e7f2      	b.n	8002df6 <_dtoa_r+0x336>
 8002e10:	07e1      	lsls	r1, r4, #31
 8002e12:	d508      	bpl.n	8002e26 <_dtoa_r+0x366>
 8002e14:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e18:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002e1c:	f7fd fc20 	bl	8000660 <__aeabi_dmul>
 8002e20:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002e24:	3601      	adds	r6, #1
 8002e26:	1064      	asrs	r4, r4, #1
 8002e28:	3508      	adds	r5, #8
 8002e2a:	e7e5      	b.n	8002df8 <_dtoa_r+0x338>
 8002e2c:	f000 80d2 	beq.w	8002fd4 <_dtoa_r+0x514>
 8002e30:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002e34:	427c      	negs	r4, r7
 8002e36:	4b6a      	ldr	r3, [pc, #424]	@ (8002fe0 <_dtoa_r+0x520>)
 8002e38:	f004 020f 	and.w	r2, r4, #15
 8002e3c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002e40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e44:	f7fd fc0c 	bl	8000660 <__aeabi_dmul>
 8002e48:	2602      	movs	r6, #2
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e50:	4d64      	ldr	r5, [pc, #400]	@ (8002fe4 <_dtoa_r+0x524>)
 8002e52:	1124      	asrs	r4, r4, #4
 8002e54:	2c00      	cmp	r4, #0
 8002e56:	f040 80b2 	bne.w	8002fbe <_dtoa_r+0x4fe>
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d1d3      	bne.n	8002e06 <_dtoa_r+0x346>
 8002e5e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002e62:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	f000 80b7 	beq.w	8002fd8 <_dtoa_r+0x518>
 8002e6a:	2200      	movs	r2, #0
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	4629      	mov	r1, r5
 8002e70:	4b5d      	ldr	r3, [pc, #372]	@ (8002fe8 <_dtoa_r+0x528>)
 8002e72:	f7fd fe67 	bl	8000b44 <__aeabi_dcmplt>
 8002e76:	2800      	cmp	r0, #0
 8002e78:	f000 80ae 	beq.w	8002fd8 <_dtoa_r+0x518>
 8002e7c:	9b07      	ldr	r3, [sp, #28]
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	f000 80aa 	beq.w	8002fd8 <_dtoa_r+0x518>
 8002e84:	9b08      	ldr	r3, [sp, #32]
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	dd37      	ble.n	8002efa <_dtoa_r+0x43a>
 8002e8a:	1e7b      	subs	r3, r7, #1
 8002e8c:	4620      	mov	r0, r4
 8002e8e:	9304      	str	r3, [sp, #16]
 8002e90:	2200      	movs	r2, #0
 8002e92:	4629      	mov	r1, r5
 8002e94:	4b55      	ldr	r3, [pc, #340]	@ (8002fec <_dtoa_r+0x52c>)
 8002e96:	f7fd fbe3 	bl	8000660 <__aeabi_dmul>
 8002e9a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e9e:	9c08      	ldr	r4, [sp, #32]
 8002ea0:	3601      	adds	r6, #1
 8002ea2:	4630      	mov	r0, r6
 8002ea4:	f7fd fb72 	bl	800058c <__aeabi_i2d>
 8002ea8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002eac:	f7fd fbd8 	bl	8000660 <__aeabi_dmul>
 8002eb0:	2200      	movs	r2, #0
 8002eb2:	4b4f      	ldr	r3, [pc, #316]	@ (8002ff0 <_dtoa_r+0x530>)
 8002eb4:	f7fd fa1e 	bl	80002f4 <__adddf3>
 8002eb8:	4605      	mov	r5, r0
 8002eba:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002ebe:	2c00      	cmp	r4, #0
 8002ec0:	f040 809a 	bne.w	8002ff8 <_dtoa_r+0x538>
 8002ec4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ec8:	2200      	movs	r2, #0
 8002eca:	4b4a      	ldr	r3, [pc, #296]	@ (8002ff4 <_dtoa_r+0x534>)
 8002ecc:	f7fd fa10 	bl	80002f0 <__aeabi_dsub>
 8002ed0:	4602      	mov	r2, r0
 8002ed2:	460b      	mov	r3, r1
 8002ed4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002ed8:	462a      	mov	r2, r5
 8002eda:	4633      	mov	r3, r6
 8002edc:	f7fd fe50 	bl	8000b80 <__aeabi_dcmpgt>
 8002ee0:	2800      	cmp	r0, #0
 8002ee2:	f040 828e 	bne.w	8003402 <_dtoa_r+0x942>
 8002ee6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002eea:	462a      	mov	r2, r5
 8002eec:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002ef0:	f7fd fe28 	bl	8000b44 <__aeabi_dcmplt>
 8002ef4:	2800      	cmp	r0, #0
 8002ef6:	f040 8127 	bne.w	8003148 <_dtoa_r+0x688>
 8002efa:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002efe:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002f02:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	f2c0 8163 	blt.w	80031d0 <_dtoa_r+0x710>
 8002f0a:	2f0e      	cmp	r7, #14
 8002f0c:	f300 8160 	bgt.w	80031d0 <_dtoa_r+0x710>
 8002f10:	4b33      	ldr	r3, [pc, #204]	@ (8002fe0 <_dtoa_r+0x520>)
 8002f12:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002f16:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002f1a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002f1e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	da03      	bge.n	8002f2c <_dtoa_r+0x46c>
 8002f24:	9b07      	ldr	r3, [sp, #28]
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	f340 8100 	ble.w	800312c <_dtoa_r+0x66c>
 8002f2c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002f30:	4656      	mov	r6, sl
 8002f32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002f36:	4620      	mov	r0, r4
 8002f38:	4629      	mov	r1, r5
 8002f3a:	f7fd fcbb 	bl	80008b4 <__aeabi_ddiv>
 8002f3e:	f7fd fe3f 	bl	8000bc0 <__aeabi_d2iz>
 8002f42:	4680      	mov	r8, r0
 8002f44:	f7fd fb22 	bl	800058c <__aeabi_i2d>
 8002f48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002f4c:	f7fd fb88 	bl	8000660 <__aeabi_dmul>
 8002f50:	4602      	mov	r2, r0
 8002f52:	460b      	mov	r3, r1
 8002f54:	4620      	mov	r0, r4
 8002f56:	4629      	mov	r1, r5
 8002f58:	f7fd f9ca 	bl	80002f0 <__aeabi_dsub>
 8002f5c:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002f60:	9d07      	ldr	r5, [sp, #28]
 8002f62:	f806 4b01 	strb.w	r4, [r6], #1
 8002f66:	eba6 040a 	sub.w	r4, r6, sl
 8002f6a:	42a5      	cmp	r5, r4
 8002f6c:	4602      	mov	r2, r0
 8002f6e:	460b      	mov	r3, r1
 8002f70:	f040 8116 	bne.w	80031a0 <_dtoa_r+0x6e0>
 8002f74:	f7fd f9be 	bl	80002f4 <__adddf3>
 8002f78:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002f7c:	4604      	mov	r4, r0
 8002f7e:	460d      	mov	r5, r1
 8002f80:	f7fd fdfe 	bl	8000b80 <__aeabi_dcmpgt>
 8002f84:	2800      	cmp	r0, #0
 8002f86:	f040 80f8 	bne.w	800317a <_dtoa_r+0x6ba>
 8002f8a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002f8e:	4620      	mov	r0, r4
 8002f90:	4629      	mov	r1, r5
 8002f92:	f7fd fdcd 	bl	8000b30 <__aeabi_dcmpeq>
 8002f96:	b118      	cbz	r0, 8002fa0 <_dtoa_r+0x4e0>
 8002f98:	f018 0f01 	tst.w	r8, #1
 8002f9c:	f040 80ed 	bne.w	800317a <_dtoa_r+0x6ba>
 8002fa0:	4649      	mov	r1, r9
 8002fa2:	4658      	mov	r0, fp
 8002fa4:	f000 fc92 	bl	80038cc <_Bfree>
 8002fa8:	2300      	movs	r3, #0
 8002faa:	7033      	strb	r3, [r6, #0]
 8002fac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8002fae:	3701      	adds	r7, #1
 8002fb0:	601f      	str	r7, [r3, #0]
 8002fb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	f000 8320 	beq.w	80035fa <_dtoa_r+0xb3a>
 8002fba:	601e      	str	r6, [r3, #0]
 8002fbc:	e31d      	b.n	80035fa <_dtoa_r+0xb3a>
 8002fbe:	07e2      	lsls	r2, r4, #31
 8002fc0:	d505      	bpl.n	8002fce <_dtoa_r+0x50e>
 8002fc2:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002fc6:	f7fd fb4b 	bl	8000660 <__aeabi_dmul>
 8002fca:	2301      	movs	r3, #1
 8002fcc:	3601      	adds	r6, #1
 8002fce:	1064      	asrs	r4, r4, #1
 8002fd0:	3508      	adds	r5, #8
 8002fd2:	e73f      	b.n	8002e54 <_dtoa_r+0x394>
 8002fd4:	2602      	movs	r6, #2
 8002fd6:	e742      	b.n	8002e5e <_dtoa_r+0x39e>
 8002fd8:	9c07      	ldr	r4, [sp, #28]
 8002fda:	9704      	str	r7, [sp, #16]
 8002fdc:	e761      	b.n	8002ea2 <_dtoa_r+0x3e2>
 8002fde:	bf00      	nop
 8002fe0:	080047d0 	.word	0x080047d0
 8002fe4:	080047a8 	.word	0x080047a8
 8002fe8:	3ff00000 	.word	0x3ff00000
 8002fec:	40240000 	.word	0x40240000
 8002ff0:	401c0000 	.word	0x401c0000
 8002ff4:	40140000 	.word	0x40140000
 8002ff8:	4b70      	ldr	r3, [pc, #448]	@ (80031bc <_dtoa_r+0x6fc>)
 8002ffa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002ffc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003000:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003004:	4454      	add	r4, sl
 8003006:	2900      	cmp	r1, #0
 8003008:	d045      	beq.n	8003096 <_dtoa_r+0x5d6>
 800300a:	2000      	movs	r0, #0
 800300c:	496c      	ldr	r1, [pc, #432]	@ (80031c0 <_dtoa_r+0x700>)
 800300e:	f7fd fc51 	bl	80008b4 <__aeabi_ddiv>
 8003012:	4633      	mov	r3, r6
 8003014:	462a      	mov	r2, r5
 8003016:	f7fd f96b 	bl	80002f0 <__aeabi_dsub>
 800301a:	4656      	mov	r6, sl
 800301c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003020:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003024:	f7fd fdcc 	bl	8000bc0 <__aeabi_d2iz>
 8003028:	4605      	mov	r5, r0
 800302a:	f7fd faaf 	bl	800058c <__aeabi_i2d>
 800302e:	4602      	mov	r2, r0
 8003030:	460b      	mov	r3, r1
 8003032:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003036:	f7fd f95b 	bl	80002f0 <__aeabi_dsub>
 800303a:	4602      	mov	r2, r0
 800303c:	460b      	mov	r3, r1
 800303e:	3530      	adds	r5, #48	@ 0x30
 8003040:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003044:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003048:	f806 5b01 	strb.w	r5, [r6], #1
 800304c:	f7fd fd7a 	bl	8000b44 <__aeabi_dcmplt>
 8003050:	2800      	cmp	r0, #0
 8003052:	d163      	bne.n	800311c <_dtoa_r+0x65c>
 8003054:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003058:	2000      	movs	r0, #0
 800305a:	495a      	ldr	r1, [pc, #360]	@ (80031c4 <_dtoa_r+0x704>)
 800305c:	f7fd f948 	bl	80002f0 <__aeabi_dsub>
 8003060:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003064:	f7fd fd6e 	bl	8000b44 <__aeabi_dcmplt>
 8003068:	2800      	cmp	r0, #0
 800306a:	f040 8087 	bne.w	800317c <_dtoa_r+0x6bc>
 800306e:	42a6      	cmp	r6, r4
 8003070:	f43f af43 	beq.w	8002efa <_dtoa_r+0x43a>
 8003074:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003078:	2200      	movs	r2, #0
 800307a:	4b53      	ldr	r3, [pc, #332]	@ (80031c8 <_dtoa_r+0x708>)
 800307c:	f7fd faf0 	bl	8000660 <__aeabi_dmul>
 8003080:	2200      	movs	r2, #0
 8003082:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003086:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800308a:	4b4f      	ldr	r3, [pc, #316]	@ (80031c8 <_dtoa_r+0x708>)
 800308c:	f7fd fae8 	bl	8000660 <__aeabi_dmul>
 8003090:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003094:	e7c4      	b.n	8003020 <_dtoa_r+0x560>
 8003096:	4631      	mov	r1, r6
 8003098:	4628      	mov	r0, r5
 800309a:	f7fd fae1 	bl	8000660 <__aeabi_dmul>
 800309e:	4656      	mov	r6, sl
 80030a0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80030a4:	9413      	str	r4, [sp, #76]	@ 0x4c
 80030a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030aa:	f7fd fd89 	bl	8000bc0 <__aeabi_d2iz>
 80030ae:	4605      	mov	r5, r0
 80030b0:	f7fd fa6c 	bl	800058c <__aeabi_i2d>
 80030b4:	4602      	mov	r2, r0
 80030b6:	460b      	mov	r3, r1
 80030b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030bc:	f7fd f918 	bl	80002f0 <__aeabi_dsub>
 80030c0:	4602      	mov	r2, r0
 80030c2:	460b      	mov	r3, r1
 80030c4:	3530      	adds	r5, #48	@ 0x30
 80030c6:	f806 5b01 	strb.w	r5, [r6], #1
 80030ca:	42a6      	cmp	r6, r4
 80030cc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80030d0:	f04f 0200 	mov.w	r2, #0
 80030d4:	d124      	bne.n	8003120 <_dtoa_r+0x660>
 80030d6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80030da:	4b39      	ldr	r3, [pc, #228]	@ (80031c0 <_dtoa_r+0x700>)
 80030dc:	f7fd f90a 	bl	80002f4 <__adddf3>
 80030e0:	4602      	mov	r2, r0
 80030e2:	460b      	mov	r3, r1
 80030e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030e8:	f7fd fd4a 	bl	8000b80 <__aeabi_dcmpgt>
 80030ec:	2800      	cmp	r0, #0
 80030ee:	d145      	bne.n	800317c <_dtoa_r+0x6bc>
 80030f0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80030f4:	2000      	movs	r0, #0
 80030f6:	4932      	ldr	r1, [pc, #200]	@ (80031c0 <_dtoa_r+0x700>)
 80030f8:	f7fd f8fa 	bl	80002f0 <__aeabi_dsub>
 80030fc:	4602      	mov	r2, r0
 80030fe:	460b      	mov	r3, r1
 8003100:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003104:	f7fd fd1e 	bl	8000b44 <__aeabi_dcmplt>
 8003108:	2800      	cmp	r0, #0
 800310a:	f43f aef6 	beq.w	8002efa <_dtoa_r+0x43a>
 800310e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8003110:	1e73      	subs	r3, r6, #1
 8003112:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003114:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003118:	2b30      	cmp	r3, #48	@ 0x30
 800311a:	d0f8      	beq.n	800310e <_dtoa_r+0x64e>
 800311c:	9f04      	ldr	r7, [sp, #16]
 800311e:	e73f      	b.n	8002fa0 <_dtoa_r+0x4e0>
 8003120:	4b29      	ldr	r3, [pc, #164]	@ (80031c8 <_dtoa_r+0x708>)
 8003122:	f7fd fa9d 	bl	8000660 <__aeabi_dmul>
 8003126:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800312a:	e7bc      	b.n	80030a6 <_dtoa_r+0x5e6>
 800312c:	d10c      	bne.n	8003148 <_dtoa_r+0x688>
 800312e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003132:	2200      	movs	r2, #0
 8003134:	4b25      	ldr	r3, [pc, #148]	@ (80031cc <_dtoa_r+0x70c>)
 8003136:	f7fd fa93 	bl	8000660 <__aeabi_dmul>
 800313a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800313e:	f7fd fd15 	bl	8000b6c <__aeabi_dcmpge>
 8003142:	2800      	cmp	r0, #0
 8003144:	f000 815b 	beq.w	80033fe <_dtoa_r+0x93e>
 8003148:	2400      	movs	r4, #0
 800314a:	4625      	mov	r5, r4
 800314c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800314e:	4656      	mov	r6, sl
 8003150:	43db      	mvns	r3, r3
 8003152:	9304      	str	r3, [sp, #16]
 8003154:	2700      	movs	r7, #0
 8003156:	4621      	mov	r1, r4
 8003158:	4658      	mov	r0, fp
 800315a:	f000 fbb7 	bl	80038cc <_Bfree>
 800315e:	2d00      	cmp	r5, #0
 8003160:	d0dc      	beq.n	800311c <_dtoa_r+0x65c>
 8003162:	b12f      	cbz	r7, 8003170 <_dtoa_r+0x6b0>
 8003164:	42af      	cmp	r7, r5
 8003166:	d003      	beq.n	8003170 <_dtoa_r+0x6b0>
 8003168:	4639      	mov	r1, r7
 800316a:	4658      	mov	r0, fp
 800316c:	f000 fbae 	bl	80038cc <_Bfree>
 8003170:	4629      	mov	r1, r5
 8003172:	4658      	mov	r0, fp
 8003174:	f000 fbaa 	bl	80038cc <_Bfree>
 8003178:	e7d0      	b.n	800311c <_dtoa_r+0x65c>
 800317a:	9704      	str	r7, [sp, #16]
 800317c:	4633      	mov	r3, r6
 800317e:	461e      	mov	r6, r3
 8003180:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003184:	2a39      	cmp	r2, #57	@ 0x39
 8003186:	d107      	bne.n	8003198 <_dtoa_r+0x6d8>
 8003188:	459a      	cmp	sl, r3
 800318a:	d1f8      	bne.n	800317e <_dtoa_r+0x6be>
 800318c:	9a04      	ldr	r2, [sp, #16]
 800318e:	3201      	adds	r2, #1
 8003190:	9204      	str	r2, [sp, #16]
 8003192:	2230      	movs	r2, #48	@ 0x30
 8003194:	f88a 2000 	strb.w	r2, [sl]
 8003198:	781a      	ldrb	r2, [r3, #0]
 800319a:	3201      	adds	r2, #1
 800319c:	701a      	strb	r2, [r3, #0]
 800319e:	e7bd      	b.n	800311c <_dtoa_r+0x65c>
 80031a0:	2200      	movs	r2, #0
 80031a2:	4b09      	ldr	r3, [pc, #36]	@ (80031c8 <_dtoa_r+0x708>)
 80031a4:	f7fd fa5c 	bl	8000660 <__aeabi_dmul>
 80031a8:	2200      	movs	r2, #0
 80031aa:	2300      	movs	r3, #0
 80031ac:	4604      	mov	r4, r0
 80031ae:	460d      	mov	r5, r1
 80031b0:	f7fd fcbe 	bl	8000b30 <__aeabi_dcmpeq>
 80031b4:	2800      	cmp	r0, #0
 80031b6:	f43f aebc 	beq.w	8002f32 <_dtoa_r+0x472>
 80031ba:	e6f1      	b.n	8002fa0 <_dtoa_r+0x4e0>
 80031bc:	080047d0 	.word	0x080047d0
 80031c0:	3fe00000 	.word	0x3fe00000
 80031c4:	3ff00000 	.word	0x3ff00000
 80031c8:	40240000 	.word	0x40240000
 80031cc:	40140000 	.word	0x40140000
 80031d0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80031d2:	2a00      	cmp	r2, #0
 80031d4:	f000 80db 	beq.w	800338e <_dtoa_r+0x8ce>
 80031d8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80031da:	2a01      	cmp	r2, #1
 80031dc:	f300 80bf 	bgt.w	800335e <_dtoa_r+0x89e>
 80031e0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80031e2:	2a00      	cmp	r2, #0
 80031e4:	f000 80b7 	beq.w	8003356 <_dtoa_r+0x896>
 80031e8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80031ec:	4646      	mov	r6, r8
 80031ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80031f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80031f2:	2101      	movs	r1, #1
 80031f4:	441a      	add	r2, r3
 80031f6:	4658      	mov	r0, fp
 80031f8:	4498      	add	r8, r3
 80031fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80031fc:	f000 fc1a 	bl	8003a34 <__i2b>
 8003200:	4605      	mov	r5, r0
 8003202:	b15e      	cbz	r6, 800321c <_dtoa_r+0x75c>
 8003204:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003206:	2b00      	cmp	r3, #0
 8003208:	dd08      	ble.n	800321c <_dtoa_r+0x75c>
 800320a:	42b3      	cmp	r3, r6
 800320c:	bfa8      	it	ge
 800320e:	4633      	movge	r3, r6
 8003210:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003212:	eba8 0803 	sub.w	r8, r8, r3
 8003216:	1af6      	subs	r6, r6, r3
 8003218:	1ad3      	subs	r3, r2, r3
 800321a:	9309      	str	r3, [sp, #36]	@ 0x24
 800321c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800321e:	b1f3      	cbz	r3, 800325e <_dtoa_r+0x79e>
 8003220:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003222:	2b00      	cmp	r3, #0
 8003224:	f000 80b7 	beq.w	8003396 <_dtoa_r+0x8d6>
 8003228:	b18c      	cbz	r4, 800324e <_dtoa_r+0x78e>
 800322a:	4629      	mov	r1, r5
 800322c:	4622      	mov	r2, r4
 800322e:	4658      	mov	r0, fp
 8003230:	f000 fcbe 	bl	8003bb0 <__pow5mult>
 8003234:	464a      	mov	r2, r9
 8003236:	4601      	mov	r1, r0
 8003238:	4605      	mov	r5, r0
 800323a:	4658      	mov	r0, fp
 800323c:	f000 fc10 	bl	8003a60 <__multiply>
 8003240:	4649      	mov	r1, r9
 8003242:	9004      	str	r0, [sp, #16]
 8003244:	4658      	mov	r0, fp
 8003246:	f000 fb41 	bl	80038cc <_Bfree>
 800324a:	9b04      	ldr	r3, [sp, #16]
 800324c:	4699      	mov	r9, r3
 800324e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003250:	1b1a      	subs	r2, r3, r4
 8003252:	d004      	beq.n	800325e <_dtoa_r+0x79e>
 8003254:	4649      	mov	r1, r9
 8003256:	4658      	mov	r0, fp
 8003258:	f000 fcaa 	bl	8003bb0 <__pow5mult>
 800325c:	4681      	mov	r9, r0
 800325e:	2101      	movs	r1, #1
 8003260:	4658      	mov	r0, fp
 8003262:	f000 fbe7 	bl	8003a34 <__i2b>
 8003266:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003268:	4604      	mov	r4, r0
 800326a:	2b00      	cmp	r3, #0
 800326c:	f000 81c9 	beq.w	8003602 <_dtoa_r+0xb42>
 8003270:	461a      	mov	r2, r3
 8003272:	4601      	mov	r1, r0
 8003274:	4658      	mov	r0, fp
 8003276:	f000 fc9b 	bl	8003bb0 <__pow5mult>
 800327a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800327c:	4604      	mov	r4, r0
 800327e:	2b01      	cmp	r3, #1
 8003280:	f300 808f 	bgt.w	80033a2 <_dtoa_r+0x8e2>
 8003284:	9b02      	ldr	r3, [sp, #8]
 8003286:	2b00      	cmp	r3, #0
 8003288:	f040 8087 	bne.w	800339a <_dtoa_r+0x8da>
 800328c:	9b03      	ldr	r3, [sp, #12]
 800328e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003292:	2b00      	cmp	r3, #0
 8003294:	f040 8083 	bne.w	800339e <_dtoa_r+0x8de>
 8003298:	9b03      	ldr	r3, [sp, #12]
 800329a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800329e:	0d1b      	lsrs	r3, r3, #20
 80032a0:	051b      	lsls	r3, r3, #20
 80032a2:	b12b      	cbz	r3, 80032b0 <_dtoa_r+0x7f0>
 80032a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80032a6:	f108 0801 	add.w	r8, r8, #1
 80032aa:	3301      	adds	r3, #1
 80032ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80032ae:	2301      	movs	r3, #1
 80032b0:	930a      	str	r3, [sp, #40]	@ 0x28
 80032b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	f000 81aa 	beq.w	800360e <_dtoa_r+0xb4e>
 80032ba:	6923      	ldr	r3, [r4, #16]
 80032bc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80032c0:	6918      	ldr	r0, [r3, #16]
 80032c2:	f000 fb6b 	bl	800399c <__hi0bits>
 80032c6:	f1c0 0020 	rsb	r0, r0, #32
 80032ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80032cc:	4418      	add	r0, r3
 80032ce:	f010 001f 	ands.w	r0, r0, #31
 80032d2:	d071      	beq.n	80033b8 <_dtoa_r+0x8f8>
 80032d4:	f1c0 0320 	rsb	r3, r0, #32
 80032d8:	2b04      	cmp	r3, #4
 80032da:	dd65      	ble.n	80033a8 <_dtoa_r+0x8e8>
 80032dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80032de:	f1c0 001c 	rsb	r0, r0, #28
 80032e2:	4403      	add	r3, r0
 80032e4:	4480      	add	r8, r0
 80032e6:	4406      	add	r6, r0
 80032e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80032ea:	f1b8 0f00 	cmp.w	r8, #0
 80032ee:	dd05      	ble.n	80032fc <_dtoa_r+0x83c>
 80032f0:	4649      	mov	r1, r9
 80032f2:	4642      	mov	r2, r8
 80032f4:	4658      	mov	r0, fp
 80032f6:	f000 fcb5 	bl	8003c64 <__lshift>
 80032fa:	4681      	mov	r9, r0
 80032fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80032fe:	2b00      	cmp	r3, #0
 8003300:	dd05      	ble.n	800330e <_dtoa_r+0x84e>
 8003302:	4621      	mov	r1, r4
 8003304:	461a      	mov	r2, r3
 8003306:	4658      	mov	r0, fp
 8003308:	f000 fcac 	bl	8003c64 <__lshift>
 800330c:	4604      	mov	r4, r0
 800330e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003310:	2b00      	cmp	r3, #0
 8003312:	d053      	beq.n	80033bc <_dtoa_r+0x8fc>
 8003314:	4621      	mov	r1, r4
 8003316:	4648      	mov	r0, r9
 8003318:	f000 fd10 	bl	8003d3c <__mcmp>
 800331c:	2800      	cmp	r0, #0
 800331e:	da4d      	bge.n	80033bc <_dtoa_r+0x8fc>
 8003320:	1e7b      	subs	r3, r7, #1
 8003322:	4649      	mov	r1, r9
 8003324:	9304      	str	r3, [sp, #16]
 8003326:	220a      	movs	r2, #10
 8003328:	2300      	movs	r3, #0
 800332a:	4658      	mov	r0, fp
 800332c:	f000 faf0 	bl	8003910 <__multadd>
 8003330:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003332:	4681      	mov	r9, r0
 8003334:	2b00      	cmp	r3, #0
 8003336:	f000 816c 	beq.w	8003612 <_dtoa_r+0xb52>
 800333a:	2300      	movs	r3, #0
 800333c:	4629      	mov	r1, r5
 800333e:	220a      	movs	r2, #10
 8003340:	4658      	mov	r0, fp
 8003342:	f000 fae5 	bl	8003910 <__multadd>
 8003346:	9b08      	ldr	r3, [sp, #32]
 8003348:	4605      	mov	r5, r0
 800334a:	2b00      	cmp	r3, #0
 800334c:	dc61      	bgt.n	8003412 <_dtoa_r+0x952>
 800334e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003350:	2b02      	cmp	r3, #2
 8003352:	dc3b      	bgt.n	80033cc <_dtoa_r+0x90c>
 8003354:	e05d      	b.n	8003412 <_dtoa_r+0x952>
 8003356:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003358:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800335c:	e746      	b.n	80031ec <_dtoa_r+0x72c>
 800335e:	9b07      	ldr	r3, [sp, #28]
 8003360:	1e5c      	subs	r4, r3, #1
 8003362:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003364:	42a3      	cmp	r3, r4
 8003366:	bfbf      	itttt	lt
 8003368:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800336a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 800336c:	1ae3      	sublt	r3, r4, r3
 800336e:	18d2      	addlt	r2, r2, r3
 8003370:	bfa8      	it	ge
 8003372:	1b1c      	subge	r4, r3, r4
 8003374:	9b07      	ldr	r3, [sp, #28]
 8003376:	bfbe      	ittt	lt
 8003378:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800337a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 800337c:	2400      	movlt	r4, #0
 800337e:	2b00      	cmp	r3, #0
 8003380:	bfb5      	itete	lt
 8003382:	eba8 0603 	sublt.w	r6, r8, r3
 8003386:	4646      	movge	r6, r8
 8003388:	2300      	movlt	r3, #0
 800338a:	9b07      	ldrge	r3, [sp, #28]
 800338c:	e730      	b.n	80031f0 <_dtoa_r+0x730>
 800338e:	4646      	mov	r6, r8
 8003390:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003392:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003394:	e735      	b.n	8003202 <_dtoa_r+0x742>
 8003396:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003398:	e75c      	b.n	8003254 <_dtoa_r+0x794>
 800339a:	2300      	movs	r3, #0
 800339c:	e788      	b.n	80032b0 <_dtoa_r+0x7f0>
 800339e:	9b02      	ldr	r3, [sp, #8]
 80033a0:	e786      	b.n	80032b0 <_dtoa_r+0x7f0>
 80033a2:	2300      	movs	r3, #0
 80033a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80033a6:	e788      	b.n	80032ba <_dtoa_r+0x7fa>
 80033a8:	d09f      	beq.n	80032ea <_dtoa_r+0x82a>
 80033aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80033ac:	331c      	adds	r3, #28
 80033ae:	441a      	add	r2, r3
 80033b0:	4498      	add	r8, r3
 80033b2:	441e      	add	r6, r3
 80033b4:	9209      	str	r2, [sp, #36]	@ 0x24
 80033b6:	e798      	b.n	80032ea <_dtoa_r+0x82a>
 80033b8:	4603      	mov	r3, r0
 80033ba:	e7f6      	b.n	80033aa <_dtoa_r+0x8ea>
 80033bc:	9b07      	ldr	r3, [sp, #28]
 80033be:	9704      	str	r7, [sp, #16]
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	dc20      	bgt.n	8003406 <_dtoa_r+0x946>
 80033c4:	9308      	str	r3, [sp, #32]
 80033c6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80033c8:	2b02      	cmp	r3, #2
 80033ca:	dd1e      	ble.n	800340a <_dtoa_r+0x94a>
 80033cc:	9b08      	ldr	r3, [sp, #32]
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	f47f aebc 	bne.w	800314c <_dtoa_r+0x68c>
 80033d4:	4621      	mov	r1, r4
 80033d6:	2205      	movs	r2, #5
 80033d8:	4658      	mov	r0, fp
 80033da:	f000 fa99 	bl	8003910 <__multadd>
 80033de:	4601      	mov	r1, r0
 80033e0:	4604      	mov	r4, r0
 80033e2:	4648      	mov	r0, r9
 80033e4:	f000 fcaa 	bl	8003d3c <__mcmp>
 80033e8:	2800      	cmp	r0, #0
 80033ea:	f77f aeaf 	ble.w	800314c <_dtoa_r+0x68c>
 80033ee:	2331      	movs	r3, #49	@ 0x31
 80033f0:	4656      	mov	r6, sl
 80033f2:	f806 3b01 	strb.w	r3, [r6], #1
 80033f6:	9b04      	ldr	r3, [sp, #16]
 80033f8:	3301      	adds	r3, #1
 80033fa:	9304      	str	r3, [sp, #16]
 80033fc:	e6aa      	b.n	8003154 <_dtoa_r+0x694>
 80033fe:	9c07      	ldr	r4, [sp, #28]
 8003400:	9704      	str	r7, [sp, #16]
 8003402:	4625      	mov	r5, r4
 8003404:	e7f3      	b.n	80033ee <_dtoa_r+0x92e>
 8003406:	9b07      	ldr	r3, [sp, #28]
 8003408:	9308      	str	r3, [sp, #32]
 800340a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800340c:	2b00      	cmp	r3, #0
 800340e:	f000 8104 	beq.w	800361a <_dtoa_r+0xb5a>
 8003412:	2e00      	cmp	r6, #0
 8003414:	dd05      	ble.n	8003422 <_dtoa_r+0x962>
 8003416:	4629      	mov	r1, r5
 8003418:	4632      	mov	r2, r6
 800341a:	4658      	mov	r0, fp
 800341c:	f000 fc22 	bl	8003c64 <__lshift>
 8003420:	4605      	mov	r5, r0
 8003422:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003424:	2b00      	cmp	r3, #0
 8003426:	d05a      	beq.n	80034de <_dtoa_r+0xa1e>
 8003428:	4658      	mov	r0, fp
 800342a:	6869      	ldr	r1, [r5, #4]
 800342c:	f000 fa0e 	bl	800384c <_Balloc>
 8003430:	4606      	mov	r6, r0
 8003432:	b928      	cbnz	r0, 8003440 <_dtoa_r+0x980>
 8003434:	4602      	mov	r2, r0
 8003436:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800343a:	4b83      	ldr	r3, [pc, #524]	@ (8003648 <_dtoa_r+0xb88>)
 800343c:	f7ff bb54 	b.w	8002ae8 <_dtoa_r+0x28>
 8003440:	692a      	ldr	r2, [r5, #16]
 8003442:	f105 010c 	add.w	r1, r5, #12
 8003446:	3202      	adds	r2, #2
 8003448:	0092      	lsls	r2, r2, #2
 800344a:	300c      	adds	r0, #12
 800344c:	f000 fffa 	bl	8004444 <memcpy>
 8003450:	2201      	movs	r2, #1
 8003452:	4631      	mov	r1, r6
 8003454:	4658      	mov	r0, fp
 8003456:	f000 fc05 	bl	8003c64 <__lshift>
 800345a:	462f      	mov	r7, r5
 800345c:	4605      	mov	r5, r0
 800345e:	f10a 0301 	add.w	r3, sl, #1
 8003462:	9307      	str	r3, [sp, #28]
 8003464:	9b08      	ldr	r3, [sp, #32]
 8003466:	4453      	add	r3, sl
 8003468:	930b      	str	r3, [sp, #44]	@ 0x2c
 800346a:	9b02      	ldr	r3, [sp, #8]
 800346c:	f003 0301 	and.w	r3, r3, #1
 8003470:	930a      	str	r3, [sp, #40]	@ 0x28
 8003472:	9b07      	ldr	r3, [sp, #28]
 8003474:	4621      	mov	r1, r4
 8003476:	3b01      	subs	r3, #1
 8003478:	4648      	mov	r0, r9
 800347a:	9302      	str	r3, [sp, #8]
 800347c:	f7ff fa95 	bl	80029aa <quorem>
 8003480:	4639      	mov	r1, r7
 8003482:	9008      	str	r0, [sp, #32]
 8003484:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003488:	4648      	mov	r0, r9
 800348a:	f000 fc57 	bl	8003d3c <__mcmp>
 800348e:	462a      	mov	r2, r5
 8003490:	9009      	str	r0, [sp, #36]	@ 0x24
 8003492:	4621      	mov	r1, r4
 8003494:	4658      	mov	r0, fp
 8003496:	f000 fc6d 	bl	8003d74 <__mdiff>
 800349a:	68c2      	ldr	r2, [r0, #12]
 800349c:	4606      	mov	r6, r0
 800349e:	bb02      	cbnz	r2, 80034e2 <_dtoa_r+0xa22>
 80034a0:	4601      	mov	r1, r0
 80034a2:	4648      	mov	r0, r9
 80034a4:	f000 fc4a 	bl	8003d3c <__mcmp>
 80034a8:	4602      	mov	r2, r0
 80034aa:	4631      	mov	r1, r6
 80034ac:	4658      	mov	r0, fp
 80034ae:	920c      	str	r2, [sp, #48]	@ 0x30
 80034b0:	f000 fa0c 	bl	80038cc <_Bfree>
 80034b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80034b6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80034b8:	9e07      	ldr	r6, [sp, #28]
 80034ba:	ea43 0102 	orr.w	r1, r3, r2
 80034be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80034c0:	4319      	orrs	r1, r3
 80034c2:	d110      	bne.n	80034e6 <_dtoa_r+0xa26>
 80034c4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80034c8:	d029      	beq.n	800351e <_dtoa_r+0xa5e>
 80034ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80034cc:	2b00      	cmp	r3, #0
 80034ce:	dd02      	ble.n	80034d6 <_dtoa_r+0xa16>
 80034d0:	9b08      	ldr	r3, [sp, #32]
 80034d2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80034d6:	9b02      	ldr	r3, [sp, #8]
 80034d8:	f883 8000 	strb.w	r8, [r3]
 80034dc:	e63b      	b.n	8003156 <_dtoa_r+0x696>
 80034de:	4628      	mov	r0, r5
 80034e0:	e7bb      	b.n	800345a <_dtoa_r+0x99a>
 80034e2:	2201      	movs	r2, #1
 80034e4:	e7e1      	b.n	80034aa <_dtoa_r+0x9ea>
 80034e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	db04      	blt.n	80034f6 <_dtoa_r+0xa36>
 80034ec:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80034ee:	430b      	orrs	r3, r1
 80034f0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80034f2:	430b      	orrs	r3, r1
 80034f4:	d120      	bne.n	8003538 <_dtoa_r+0xa78>
 80034f6:	2a00      	cmp	r2, #0
 80034f8:	dded      	ble.n	80034d6 <_dtoa_r+0xa16>
 80034fa:	4649      	mov	r1, r9
 80034fc:	2201      	movs	r2, #1
 80034fe:	4658      	mov	r0, fp
 8003500:	f000 fbb0 	bl	8003c64 <__lshift>
 8003504:	4621      	mov	r1, r4
 8003506:	4681      	mov	r9, r0
 8003508:	f000 fc18 	bl	8003d3c <__mcmp>
 800350c:	2800      	cmp	r0, #0
 800350e:	dc03      	bgt.n	8003518 <_dtoa_r+0xa58>
 8003510:	d1e1      	bne.n	80034d6 <_dtoa_r+0xa16>
 8003512:	f018 0f01 	tst.w	r8, #1
 8003516:	d0de      	beq.n	80034d6 <_dtoa_r+0xa16>
 8003518:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800351c:	d1d8      	bne.n	80034d0 <_dtoa_r+0xa10>
 800351e:	2339      	movs	r3, #57	@ 0x39
 8003520:	9a02      	ldr	r2, [sp, #8]
 8003522:	7013      	strb	r3, [r2, #0]
 8003524:	4633      	mov	r3, r6
 8003526:	461e      	mov	r6, r3
 8003528:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800352c:	3b01      	subs	r3, #1
 800352e:	2a39      	cmp	r2, #57	@ 0x39
 8003530:	d052      	beq.n	80035d8 <_dtoa_r+0xb18>
 8003532:	3201      	adds	r2, #1
 8003534:	701a      	strb	r2, [r3, #0]
 8003536:	e60e      	b.n	8003156 <_dtoa_r+0x696>
 8003538:	2a00      	cmp	r2, #0
 800353a:	dd07      	ble.n	800354c <_dtoa_r+0xa8c>
 800353c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003540:	d0ed      	beq.n	800351e <_dtoa_r+0xa5e>
 8003542:	9a02      	ldr	r2, [sp, #8]
 8003544:	f108 0301 	add.w	r3, r8, #1
 8003548:	7013      	strb	r3, [r2, #0]
 800354a:	e604      	b.n	8003156 <_dtoa_r+0x696>
 800354c:	9b07      	ldr	r3, [sp, #28]
 800354e:	9a07      	ldr	r2, [sp, #28]
 8003550:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003554:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003556:	4293      	cmp	r3, r2
 8003558:	d028      	beq.n	80035ac <_dtoa_r+0xaec>
 800355a:	4649      	mov	r1, r9
 800355c:	2300      	movs	r3, #0
 800355e:	220a      	movs	r2, #10
 8003560:	4658      	mov	r0, fp
 8003562:	f000 f9d5 	bl	8003910 <__multadd>
 8003566:	42af      	cmp	r7, r5
 8003568:	4681      	mov	r9, r0
 800356a:	f04f 0300 	mov.w	r3, #0
 800356e:	f04f 020a 	mov.w	r2, #10
 8003572:	4639      	mov	r1, r7
 8003574:	4658      	mov	r0, fp
 8003576:	d107      	bne.n	8003588 <_dtoa_r+0xac8>
 8003578:	f000 f9ca 	bl	8003910 <__multadd>
 800357c:	4607      	mov	r7, r0
 800357e:	4605      	mov	r5, r0
 8003580:	9b07      	ldr	r3, [sp, #28]
 8003582:	3301      	adds	r3, #1
 8003584:	9307      	str	r3, [sp, #28]
 8003586:	e774      	b.n	8003472 <_dtoa_r+0x9b2>
 8003588:	f000 f9c2 	bl	8003910 <__multadd>
 800358c:	4629      	mov	r1, r5
 800358e:	4607      	mov	r7, r0
 8003590:	2300      	movs	r3, #0
 8003592:	220a      	movs	r2, #10
 8003594:	4658      	mov	r0, fp
 8003596:	f000 f9bb 	bl	8003910 <__multadd>
 800359a:	4605      	mov	r5, r0
 800359c:	e7f0      	b.n	8003580 <_dtoa_r+0xac0>
 800359e:	9b08      	ldr	r3, [sp, #32]
 80035a0:	2700      	movs	r7, #0
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	bfcc      	ite	gt
 80035a6:	461e      	movgt	r6, r3
 80035a8:	2601      	movle	r6, #1
 80035aa:	4456      	add	r6, sl
 80035ac:	4649      	mov	r1, r9
 80035ae:	2201      	movs	r2, #1
 80035b0:	4658      	mov	r0, fp
 80035b2:	f000 fb57 	bl	8003c64 <__lshift>
 80035b6:	4621      	mov	r1, r4
 80035b8:	4681      	mov	r9, r0
 80035ba:	f000 fbbf 	bl	8003d3c <__mcmp>
 80035be:	2800      	cmp	r0, #0
 80035c0:	dcb0      	bgt.n	8003524 <_dtoa_r+0xa64>
 80035c2:	d102      	bne.n	80035ca <_dtoa_r+0xb0a>
 80035c4:	f018 0f01 	tst.w	r8, #1
 80035c8:	d1ac      	bne.n	8003524 <_dtoa_r+0xa64>
 80035ca:	4633      	mov	r3, r6
 80035cc:	461e      	mov	r6, r3
 80035ce:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80035d2:	2a30      	cmp	r2, #48	@ 0x30
 80035d4:	d0fa      	beq.n	80035cc <_dtoa_r+0xb0c>
 80035d6:	e5be      	b.n	8003156 <_dtoa_r+0x696>
 80035d8:	459a      	cmp	sl, r3
 80035da:	d1a4      	bne.n	8003526 <_dtoa_r+0xa66>
 80035dc:	9b04      	ldr	r3, [sp, #16]
 80035de:	3301      	adds	r3, #1
 80035e0:	9304      	str	r3, [sp, #16]
 80035e2:	2331      	movs	r3, #49	@ 0x31
 80035e4:	f88a 3000 	strb.w	r3, [sl]
 80035e8:	e5b5      	b.n	8003156 <_dtoa_r+0x696>
 80035ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80035ec:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800364c <_dtoa_r+0xb8c>
 80035f0:	b11b      	cbz	r3, 80035fa <_dtoa_r+0xb3a>
 80035f2:	f10a 0308 	add.w	r3, sl, #8
 80035f6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80035f8:	6013      	str	r3, [r2, #0]
 80035fa:	4650      	mov	r0, sl
 80035fc:	b017      	add	sp, #92	@ 0x5c
 80035fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003602:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003604:	2b01      	cmp	r3, #1
 8003606:	f77f ae3d 	ble.w	8003284 <_dtoa_r+0x7c4>
 800360a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800360c:	930a      	str	r3, [sp, #40]	@ 0x28
 800360e:	2001      	movs	r0, #1
 8003610:	e65b      	b.n	80032ca <_dtoa_r+0x80a>
 8003612:	9b08      	ldr	r3, [sp, #32]
 8003614:	2b00      	cmp	r3, #0
 8003616:	f77f aed6 	ble.w	80033c6 <_dtoa_r+0x906>
 800361a:	4656      	mov	r6, sl
 800361c:	4621      	mov	r1, r4
 800361e:	4648      	mov	r0, r9
 8003620:	f7ff f9c3 	bl	80029aa <quorem>
 8003624:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003628:	9b08      	ldr	r3, [sp, #32]
 800362a:	f806 8b01 	strb.w	r8, [r6], #1
 800362e:	eba6 020a 	sub.w	r2, r6, sl
 8003632:	4293      	cmp	r3, r2
 8003634:	ddb3      	ble.n	800359e <_dtoa_r+0xade>
 8003636:	4649      	mov	r1, r9
 8003638:	2300      	movs	r3, #0
 800363a:	220a      	movs	r2, #10
 800363c:	4658      	mov	r0, fp
 800363e:	f000 f967 	bl	8003910 <__multadd>
 8003642:	4681      	mov	r9, r0
 8003644:	e7ea      	b.n	800361c <_dtoa_r+0xb5c>
 8003646:	bf00      	nop
 8003648:	0800472c 	.word	0x0800472c
 800364c:	080046b0 	.word	0x080046b0

08003650 <_free_r>:
 8003650:	b538      	push	{r3, r4, r5, lr}
 8003652:	4605      	mov	r5, r0
 8003654:	2900      	cmp	r1, #0
 8003656:	d040      	beq.n	80036da <_free_r+0x8a>
 8003658:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800365c:	1f0c      	subs	r4, r1, #4
 800365e:	2b00      	cmp	r3, #0
 8003660:	bfb8      	it	lt
 8003662:	18e4      	addlt	r4, r4, r3
 8003664:	f000 f8e6 	bl	8003834 <__malloc_lock>
 8003668:	4a1c      	ldr	r2, [pc, #112]	@ (80036dc <_free_r+0x8c>)
 800366a:	6813      	ldr	r3, [r2, #0]
 800366c:	b933      	cbnz	r3, 800367c <_free_r+0x2c>
 800366e:	6063      	str	r3, [r4, #4]
 8003670:	6014      	str	r4, [r2, #0]
 8003672:	4628      	mov	r0, r5
 8003674:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003678:	f000 b8e2 	b.w	8003840 <__malloc_unlock>
 800367c:	42a3      	cmp	r3, r4
 800367e:	d908      	bls.n	8003692 <_free_r+0x42>
 8003680:	6820      	ldr	r0, [r4, #0]
 8003682:	1821      	adds	r1, r4, r0
 8003684:	428b      	cmp	r3, r1
 8003686:	bf01      	itttt	eq
 8003688:	6819      	ldreq	r1, [r3, #0]
 800368a:	685b      	ldreq	r3, [r3, #4]
 800368c:	1809      	addeq	r1, r1, r0
 800368e:	6021      	streq	r1, [r4, #0]
 8003690:	e7ed      	b.n	800366e <_free_r+0x1e>
 8003692:	461a      	mov	r2, r3
 8003694:	685b      	ldr	r3, [r3, #4]
 8003696:	b10b      	cbz	r3, 800369c <_free_r+0x4c>
 8003698:	42a3      	cmp	r3, r4
 800369a:	d9fa      	bls.n	8003692 <_free_r+0x42>
 800369c:	6811      	ldr	r1, [r2, #0]
 800369e:	1850      	adds	r0, r2, r1
 80036a0:	42a0      	cmp	r0, r4
 80036a2:	d10b      	bne.n	80036bc <_free_r+0x6c>
 80036a4:	6820      	ldr	r0, [r4, #0]
 80036a6:	4401      	add	r1, r0
 80036a8:	1850      	adds	r0, r2, r1
 80036aa:	4283      	cmp	r3, r0
 80036ac:	6011      	str	r1, [r2, #0]
 80036ae:	d1e0      	bne.n	8003672 <_free_r+0x22>
 80036b0:	6818      	ldr	r0, [r3, #0]
 80036b2:	685b      	ldr	r3, [r3, #4]
 80036b4:	4408      	add	r0, r1
 80036b6:	6010      	str	r0, [r2, #0]
 80036b8:	6053      	str	r3, [r2, #4]
 80036ba:	e7da      	b.n	8003672 <_free_r+0x22>
 80036bc:	d902      	bls.n	80036c4 <_free_r+0x74>
 80036be:	230c      	movs	r3, #12
 80036c0:	602b      	str	r3, [r5, #0]
 80036c2:	e7d6      	b.n	8003672 <_free_r+0x22>
 80036c4:	6820      	ldr	r0, [r4, #0]
 80036c6:	1821      	adds	r1, r4, r0
 80036c8:	428b      	cmp	r3, r1
 80036ca:	bf01      	itttt	eq
 80036cc:	6819      	ldreq	r1, [r3, #0]
 80036ce:	685b      	ldreq	r3, [r3, #4]
 80036d0:	1809      	addeq	r1, r1, r0
 80036d2:	6021      	streq	r1, [r4, #0]
 80036d4:	6063      	str	r3, [r4, #4]
 80036d6:	6054      	str	r4, [r2, #4]
 80036d8:	e7cb      	b.n	8003672 <_free_r+0x22>
 80036da:	bd38      	pop	{r3, r4, r5, pc}
 80036dc:	20000570 	.word	0x20000570

080036e0 <malloc>:
 80036e0:	4b02      	ldr	r3, [pc, #8]	@ (80036ec <malloc+0xc>)
 80036e2:	4601      	mov	r1, r0
 80036e4:	6818      	ldr	r0, [r3, #0]
 80036e6:	f000 b825 	b.w	8003734 <_malloc_r>
 80036ea:	bf00      	nop
 80036ec:	20000010 	.word	0x20000010

080036f0 <sbrk_aligned>:
 80036f0:	b570      	push	{r4, r5, r6, lr}
 80036f2:	4e0f      	ldr	r6, [pc, #60]	@ (8003730 <sbrk_aligned+0x40>)
 80036f4:	460c      	mov	r4, r1
 80036f6:	6831      	ldr	r1, [r6, #0]
 80036f8:	4605      	mov	r5, r0
 80036fa:	b911      	cbnz	r1, 8003702 <sbrk_aligned+0x12>
 80036fc:	f000 fe92 	bl	8004424 <_sbrk_r>
 8003700:	6030      	str	r0, [r6, #0]
 8003702:	4621      	mov	r1, r4
 8003704:	4628      	mov	r0, r5
 8003706:	f000 fe8d 	bl	8004424 <_sbrk_r>
 800370a:	1c43      	adds	r3, r0, #1
 800370c:	d103      	bne.n	8003716 <sbrk_aligned+0x26>
 800370e:	f04f 34ff 	mov.w	r4, #4294967295
 8003712:	4620      	mov	r0, r4
 8003714:	bd70      	pop	{r4, r5, r6, pc}
 8003716:	1cc4      	adds	r4, r0, #3
 8003718:	f024 0403 	bic.w	r4, r4, #3
 800371c:	42a0      	cmp	r0, r4
 800371e:	d0f8      	beq.n	8003712 <sbrk_aligned+0x22>
 8003720:	1a21      	subs	r1, r4, r0
 8003722:	4628      	mov	r0, r5
 8003724:	f000 fe7e 	bl	8004424 <_sbrk_r>
 8003728:	3001      	adds	r0, #1
 800372a:	d1f2      	bne.n	8003712 <sbrk_aligned+0x22>
 800372c:	e7ef      	b.n	800370e <sbrk_aligned+0x1e>
 800372e:	bf00      	nop
 8003730:	2000056c 	.word	0x2000056c

08003734 <_malloc_r>:
 8003734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003738:	1ccd      	adds	r5, r1, #3
 800373a:	f025 0503 	bic.w	r5, r5, #3
 800373e:	3508      	adds	r5, #8
 8003740:	2d0c      	cmp	r5, #12
 8003742:	bf38      	it	cc
 8003744:	250c      	movcc	r5, #12
 8003746:	2d00      	cmp	r5, #0
 8003748:	4606      	mov	r6, r0
 800374a:	db01      	blt.n	8003750 <_malloc_r+0x1c>
 800374c:	42a9      	cmp	r1, r5
 800374e:	d904      	bls.n	800375a <_malloc_r+0x26>
 8003750:	230c      	movs	r3, #12
 8003752:	6033      	str	r3, [r6, #0]
 8003754:	2000      	movs	r0, #0
 8003756:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800375a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003830 <_malloc_r+0xfc>
 800375e:	f000 f869 	bl	8003834 <__malloc_lock>
 8003762:	f8d8 3000 	ldr.w	r3, [r8]
 8003766:	461c      	mov	r4, r3
 8003768:	bb44      	cbnz	r4, 80037bc <_malloc_r+0x88>
 800376a:	4629      	mov	r1, r5
 800376c:	4630      	mov	r0, r6
 800376e:	f7ff ffbf 	bl	80036f0 <sbrk_aligned>
 8003772:	1c43      	adds	r3, r0, #1
 8003774:	4604      	mov	r4, r0
 8003776:	d158      	bne.n	800382a <_malloc_r+0xf6>
 8003778:	f8d8 4000 	ldr.w	r4, [r8]
 800377c:	4627      	mov	r7, r4
 800377e:	2f00      	cmp	r7, #0
 8003780:	d143      	bne.n	800380a <_malloc_r+0xd6>
 8003782:	2c00      	cmp	r4, #0
 8003784:	d04b      	beq.n	800381e <_malloc_r+0xea>
 8003786:	6823      	ldr	r3, [r4, #0]
 8003788:	4639      	mov	r1, r7
 800378a:	4630      	mov	r0, r6
 800378c:	eb04 0903 	add.w	r9, r4, r3
 8003790:	f000 fe48 	bl	8004424 <_sbrk_r>
 8003794:	4581      	cmp	r9, r0
 8003796:	d142      	bne.n	800381e <_malloc_r+0xea>
 8003798:	6821      	ldr	r1, [r4, #0]
 800379a:	4630      	mov	r0, r6
 800379c:	1a6d      	subs	r5, r5, r1
 800379e:	4629      	mov	r1, r5
 80037a0:	f7ff ffa6 	bl	80036f0 <sbrk_aligned>
 80037a4:	3001      	adds	r0, #1
 80037a6:	d03a      	beq.n	800381e <_malloc_r+0xea>
 80037a8:	6823      	ldr	r3, [r4, #0]
 80037aa:	442b      	add	r3, r5
 80037ac:	6023      	str	r3, [r4, #0]
 80037ae:	f8d8 3000 	ldr.w	r3, [r8]
 80037b2:	685a      	ldr	r2, [r3, #4]
 80037b4:	bb62      	cbnz	r2, 8003810 <_malloc_r+0xdc>
 80037b6:	f8c8 7000 	str.w	r7, [r8]
 80037ba:	e00f      	b.n	80037dc <_malloc_r+0xa8>
 80037bc:	6822      	ldr	r2, [r4, #0]
 80037be:	1b52      	subs	r2, r2, r5
 80037c0:	d420      	bmi.n	8003804 <_malloc_r+0xd0>
 80037c2:	2a0b      	cmp	r2, #11
 80037c4:	d917      	bls.n	80037f6 <_malloc_r+0xc2>
 80037c6:	1961      	adds	r1, r4, r5
 80037c8:	42a3      	cmp	r3, r4
 80037ca:	6025      	str	r5, [r4, #0]
 80037cc:	bf18      	it	ne
 80037ce:	6059      	strne	r1, [r3, #4]
 80037d0:	6863      	ldr	r3, [r4, #4]
 80037d2:	bf08      	it	eq
 80037d4:	f8c8 1000 	streq.w	r1, [r8]
 80037d8:	5162      	str	r2, [r4, r5]
 80037da:	604b      	str	r3, [r1, #4]
 80037dc:	4630      	mov	r0, r6
 80037de:	f000 f82f 	bl	8003840 <__malloc_unlock>
 80037e2:	f104 000b 	add.w	r0, r4, #11
 80037e6:	1d23      	adds	r3, r4, #4
 80037e8:	f020 0007 	bic.w	r0, r0, #7
 80037ec:	1ac2      	subs	r2, r0, r3
 80037ee:	bf1c      	itt	ne
 80037f0:	1a1b      	subne	r3, r3, r0
 80037f2:	50a3      	strne	r3, [r4, r2]
 80037f4:	e7af      	b.n	8003756 <_malloc_r+0x22>
 80037f6:	6862      	ldr	r2, [r4, #4]
 80037f8:	42a3      	cmp	r3, r4
 80037fa:	bf0c      	ite	eq
 80037fc:	f8c8 2000 	streq.w	r2, [r8]
 8003800:	605a      	strne	r2, [r3, #4]
 8003802:	e7eb      	b.n	80037dc <_malloc_r+0xa8>
 8003804:	4623      	mov	r3, r4
 8003806:	6864      	ldr	r4, [r4, #4]
 8003808:	e7ae      	b.n	8003768 <_malloc_r+0x34>
 800380a:	463c      	mov	r4, r7
 800380c:	687f      	ldr	r7, [r7, #4]
 800380e:	e7b6      	b.n	800377e <_malloc_r+0x4a>
 8003810:	461a      	mov	r2, r3
 8003812:	685b      	ldr	r3, [r3, #4]
 8003814:	42a3      	cmp	r3, r4
 8003816:	d1fb      	bne.n	8003810 <_malloc_r+0xdc>
 8003818:	2300      	movs	r3, #0
 800381a:	6053      	str	r3, [r2, #4]
 800381c:	e7de      	b.n	80037dc <_malloc_r+0xa8>
 800381e:	230c      	movs	r3, #12
 8003820:	4630      	mov	r0, r6
 8003822:	6033      	str	r3, [r6, #0]
 8003824:	f000 f80c 	bl	8003840 <__malloc_unlock>
 8003828:	e794      	b.n	8003754 <_malloc_r+0x20>
 800382a:	6005      	str	r5, [r0, #0]
 800382c:	e7d6      	b.n	80037dc <_malloc_r+0xa8>
 800382e:	bf00      	nop
 8003830:	20000570 	.word	0x20000570

08003834 <__malloc_lock>:
 8003834:	4801      	ldr	r0, [pc, #4]	@ (800383c <__malloc_lock+0x8>)
 8003836:	f7ff b8a8 	b.w	800298a <__retarget_lock_acquire_recursive>
 800383a:	bf00      	nop
 800383c:	20000568 	.word	0x20000568

08003840 <__malloc_unlock>:
 8003840:	4801      	ldr	r0, [pc, #4]	@ (8003848 <__malloc_unlock+0x8>)
 8003842:	f7ff b8a3 	b.w	800298c <__retarget_lock_release_recursive>
 8003846:	bf00      	nop
 8003848:	20000568 	.word	0x20000568

0800384c <_Balloc>:
 800384c:	b570      	push	{r4, r5, r6, lr}
 800384e:	69c6      	ldr	r6, [r0, #28]
 8003850:	4604      	mov	r4, r0
 8003852:	460d      	mov	r5, r1
 8003854:	b976      	cbnz	r6, 8003874 <_Balloc+0x28>
 8003856:	2010      	movs	r0, #16
 8003858:	f7ff ff42 	bl	80036e0 <malloc>
 800385c:	4602      	mov	r2, r0
 800385e:	61e0      	str	r0, [r4, #28]
 8003860:	b920      	cbnz	r0, 800386c <_Balloc+0x20>
 8003862:	216b      	movs	r1, #107	@ 0x6b
 8003864:	4b17      	ldr	r3, [pc, #92]	@ (80038c4 <_Balloc+0x78>)
 8003866:	4818      	ldr	r0, [pc, #96]	@ (80038c8 <_Balloc+0x7c>)
 8003868:	f000 fdfa 	bl	8004460 <__assert_func>
 800386c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003870:	6006      	str	r6, [r0, #0]
 8003872:	60c6      	str	r6, [r0, #12]
 8003874:	69e6      	ldr	r6, [r4, #28]
 8003876:	68f3      	ldr	r3, [r6, #12]
 8003878:	b183      	cbz	r3, 800389c <_Balloc+0x50>
 800387a:	69e3      	ldr	r3, [r4, #28]
 800387c:	68db      	ldr	r3, [r3, #12]
 800387e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003882:	b9b8      	cbnz	r0, 80038b4 <_Balloc+0x68>
 8003884:	2101      	movs	r1, #1
 8003886:	fa01 f605 	lsl.w	r6, r1, r5
 800388a:	1d72      	adds	r2, r6, #5
 800388c:	4620      	mov	r0, r4
 800388e:	0092      	lsls	r2, r2, #2
 8003890:	f000 fe04 	bl	800449c <_calloc_r>
 8003894:	b160      	cbz	r0, 80038b0 <_Balloc+0x64>
 8003896:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800389a:	e00e      	b.n	80038ba <_Balloc+0x6e>
 800389c:	2221      	movs	r2, #33	@ 0x21
 800389e:	2104      	movs	r1, #4
 80038a0:	4620      	mov	r0, r4
 80038a2:	f000 fdfb 	bl	800449c <_calloc_r>
 80038a6:	69e3      	ldr	r3, [r4, #28]
 80038a8:	60f0      	str	r0, [r6, #12]
 80038aa:	68db      	ldr	r3, [r3, #12]
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	d1e4      	bne.n	800387a <_Balloc+0x2e>
 80038b0:	2000      	movs	r0, #0
 80038b2:	bd70      	pop	{r4, r5, r6, pc}
 80038b4:	6802      	ldr	r2, [r0, #0]
 80038b6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80038ba:	2300      	movs	r3, #0
 80038bc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80038c0:	e7f7      	b.n	80038b2 <_Balloc+0x66>
 80038c2:	bf00      	nop
 80038c4:	080046bd 	.word	0x080046bd
 80038c8:	0800473d 	.word	0x0800473d

080038cc <_Bfree>:
 80038cc:	b570      	push	{r4, r5, r6, lr}
 80038ce:	69c6      	ldr	r6, [r0, #28]
 80038d0:	4605      	mov	r5, r0
 80038d2:	460c      	mov	r4, r1
 80038d4:	b976      	cbnz	r6, 80038f4 <_Bfree+0x28>
 80038d6:	2010      	movs	r0, #16
 80038d8:	f7ff ff02 	bl	80036e0 <malloc>
 80038dc:	4602      	mov	r2, r0
 80038de:	61e8      	str	r0, [r5, #28]
 80038e0:	b920      	cbnz	r0, 80038ec <_Bfree+0x20>
 80038e2:	218f      	movs	r1, #143	@ 0x8f
 80038e4:	4b08      	ldr	r3, [pc, #32]	@ (8003908 <_Bfree+0x3c>)
 80038e6:	4809      	ldr	r0, [pc, #36]	@ (800390c <_Bfree+0x40>)
 80038e8:	f000 fdba 	bl	8004460 <__assert_func>
 80038ec:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80038f0:	6006      	str	r6, [r0, #0]
 80038f2:	60c6      	str	r6, [r0, #12]
 80038f4:	b13c      	cbz	r4, 8003906 <_Bfree+0x3a>
 80038f6:	69eb      	ldr	r3, [r5, #28]
 80038f8:	6862      	ldr	r2, [r4, #4]
 80038fa:	68db      	ldr	r3, [r3, #12]
 80038fc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003900:	6021      	str	r1, [r4, #0]
 8003902:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003906:	bd70      	pop	{r4, r5, r6, pc}
 8003908:	080046bd 	.word	0x080046bd
 800390c:	0800473d 	.word	0x0800473d

08003910 <__multadd>:
 8003910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003914:	4607      	mov	r7, r0
 8003916:	460c      	mov	r4, r1
 8003918:	461e      	mov	r6, r3
 800391a:	2000      	movs	r0, #0
 800391c:	690d      	ldr	r5, [r1, #16]
 800391e:	f101 0c14 	add.w	ip, r1, #20
 8003922:	f8dc 3000 	ldr.w	r3, [ip]
 8003926:	3001      	adds	r0, #1
 8003928:	b299      	uxth	r1, r3
 800392a:	fb02 6101 	mla	r1, r2, r1, r6
 800392e:	0c1e      	lsrs	r6, r3, #16
 8003930:	0c0b      	lsrs	r3, r1, #16
 8003932:	fb02 3306 	mla	r3, r2, r6, r3
 8003936:	b289      	uxth	r1, r1
 8003938:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800393c:	4285      	cmp	r5, r0
 800393e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003942:	f84c 1b04 	str.w	r1, [ip], #4
 8003946:	dcec      	bgt.n	8003922 <__multadd+0x12>
 8003948:	b30e      	cbz	r6, 800398e <__multadd+0x7e>
 800394a:	68a3      	ldr	r3, [r4, #8]
 800394c:	42ab      	cmp	r3, r5
 800394e:	dc19      	bgt.n	8003984 <__multadd+0x74>
 8003950:	6861      	ldr	r1, [r4, #4]
 8003952:	4638      	mov	r0, r7
 8003954:	3101      	adds	r1, #1
 8003956:	f7ff ff79 	bl	800384c <_Balloc>
 800395a:	4680      	mov	r8, r0
 800395c:	b928      	cbnz	r0, 800396a <__multadd+0x5a>
 800395e:	4602      	mov	r2, r0
 8003960:	21ba      	movs	r1, #186	@ 0xba
 8003962:	4b0c      	ldr	r3, [pc, #48]	@ (8003994 <__multadd+0x84>)
 8003964:	480c      	ldr	r0, [pc, #48]	@ (8003998 <__multadd+0x88>)
 8003966:	f000 fd7b 	bl	8004460 <__assert_func>
 800396a:	6922      	ldr	r2, [r4, #16]
 800396c:	f104 010c 	add.w	r1, r4, #12
 8003970:	3202      	adds	r2, #2
 8003972:	0092      	lsls	r2, r2, #2
 8003974:	300c      	adds	r0, #12
 8003976:	f000 fd65 	bl	8004444 <memcpy>
 800397a:	4621      	mov	r1, r4
 800397c:	4638      	mov	r0, r7
 800397e:	f7ff ffa5 	bl	80038cc <_Bfree>
 8003982:	4644      	mov	r4, r8
 8003984:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003988:	3501      	adds	r5, #1
 800398a:	615e      	str	r6, [r3, #20]
 800398c:	6125      	str	r5, [r4, #16]
 800398e:	4620      	mov	r0, r4
 8003990:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003994:	0800472c 	.word	0x0800472c
 8003998:	0800473d 	.word	0x0800473d

0800399c <__hi0bits>:
 800399c:	4603      	mov	r3, r0
 800399e:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80039a2:	bf3a      	itte	cc
 80039a4:	0403      	lslcc	r3, r0, #16
 80039a6:	2010      	movcc	r0, #16
 80039a8:	2000      	movcs	r0, #0
 80039aa:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80039ae:	bf3c      	itt	cc
 80039b0:	021b      	lslcc	r3, r3, #8
 80039b2:	3008      	addcc	r0, #8
 80039b4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80039b8:	bf3c      	itt	cc
 80039ba:	011b      	lslcc	r3, r3, #4
 80039bc:	3004      	addcc	r0, #4
 80039be:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80039c2:	bf3c      	itt	cc
 80039c4:	009b      	lslcc	r3, r3, #2
 80039c6:	3002      	addcc	r0, #2
 80039c8:	2b00      	cmp	r3, #0
 80039ca:	db05      	blt.n	80039d8 <__hi0bits+0x3c>
 80039cc:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80039d0:	f100 0001 	add.w	r0, r0, #1
 80039d4:	bf08      	it	eq
 80039d6:	2020      	moveq	r0, #32
 80039d8:	4770      	bx	lr

080039da <__lo0bits>:
 80039da:	6803      	ldr	r3, [r0, #0]
 80039dc:	4602      	mov	r2, r0
 80039de:	f013 0007 	ands.w	r0, r3, #7
 80039e2:	d00b      	beq.n	80039fc <__lo0bits+0x22>
 80039e4:	07d9      	lsls	r1, r3, #31
 80039e6:	d421      	bmi.n	8003a2c <__lo0bits+0x52>
 80039e8:	0798      	lsls	r0, r3, #30
 80039ea:	bf49      	itett	mi
 80039ec:	085b      	lsrmi	r3, r3, #1
 80039ee:	089b      	lsrpl	r3, r3, #2
 80039f0:	2001      	movmi	r0, #1
 80039f2:	6013      	strmi	r3, [r2, #0]
 80039f4:	bf5c      	itt	pl
 80039f6:	2002      	movpl	r0, #2
 80039f8:	6013      	strpl	r3, [r2, #0]
 80039fa:	4770      	bx	lr
 80039fc:	b299      	uxth	r1, r3
 80039fe:	b909      	cbnz	r1, 8003a04 <__lo0bits+0x2a>
 8003a00:	2010      	movs	r0, #16
 8003a02:	0c1b      	lsrs	r3, r3, #16
 8003a04:	b2d9      	uxtb	r1, r3
 8003a06:	b909      	cbnz	r1, 8003a0c <__lo0bits+0x32>
 8003a08:	3008      	adds	r0, #8
 8003a0a:	0a1b      	lsrs	r3, r3, #8
 8003a0c:	0719      	lsls	r1, r3, #28
 8003a0e:	bf04      	itt	eq
 8003a10:	091b      	lsreq	r3, r3, #4
 8003a12:	3004      	addeq	r0, #4
 8003a14:	0799      	lsls	r1, r3, #30
 8003a16:	bf04      	itt	eq
 8003a18:	089b      	lsreq	r3, r3, #2
 8003a1a:	3002      	addeq	r0, #2
 8003a1c:	07d9      	lsls	r1, r3, #31
 8003a1e:	d403      	bmi.n	8003a28 <__lo0bits+0x4e>
 8003a20:	085b      	lsrs	r3, r3, #1
 8003a22:	f100 0001 	add.w	r0, r0, #1
 8003a26:	d003      	beq.n	8003a30 <__lo0bits+0x56>
 8003a28:	6013      	str	r3, [r2, #0]
 8003a2a:	4770      	bx	lr
 8003a2c:	2000      	movs	r0, #0
 8003a2e:	4770      	bx	lr
 8003a30:	2020      	movs	r0, #32
 8003a32:	4770      	bx	lr

08003a34 <__i2b>:
 8003a34:	b510      	push	{r4, lr}
 8003a36:	460c      	mov	r4, r1
 8003a38:	2101      	movs	r1, #1
 8003a3a:	f7ff ff07 	bl	800384c <_Balloc>
 8003a3e:	4602      	mov	r2, r0
 8003a40:	b928      	cbnz	r0, 8003a4e <__i2b+0x1a>
 8003a42:	f240 1145 	movw	r1, #325	@ 0x145
 8003a46:	4b04      	ldr	r3, [pc, #16]	@ (8003a58 <__i2b+0x24>)
 8003a48:	4804      	ldr	r0, [pc, #16]	@ (8003a5c <__i2b+0x28>)
 8003a4a:	f000 fd09 	bl	8004460 <__assert_func>
 8003a4e:	2301      	movs	r3, #1
 8003a50:	6144      	str	r4, [r0, #20]
 8003a52:	6103      	str	r3, [r0, #16]
 8003a54:	bd10      	pop	{r4, pc}
 8003a56:	bf00      	nop
 8003a58:	0800472c 	.word	0x0800472c
 8003a5c:	0800473d 	.word	0x0800473d

08003a60 <__multiply>:
 8003a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a64:	4614      	mov	r4, r2
 8003a66:	690a      	ldr	r2, [r1, #16]
 8003a68:	6923      	ldr	r3, [r4, #16]
 8003a6a:	460f      	mov	r7, r1
 8003a6c:	429a      	cmp	r2, r3
 8003a6e:	bfa2      	ittt	ge
 8003a70:	4623      	movge	r3, r4
 8003a72:	460c      	movge	r4, r1
 8003a74:	461f      	movge	r7, r3
 8003a76:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003a7a:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003a7e:	68a3      	ldr	r3, [r4, #8]
 8003a80:	6861      	ldr	r1, [r4, #4]
 8003a82:	eb0a 0609 	add.w	r6, sl, r9
 8003a86:	42b3      	cmp	r3, r6
 8003a88:	b085      	sub	sp, #20
 8003a8a:	bfb8      	it	lt
 8003a8c:	3101      	addlt	r1, #1
 8003a8e:	f7ff fedd 	bl	800384c <_Balloc>
 8003a92:	b930      	cbnz	r0, 8003aa2 <__multiply+0x42>
 8003a94:	4602      	mov	r2, r0
 8003a96:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003a9a:	4b43      	ldr	r3, [pc, #268]	@ (8003ba8 <__multiply+0x148>)
 8003a9c:	4843      	ldr	r0, [pc, #268]	@ (8003bac <__multiply+0x14c>)
 8003a9e:	f000 fcdf 	bl	8004460 <__assert_func>
 8003aa2:	f100 0514 	add.w	r5, r0, #20
 8003aa6:	462b      	mov	r3, r5
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003aae:	4543      	cmp	r3, r8
 8003ab0:	d321      	bcc.n	8003af6 <__multiply+0x96>
 8003ab2:	f107 0114 	add.w	r1, r7, #20
 8003ab6:	f104 0214 	add.w	r2, r4, #20
 8003aba:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003abe:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003ac2:	9302      	str	r3, [sp, #8]
 8003ac4:	1b13      	subs	r3, r2, r4
 8003ac6:	3b15      	subs	r3, #21
 8003ac8:	f023 0303 	bic.w	r3, r3, #3
 8003acc:	3304      	adds	r3, #4
 8003ace:	f104 0715 	add.w	r7, r4, #21
 8003ad2:	42ba      	cmp	r2, r7
 8003ad4:	bf38      	it	cc
 8003ad6:	2304      	movcc	r3, #4
 8003ad8:	9301      	str	r3, [sp, #4]
 8003ada:	9b02      	ldr	r3, [sp, #8]
 8003adc:	9103      	str	r1, [sp, #12]
 8003ade:	428b      	cmp	r3, r1
 8003ae0:	d80c      	bhi.n	8003afc <__multiply+0x9c>
 8003ae2:	2e00      	cmp	r6, #0
 8003ae4:	dd03      	ble.n	8003aee <__multiply+0x8e>
 8003ae6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d05a      	beq.n	8003ba4 <__multiply+0x144>
 8003aee:	6106      	str	r6, [r0, #16]
 8003af0:	b005      	add	sp, #20
 8003af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003af6:	f843 2b04 	str.w	r2, [r3], #4
 8003afa:	e7d8      	b.n	8003aae <__multiply+0x4e>
 8003afc:	f8b1 a000 	ldrh.w	sl, [r1]
 8003b00:	f1ba 0f00 	cmp.w	sl, #0
 8003b04:	d023      	beq.n	8003b4e <__multiply+0xee>
 8003b06:	46a9      	mov	r9, r5
 8003b08:	f04f 0c00 	mov.w	ip, #0
 8003b0c:	f104 0e14 	add.w	lr, r4, #20
 8003b10:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003b14:	f8d9 3000 	ldr.w	r3, [r9]
 8003b18:	fa1f fb87 	uxth.w	fp, r7
 8003b1c:	b29b      	uxth	r3, r3
 8003b1e:	fb0a 330b 	mla	r3, sl, fp, r3
 8003b22:	4463      	add	r3, ip
 8003b24:	f8d9 c000 	ldr.w	ip, [r9]
 8003b28:	0c3f      	lsrs	r7, r7, #16
 8003b2a:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003b2e:	fb0a c707 	mla	r7, sl, r7, ip
 8003b32:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003b36:	b29b      	uxth	r3, r3
 8003b38:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003b3c:	4572      	cmp	r2, lr
 8003b3e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003b42:	f849 3b04 	str.w	r3, [r9], #4
 8003b46:	d8e3      	bhi.n	8003b10 <__multiply+0xb0>
 8003b48:	9b01      	ldr	r3, [sp, #4]
 8003b4a:	f845 c003 	str.w	ip, [r5, r3]
 8003b4e:	9b03      	ldr	r3, [sp, #12]
 8003b50:	3104      	adds	r1, #4
 8003b52:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003b56:	f1b9 0f00 	cmp.w	r9, #0
 8003b5a:	d021      	beq.n	8003ba0 <__multiply+0x140>
 8003b5c:	46ae      	mov	lr, r5
 8003b5e:	f04f 0a00 	mov.w	sl, #0
 8003b62:	682b      	ldr	r3, [r5, #0]
 8003b64:	f104 0c14 	add.w	ip, r4, #20
 8003b68:	f8bc b000 	ldrh.w	fp, [ip]
 8003b6c:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003b70:	b29b      	uxth	r3, r3
 8003b72:	fb09 770b 	mla	r7, r9, fp, r7
 8003b76:	4457      	add	r7, sl
 8003b78:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003b7c:	f84e 3b04 	str.w	r3, [lr], #4
 8003b80:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003b84:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003b88:	f8be 3000 	ldrh.w	r3, [lr]
 8003b8c:	4562      	cmp	r2, ip
 8003b8e:	fb09 330a 	mla	r3, r9, sl, r3
 8003b92:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003b96:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003b9a:	d8e5      	bhi.n	8003b68 <__multiply+0x108>
 8003b9c:	9f01      	ldr	r7, [sp, #4]
 8003b9e:	51eb      	str	r3, [r5, r7]
 8003ba0:	3504      	adds	r5, #4
 8003ba2:	e79a      	b.n	8003ada <__multiply+0x7a>
 8003ba4:	3e01      	subs	r6, #1
 8003ba6:	e79c      	b.n	8003ae2 <__multiply+0x82>
 8003ba8:	0800472c 	.word	0x0800472c
 8003bac:	0800473d 	.word	0x0800473d

08003bb0 <__pow5mult>:
 8003bb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003bb4:	4615      	mov	r5, r2
 8003bb6:	f012 0203 	ands.w	r2, r2, #3
 8003bba:	4607      	mov	r7, r0
 8003bbc:	460e      	mov	r6, r1
 8003bbe:	d007      	beq.n	8003bd0 <__pow5mult+0x20>
 8003bc0:	4c25      	ldr	r4, [pc, #148]	@ (8003c58 <__pow5mult+0xa8>)
 8003bc2:	3a01      	subs	r2, #1
 8003bc4:	2300      	movs	r3, #0
 8003bc6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003bca:	f7ff fea1 	bl	8003910 <__multadd>
 8003bce:	4606      	mov	r6, r0
 8003bd0:	10ad      	asrs	r5, r5, #2
 8003bd2:	d03d      	beq.n	8003c50 <__pow5mult+0xa0>
 8003bd4:	69fc      	ldr	r4, [r7, #28]
 8003bd6:	b97c      	cbnz	r4, 8003bf8 <__pow5mult+0x48>
 8003bd8:	2010      	movs	r0, #16
 8003bda:	f7ff fd81 	bl	80036e0 <malloc>
 8003bde:	4602      	mov	r2, r0
 8003be0:	61f8      	str	r0, [r7, #28]
 8003be2:	b928      	cbnz	r0, 8003bf0 <__pow5mult+0x40>
 8003be4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003be8:	4b1c      	ldr	r3, [pc, #112]	@ (8003c5c <__pow5mult+0xac>)
 8003bea:	481d      	ldr	r0, [pc, #116]	@ (8003c60 <__pow5mult+0xb0>)
 8003bec:	f000 fc38 	bl	8004460 <__assert_func>
 8003bf0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003bf4:	6004      	str	r4, [r0, #0]
 8003bf6:	60c4      	str	r4, [r0, #12]
 8003bf8:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003bfc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003c00:	b94c      	cbnz	r4, 8003c16 <__pow5mult+0x66>
 8003c02:	f240 2171 	movw	r1, #625	@ 0x271
 8003c06:	4638      	mov	r0, r7
 8003c08:	f7ff ff14 	bl	8003a34 <__i2b>
 8003c0c:	2300      	movs	r3, #0
 8003c0e:	4604      	mov	r4, r0
 8003c10:	f8c8 0008 	str.w	r0, [r8, #8]
 8003c14:	6003      	str	r3, [r0, #0]
 8003c16:	f04f 0900 	mov.w	r9, #0
 8003c1a:	07eb      	lsls	r3, r5, #31
 8003c1c:	d50a      	bpl.n	8003c34 <__pow5mult+0x84>
 8003c1e:	4631      	mov	r1, r6
 8003c20:	4622      	mov	r2, r4
 8003c22:	4638      	mov	r0, r7
 8003c24:	f7ff ff1c 	bl	8003a60 <__multiply>
 8003c28:	4680      	mov	r8, r0
 8003c2a:	4631      	mov	r1, r6
 8003c2c:	4638      	mov	r0, r7
 8003c2e:	f7ff fe4d 	bl	80038cc <_Bfree>
 8003c32:	4646      	mov	r6, r8
 8003c34:	106d      	asrs	r5, r5, #1
 8003c36:	d00b      	beq.n	8003c50 <__pow5mult+0xa0>
 8003c38:	6820      	ldr	r0, [r4, #0]
 8003c3a:	b938      	cbnz	r0, 8003c4c <__pow5mult+0x9c>
 8003c3c:	4622      	mov	r2, r4
 8003c3e:	4621      	mov	r1, r4
 8003c40:	4638      	mov	r0, r7
 8003c42:	f7ff ff0d 	bl	8003a60 <__multiply>
 8003c46:	6020      	str	r0, [r4, #0]
 8003c48:	f8c0 9000 	str.w	r9, [r0]
 8003c4c:	4604      	mov	r4, r0
 8003c4e:	e7e4      	b.n	8003c1a <__pow5mult+0x6a>
 8003c50:	4630      	mov	r0, r6
 8003c52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c56:	bf00      	nop
 8003c58:	08004798 	.word	0x08004798
 8003c5c:	080046bd 	.word	0x080046bd
 8003c60:	0800473d 	.word	0x0800473d

08003c64 <__lshift>:
 8003c64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c68:	460c      	mov	r4, r1
 8003c6a:	4607      	mov	r7, r0
 8003c6c:	4691      	mov	r9, r2
 8003c6e:	6923      	ldr	r3, [r4, #16]
 8003c70:	6849      	ldr	r1, [r1, #4]
 8003c72:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003c76:	68a3      	ldr	r3, [r4, #8]
 8003c78:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003c7c:	f108 0601 	add.w	r6, r8, #1
 8003c80:	42b3      	cmp	r3, r6
 8003c82:	db0b      	blt.n	8003c9c <__lshift+0x38>
 8003c84:	4638      	mov	r0, r7
 8003c86:	f7ff fde1 	bl	800384c <_Balloc>
 8003c8a:	4605      	mov	r5, r0
 8003c8c:	b948      	cbnz	r0, 8003ca2 <__lshift+0x3e>
 8003c8e:	4602      	mov	r2, r0
 8003c90:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003c94:	4b27      	ldr	r3, [pc, #156]	@ (8003d34 <__lshift+0xd0>)
 8003c96:	4828      	ldr	r0, [pc, #160]	@ (8003d38 <__lshift+0xd4>)
 8003c98:	f000 fbe2 	bl	8004460 <__assert_func>
 8003c9c:	3101      	adds	r1, #1
 8003c9e:	005b      	lsls	r3, r3, #1
 8003ca0:	e7ee      	b.n	8003c80 <__lshift+0x1c>
 8003ca2:	2300      	movs	r3, #0
 8003ca4:	f100 0114 	add.w	r1, r0, #20
 8003ca8:	f100 0210 	add.w	r2, r0, #16
 8003cac:	4618      	mov	r0, r3
 8003cae:	4553      	cmp	r3, sl
 8003cb0:	db33      	blt.n	8003d1a <__lshift+0xb6>
 8003cb2:	6920      	ldr	r0, [r4, #16]
 8003cb4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003cb8:	f104 0314 	add.w	r3, r4, #20
 8003cbc:	f019 091f 	ands.w	r9, r9, #31
 8003cc0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003cc4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003cc8:	d02b      	beq.n	8003d22 <__lshift+0xbe>
 8003cca:	468a      	mov	sl, r1
 8003ccc:	2200      	movs	r2, #0
 8003cce:	f1c9 0e20 	rsb	lr, r9, #32
 8003cd2:	6818      	ldr	r0, [r3, #0]
 8003cd4:	fa00 f009 	lsl.w	r0, r0, r9
 8003cd8:	4310      	orrs	r0, r2
 8003cda:	f84a 0b04 	str.w	r0, [sl], #4
 8003cde:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ce2:	459c      	cmp	ip, r3
 8003ce4:	fa22 f20e 	lsr.w	r2, r2, lr
 8003ce8:	d8f3      	bhi.n	8003cd2 <__lshift+0x6e>
 8003cea:	ebac 0304 	sub.w	r3, ip, r4
 8003cee:	3b15      	subs	r3, #21
 8003cf0:	f023 0303 	bic.w	r3, r3, #3
 8003cf4:	3304      	adds	r3, #4
 8003cf6:	f104 0015 	add.w	r0, r4, #21
 8003cfa:	4584      	cmp	ip, r0
 8003cfc:	bf38      	it	cc
 8003cfe:	2304      	movcc	r3, #4
 8003d00:	50ca      	str	r2, [r1, r3]
 8003d02:	b10a      	cbz	r2, 8003d08 <__lshift+0xa4>
 8003d04:	f108 0602 	add.w	r6, r8, #2
 8003d08:	3e01      	subs	r6, #1
 8003d0a:	4638      	mov	r0, r7
 8003d0c:	4621      	mov	r1, r4
 8003d0e:	612e      	str	r6, [r5, #16]
 8003d10:	f7ff fddc 	bl	80038cc <_Bfree>
 8003d14:	4628      	mov	r0, r5
 8003d16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d1a:	f842 0f04 	str.w	r0, [r2, #4]!
 8003d1e:	3301      	adds	r3, #1
 8003d20:	e7c5      	b.n	8003cae <__lshift+0x4a>
 8003d22:	3904      	subs	r1, #4
 8003d24:	f853 2b04 	ldr.w	r2, [r3], #4
 8003d28:	459c      	cmp	ip, r3
 8003d2a:	f841 2f04 	str.w	r2, [r1, #4]!
 8003d2e:	d8f9      	bhi.n	8003d24 <__lshift+0xc0>
 8003d30:	e7ea      	b.n	8003d08 <__lshift+0xa4>
 8003d32:	bf00      	nop
 8003d34:	0800472c 	.word	0x0800472c
 8003d38:	0800473d 	.word	0x0800473d

08003d3c <__mcmp>:
 8003d3c:	4603      	mov	r3, r0
 8003d3e:	690a      	ldr	r2, [r1, #16]
 8003d40:	6900      	ldr	r0, [r0, #16]
 8003d42:	b530      	push	{r4, r5, lr}
 8003d44:	1a80      	subs	r0, r0, r2
 8003d46:	d10e      	bne.n	8003d66 <__mcmp+0x2a>
 8003d48:	3314      	adds	r3, #20
 8003d4a:	3114      	adds	r1, #20
 8003d4c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003d50:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003d54:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003d58:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003d5c:	4295      	cmp	r5, r2
 8003d5e:	d003      	beq.n	8003d68 <__mcmp+0x2c>
 8003d60:	d205      	bcs.n	8003d6e <__mcmp+0x32>
 8003d62:	f04f 30ff 	mov.w	r0, #4294967295
 8003d66:	bd30      	pop	{r4, r5, pc}
 8003d68:	42a3      	cmp	r3, r4
 8003d6a:	d3f3      	bcc.n	8003d54 <__mcmp+0x18>
 8003d6c:	e7fb      	b.n	8003d66 <__mcmp+0x2a>
 8003d6e:	2001      	movs	r0, #1
 8003d70:	e7f9      	b.n	8003d66 <__mcmp+0x2a>
	...

08003d74 <__mdiff>:
 8003d74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d78:	4689      	mov	r9, r1
 8003d7a:	4606      	mov	r6, r0
 8003d7c:	4611      	mov	r1, r2
 8003d7e:	4648      	mov	r0, r9
 8003d80:	4614      	mov	r4, r2
 8003d82:	f7ff ffdb 	bl	8003d3c <__mcmp>
 8003d86:	1e05      	subs	r5, r0, #0
 8003d88:	d112      	bne.n	8003db0 <__mdiff+0x3c>
 8003d8a:	4629      	mov	r1, r5
 8003d8c:	4630      	mov	r0, r6
 8003d8e:	f7ff fd5d 	bl	800384c <_Balloc>
 8003d92:	4602      	mov	r2, r0
 8003d94:	b928      	cbnz	r0, 8003da2 <__mdiff+0x2e>
 8003d96:	f240 2137 	movw	r1, #567	@ 0x237
 8003d9a:	4b3e      	ldr	r3, [pc, #248]	@ (8003e94 <__mdiff+0x120>)
 8003d9c:	483e      	ldr	r0, [pc, #248]	@ (8003e98 <__mdiff+0x124>)
 8003d9e:	f000 fb5f 	bl	8004460 <__assert_func>
 8003da2:	2301      	movs	r3, #1
 8003da4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003da8:	4610      	mov	r0, r2
 8003daa:	b003      	add	sp, #12
 8003dac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003db0:	bfbc      	itt	lt
 8003db2:	464b      	movlt	r3, r9
 8003db4:	46a1      	movlt	r9, r4
 8003db6:	4630      	mov	r0, r6
 8003db8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003dbc:	bfba      	itte	lt
 8003dbe:	461c      	movlt	r4, r3
 8003dc0:	2501      	movlt	r5, #1
 8003dc2:	2500      	movge	r5, #0
 8003dc4:	f7ff fd42 	bl	800384c <_Balloc>
 8003dc8:	4602      	mov	r2, r0
 8003dca:	b918      	cbnz	r0, 8003dd4 <__mdiff+0x60>
 8003dcc:	f240 2145 	movw	r1, #581	@ 0x245
 8003dd0:	4b30      	ldr	r3, [pc, #192]	@ (8003e94 <__mdiff+0x120>)
 8003dd2:	e7e3      	b.n	8003d9c <__mdiff+0x28>
 8003dd4:	f100 0b14 	add.w	fp, r0, #20
 8003dd8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003ddc:	f109 0310 	add.w	r3, r9, #16
 8003de0:	60c5      	str	r5, [r0, #12]
 8003de2:	f04f 0c00 	mov.w	ip, #0
 8003de6:	f109 0514 	add.w	r5, r9, #20
 8003dea:	46d9      	mov	r9, fp
 8003dec:	6926      	ldr	r6, [r4, #16]
 8003dee:	f104 0e14 	add.w	lr, r4, #20
 8003df2:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003df6:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003dfa:	9301      	str	r3, [sp, #4]
 8003dfc:	9b01      	ldr	r3, [sp, #4]
 8003dfe:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003e02:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003e06:	b281      	uxth	r1, r0
 8003e08:	9301      	str	r3, [sp, #4]
 8003e0a:	fa1f f38a 	uxth.w	r3, sl
 8003e0e:	1a5b      	subs	r3, r3, r1
 8003e10:	0c00      	lsrs	r0, r0, #16
 8003e12:	4463      	add	r3, ip
 8003e14:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003e18:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003e1c:	b29b      	uxth	r3, r3
 8003e1e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003e22:	4576      	cmp	r6, lr
 8003e24:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003e28:	f849 3b04 	str.w	r3, [r9], #4
 8003e2c:	d8e6      	bhi.n	8003dfc <__mdiff+0x88>
 8003e2e:	1b33      	subs	r3, r6, r4
 8003e30:	3b15      	subs	r3, #21
 8003e32:	f023 0303 	bic.w	r3, r3, #3
 8003e36:	3415      	adds	r4, #21
 8003e38:	3304      	adds	r3, #4
 8003e3a:	42a6      	cmp	r6, r4
 8003e3c:	bf38      	it	cc
 8003e3e:	2304      	movcc	r3, #4
 8003e40:	441d      	add	r5, r3
 8003e42:	445b      	add	r3, fp
 8003e44:	461e      	mov	r6, r3
 8003e46:	462c      	mov	r4, r5
 8003e48:	4544      	cmp	r4, r8
 8003e4a:	d30e      	bcc.n	8003e6a <__mdiff+0xf6>
 8003e4c:	f108 0103 	add.w	r1, r8, #3
 8003e50:	1b49      	subs	r1, r1, r5
 8003e52:	f021 0103 	bic.w	r1, r1, #3
 8003e56:	3d03      	subs	r5, #3
 8003e58:	45a8      	cmp	r8, r5
 8003e5a:	bf38      	it	cc
 8003e5c:	2100      	movcc	r1, #0
 8003e5e:	440b      	add	r3, r1
 8003e60:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003e64:	b199      	cbz	r1, 8003e8e <__mdiff+0x11a>
 8003e66:	6117      	str	r7, [r2, #16]
 8003e68:	e79e      	b.n	8003da8 <__mdiff+0x34>
 8003e6a:	46e6      	mov	lr, ip
 8003e6c:	f854 1b04 	ldr.w	r1, [r4], #4
 8003e70:	fa1f fc81 	uxth.w	ip, r1
 8003e74:	44f4      	add	ip, lr
 8003e76:	0c08      	lsrs	r0, r1, #16
 8003e78:	4471      	add	r1, lr
 8003e7a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003e7e:	b289      	uxth	r1, r1
 8003e80:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003e84:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003e88:	f846 1b04 	str.w	r1, [r6], #4
 8003e8c:	e7dc      	b.n	8003e48 <__mdiff+0xd4>
 8003e8e:	3f01      	subs	r7, #1
 8003e90:	e7e6      	b.n	8003e60 <__mdiff+0xec>
 8003e92:	bf00      	nop
 8003e94:	0800472c 	.word	0x0800472c
 8003e98:	0800473d 	.word	0x0800473d

08003e9c <__d2b>:
 8003e9c:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003ea0:	2101      	movs	r1, #1
 8003ea2:	4690      	mov	r8, r2
 8003ea4:	4699      	mov	r9, r3
 8003ea6:	9e08      	ldr	r6, [sp, #32]
 8003ea8:	f7ff fcd0 	bl	800384c <_Balloc>
 8003eac:	4604      	mov	r4, r0
 8003eae:	b930      	cbnz	r0, 8003ebe <__d2b+0x22>
 8003eb0:	4602      	mov	r2, r0
 8003eb2:	f240 310f 	movw	r1, #783	@ 0x30f
 8003eb6:	4b23      	ldr	r3, [pc, #140]	@ (8003f44 <__d2b+0xa8>)
 8003eb8:	4823      	ldr	r0, [pc, #140]	@ (8003f48 <__d2b+0xac>)
 8003eba:	f000 fad1 	bl	8004460 <__assert_func>
 8003ebe:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003ec2:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003ec6:	b10d      	cbz	r5, 8003ecc <__d2b+0x30>
 8003ec8:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003ecc:	9301      	str	r3, [sp, #4]
 8003ece:	f1b8 0300 	subs.w	r3, r8, #0
 8003ed2:	d024      	beq.n	8003f1e <__d2b+0x82>
 8003ed4:	4668      	mov	r0, sp
 8003ed6:	9300      	str	r3, [sp, #0]
 8003ed8:	f7ff fd7f 	bl	80039da <__lo0bits>
 8003edc:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003ee0:	b1d8      	cbz	r0, 8003f1a <__d2b+0x7e>
 8003ee2:	f1c0 0320 	rsb	r3, r0, #32
 8003ee6:	fa02 f303 	lsl.w	r3, r2, r3
 8003eea:	430b      	orrs	r3, r1
 8003eec:	40c2      	lsrs	r2, r0
 8003eee:	6163      	str	r3, [r4, #20]
 8003ef0:	9201      	str	r2, [sp, #4]
 8003ef2:	9b01      	ldr	r3, [sp, #4]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	bf0c      	ite	eq
 8003ef8:	2201      	moveq	r2, #1
 8003efa:	2202      	movne	r2, #2
 8003efc:	61a3      	str	r3, [r4, #24]
 8003efe:	6122      	str	r2, [r4, #16]
 8003f00:	b1ad      	cbz	r5, 8003f2e <__d2b+0x92>
 8003f02:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003f06:	4405      	add	r5, r0
 8003f08:	6035      	str	r5, [r6, #0]
 8003f0a:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003f0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f10:	6018      	str	r0, [r3, #0]
 8003f12:	4620      	mov	r0, r4
 8003f14:	b002      	add	sp, #8
 8003f16:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8003f1a:	6161      	str	r1, [r4, #20]
 8003f1c:	e7e9      	b.n	8003ef2 <__d2b+0x56>
 8003f1e:	a801      	add	r0, sp, #4
 8003f20:	f7ff fd5b 	bl	80039da <__lo0bits>
 8003f24:	9b01      	ldr	r3, [sp, #4]
 8003f26:	2201      	movs	r2, #1
 8003f28:	6163      	str	r3, [r4, #20]
 8003f2a:	3020      	adds	r0, #32
 8003f2c:	e7e7      	b.n	8003efe <__d2b+0x62>
 8003f2e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003f32:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003f36:	6030      	str	r0, [r6, #0]
 8003f38:	6918      	ldr	r0, [r3, #16]
 8003f3a:	f7ff fd2f 	bl	800399c <__hi0bits>
 8003f3e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003f42:	e7e4      	b.n	8003f0e <__d2b+0x72>
 8003f44:	0800472c 	.word	0x0800472c
 8003f48:	0800473d 	.word	0x0800473d

08003f4c <__sfputc_r>:
 8003f4c:	6893      	ldr	r3, [r2, #8]
 8003f4e:	b410      	push	{r4}
 8003f50:	3b01      	subs	r3, #1
 8003f52:	2b00      	cmp	r3, #0
 8003f54:	6093      	str	r3, [r2, #8]
 8003f56:	da07      	bge.n	8003f68 <__sfputc_r+0x1c>
 8003f58:	6994      	ldr	r4, [r2, #24]
 8003f5a:	42a3      	cmp	r3, r4
 8003f5c:	db01      	blt.n	8003f62 <__sfputc_r+0x16>
 8003f5e:	290a      	cmp	r1, #10
 8003f60:	d102      	bne.n	8003f68 <__sfputc_r+0x1c>
 8003f62:	bc10      	pop	{r4}
 8003f64:	f7fe bbff 	b.w	8002766 <__swbuf_r>
 8003f68:	6813      	ldr	r3, [r2, #0]
 8003f6a:	1c58      	adds	r0, r3, #1
 8003f6c:	6010      	str	r0, [r2, #0]
 8003f6e:	7019      	strb	r1, [r3, #0]
 8003f70:	4608      	mov	r0, r1
 8003f72:	bc10      	pop	{r4}
 8003f74:	4770      	bx	lr

08003f76 <__sfputs_r>:
 8003f76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f78:	4606      	mov	r6, r0
 8003f7a:	460f      	mov	r7, r1
 8003f7c:	4614      	mov	r4, r2
 8003f7e:	18d5      	adds	r5, r2, r3
 8003f80:	42ac      	cmp	r4, r5
 8003f82:	d101      	bne.n	8003f88 <__sfputs_r+0x12>
 8003f84:	2000      	movs	r0, #0
 8003f86:	e007      	b.n	8003f98 <__sfputs_r+0x22>
 8003f88:	463a      	mov	r2, r7
 8003f8a:	4630      	mov	r0, r6
 8003f8c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f90:	f7ff ffdc 	bl	8003f4c <__sfputc_r>
 8003f94:	1c43      	adds	r3, r0, #1
 8003f96:	d1f3      	bne.n	8003f80 <__sfputs_r+0xa>
 8003f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003f9c <_vfiprintf_r>:
 8003f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fa0:	460d      	mov	r5, r1
 8003fa2:	4614      	mov	r4, r2
 8003fa4:	4698      	mov	r8, r3
 8003fa6:	4606      	mov	r6, r0
 8003fa8:	b09d      	sub	sp, #116	@ 0x74
 8003faa:	b118      	cbz	r0, 8003fb4 <_vfiprintf_r+0x18>
 8003fac:	6a03      	ldr	r3, [r0, #32]
 8003fae:	b90b      	cbnz	r3, 8003fb4 <_vfiprintf_r+0x18>
 8003fb0:	f7fe faf0 	bl	8002594 <__sinit>
 8003fb4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003fb6:	07d9      	lsls	r1, r3, #31
 8003fb8:	d405      	bmi.n	8003fc6 <_vfiprintf_r+0x2a>
 8003fba:	89ab      	ldrh	r3, [r5, #12]
 8003fbc:	059a      	lsls	r2, r3, #22
 8003fbe:	d402      	bmi.n	8003fc6 <_vfiprintf_r+0x2a>
 8003fc0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003fc2:	f7fe fce2 	bl	800298a <__retarget_lock_acquire_recursive>
 8003fc6:	89ab      	ldrh	r3, [r5, #12]
 8003fc8:	071b      	lsls	r3, r3, #28
 8003fca:	d501      	bpl.n	8003fd0 <_vfiprintf_r+0x34>
 8003fcc:	692b      	ldr	r3, [r5, #16]
 8003fce:	b99b      	cbnz	r3, 8003ff8 <_vfiprintf_r+0x5c>
 8003fd0:	4629      	mov	r1, r5
 8003fd2:	4630      	mov	r0, r6
 8003fd4:	f7fe fc06 	bl	80027e4 <__swsetup_r>
 8003fd8:	b170      	cbz	r0, 8003ff8 <_vfiprintf_r+0x5c>
 8003fda:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003fdc:	07dc      	lsls	r4, r3, #31
 8003fde:	d504      	bpl.n	8003fea <_vfiprintf_r+0x4e>
 8003fe0:	f04f 30ff 	mov.w	r0, #4294967295
 8003fe4:	b01d      	add	sp, #116	@ 0x74
 8003fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fea:	89ab      	ldrh	r3, [r5, #12]
 8003fec:	0598      	lsls	r0, r3, #22
 8003fee:	d4f7      	bmi.n	8003fe0 <_vfiprintf_r+0x44>
 8003ff0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003ff2:	f7fe fccb 	bl	800298c <__retarget_lock_release_recursive>
 8003ff6:	e7f3      	b.n	8003fe0 <_vfiprintf_r+0x44>
 8003ff8:	2300      	movs	r3, #0
 8003ffa:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ffc:	2320      	movs	r3, #32
 8003ffe:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004002:	2330      	movs	r3, #48	@ 0x30
 8004004:	f04f 0901 	mov.w	r9, #1
 8004008:	f8cd 800c 	str.w	r8, [sp, #12]
 800400c:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 80041b8 <_vfiprintf_r+0x21c>
 8004010:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004014:	4623      	mov	r3, r4
 8004016:	469a      	mov	sl, r3
 8004018:	f813 2b01 	ldrb.w	r2, [r3], #1
 800401c:	b10a      	cbz	r2, 8004022 <_vfiprintf_r+0x86>
 800401e:	2a25      	cmp	r2, #37	@ 0x25
 8004020:	d1f9      	bne.n	8004016 <_vfiprintf_r+0x7a>
 8004022:	ebba 0b04 	subs.w	fp, sl, r4
 8004026:	d00b      	beq.n	8004040 <_vfiprintf_r+0xa4>
 8004028:	465b      	mov	r3, fp
 800402a:	4622      	mov	r2, r4
 800402c:	4629      	mov	r1, r5
 800402e:	4630      	mov	r0, r6
 8004030:	f7ff ffa1 	bl	8003f76 <__sfputs_r>
 8004034:	3001      	adds	r0, #1
 8004036:	f000 80a7 	beq.w	8004188 <_vfiprintf_r+0x1ec>
 800403a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800403c:	445a      	add	r2, fp
 800403e:	9209      	str	r2, [sp, #36]	@ 0x24
 8004040:	f89a 3000 	ldrb.w	r3, [sl]
 8004044:	2b00      	cmp	r3, #0
 8004046:	f000 809f 	beq.w	8004188 <_vfiprintf_r+0x1ec>
 800404a:	2300      	movs	r3, #0
 800404c:	f04f 32ff 	mov.w	r2, #4294967295
 8004050:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004054:	f10a 0a01 	add.w	sl, sl, #1
 8004058:	9304      	str	r3, [sp, #16]
 800405a:	9307      	str	r3, [sp, #28]
 800405c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004060:	931a      	str	r3, [sp, #104]	@ 0x68
 8004062:	4654      	mov	r4, sl
 8004064:	2205      	movs	r2, #5
 8004066:	f814 1b01 	ldrb.w	r1, [r4], #1
 800406a:	4853      	ldr	r0, [pc, #332]	@ (80041b8 <_vfiprintf_r+0x21c>)
 800406c:	f7fe fc8f 	bl	800298e <memchr>
 8004070:	9a04      	ldr	r2, [sp, #16]
 8004072:	b9d8      	cbnz	r0, 80040ac <_vfiprintf_r+0x110>
 8004074:	06d1      	lsls	r1, r2, #27
 8004076:	bf44      	itt	mi
 8004078:	2320      	movmi	r3, #32
 800407a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800407e:	0713      	lsls	r3, r2, #28
 8004080:	bf44      	itt	mi
 8004082:	232b      	movmi	r3, #43	@ 0x2b
 8004084:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004088:	f89a 3000 	ldrb.w	r3, [sl]
 800408c:	2b2a      	cmp	r3, #42	@ 0x2a
 800408e:	d015      	beq.n	80040bc <_vfiprintf_r+0x120>
 8004090:	4654      	mov	r4, sl
 8004092:	2000      	movs	r0, #0
 8004094:	f04f 0c0a 	mov.w	ip, #10
 8004098:	9a07      	ldr	r2, [sp, #28]
 800409a:	4621      	mov	r1, r4
 800409c:	f811 3b01 	ldrb.w	r3, [r1], #1
 80040a0:	3b30      	subs	r3, #48	@ 0x30
 80040a2:	2b09      	cmp	r3, #9
 80040a4:	d94b      	bls.n	800413e <_vfiprintf_r+0x1a2>
 80040a6:	b1b0      	cbz	r0, 80040d6 <_vfiprintf_r+0x13a>
 80040a8:	9207      	str	r2, [sp, #28]
 80040aa:	e014      	b.n	80040d6 <_vfiprintf_r+0x13a>
 80040ac:	eba0 0308 	sub.w	r3, r0, r8
 80040b0:	fa09 f303 	lsl.w	r3, r9, r3
 80040b4:	4313      	orrs	r3, r2
 80040b6:	46a2      	mov	sl, r4
 80040b8:	9304      	str	r3, [sp, #16]
 80040ba:	e7d2      	b.n	8004062 <_vfiprintf_r+0xc6>
 80040bc:	9b03      	ldr	r3, [sp, #12]
 80040be:	1d19      	adds	r1, r3, #4
 80040c0:	681b      	ldr	r3, [r3, #0]
 80040c2:	9103      	str	r1, [sp, #12]
 80040c4:	2b00      	cmp	r3, #0
 80040c6:	bfbb      	ittet	lt
 80040c8:	425b      	neglt	r3, r3
 80040ca:	f042 0202 	orrlt.w	r2, r2, #2
 80040ce:	9307      	strge	r3, [sp, #28]
 80040d0:	9307      	strlt	r3, [sp, #28]
 80040d2:	bfb8      	it	lt
 80040d4:	9204      	strlt	r2, [sp, #16]
 80040d6:	7823      	ldrb	r3, [r4, #0]
 80040d8:	2b2e      	cmp	r3, #46	@ 0x2e
 80040da:	d10a      	bne.n	80040f2 <_vfiprintf_r+0x156>
 80040dc:	7863      	ldrb	r3, [r4, #1]
 80040de:	2b2a      	cmp	r3, #42	@ 0x2a
 80040e0:	d132      	bne.n	8004148 <_vfiprintf_r+0x1ac>
 80040e2:	9b03      	ldr	r3, [sp, #12]
 80040e4:	3402      	adds	r4, #2
 80040e6:	1d1a      	adds	r2, r3, #4
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	9203      	str	r2, [sp, #12]
 80040ec:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80040f0:	9305      	str	r3, [sp, #20]
 80040f2:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80041bc <_vfiprintf_r+0x220>
 80040f6:	2203      	movs	r2, #3
 80040f8:	4650      	mov	r0, sl
 80040fa:	7821      	ldrb	r1, [r4, #0]
 80040fc:	f7fe fc47 	bl	800298e <memchr>
 8004100:	b138      	cbz	r0, 8004112 <_vfiprintf_r+0x176>
 8004102:	2240      	movs	r2, #64	@ 0x40
 8004104:	9b04      	ldr	r3, [sp, #16]
 8004106:	eba0 000a 	sub.w	r0, r0, sl
 800410a:	4082      	lsls	r2, r0
 800410c:	4313      	orrs	r3, r2
 800410e:	3401      	adds	r4, #1
 8004110:	9304      	str	r3, [sp, #16]
 8004112:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004116:	2206      	movs	r2, #6
 8004118:	4829      	ldr	r0, [pc, #164]	@ (80041c0 <_vfiprintf_r+0x224>)
 800411a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800411e:	f7fe fc36 	bl	800298e <memchr>
 8004122:	2800      	cmp	r0, #0
 8004124:	d03f      	beq.n	80041a6 <_vfiprintf_r+0x20a>
 8004126:	4b27      	ldr	r3, [pc, #156]	@ (80041c4 <_vfiprintf_r+0x228>)
 8004128:	bb1b      	cbnz	r3, 8004172 <_vfiprintf_r+0x1d6>
 800412a:	9b03      	ldr	r3, [sp, #12]
 800412c:	3307      	adds	r3, #7
 800412e:	f023 0307 	bic.w	r3, r3, #7
 8004132:	3308      	adds	r3, #8
 8004134:	9303      	str	r3, [sp, #12]
 8004136:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004138:	443b      	add	r3, r7
 800413a:	9309      	str	r3, [sp, #36]	@ 0x24
 800413c:	e76a      	b.n	8004014 <_vfiprintf_r+0x78>
 800413e:	460c      	mov	r4, r1
 8004140:	2001      	movs	r0, #1
 8004142:	fb0c 3202 	mla	r2, ip, r2, r3
 8004146:	e7a8      	b.n	800409a <_vfiprintf_r+0xfe>
 8004148:	2300      	movs	r3, #0
 800414a:	f04f 0c0a 	mov.w	ip, #10
 800414e:	4619      	mov	r1, r3
 8004150:	3401      	adds	r4, #1
 8004152:	9305      	str	r3, [sp, #20]
 8004154:	4620      	mov	r0, r4
 8004156:	f810 2b01 	ldrb.w	r2, [r0], #1
 800415a:	3a30      	subs	r2, #48	@ 0x30
 800415c:	2a09      	cmp	r2, #9
 800415e:	d903      	bls.n	8004168 <_vfiprintf_r+0x1cc>
 8004160:	2b00      	cmp	r3, #0
 8004162:	d0c6      	beq.n	80040f2 <_vfiprintf_r+0x156>
 8004164:	9105      	str	r1, [sp, #20]
 8004166:	e7c4      	b.n	80040f2 <_vfiprintf_r+0x156>
 8004168:	4604      	mov	r4, r0
 800416a:	2301      	movs	r3, #1
 800416c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004170:	e7f0      	b.n	8004154 <_vfiprintf_r+0x1b8>
 8004172:	ab03      	add	r3, sp, #12
 8004174:	9300      	str	r3, [sp, #0]
 8004176:	462a      	mov	r2, r5
 8004178:	4630      	mov	r0, r6
 800417a:	4b13      	ldr	r3, [pc, #76]	@ (80041c8 <_vfiprintf_r+0x22c>)
 800417c:	a904      	add	r1, sp, #16
 800417e:	f7fd fdbf 	bl	8001d00 <_printf_float>
 8004182:	4607      	mov	r7, r0
 8004184:	1c78      	adds	r0, r7, #1
 8004186:	d1d6      	bne.n	8004136 <_vfiprintf_r+0x19a>
 8004188:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800418a:	07d9      	lsls	r1, r3, #31
 800418c:	d405      	bmi.n	800419a <_vfiprintf_r+0x1fe>
 800418e:	89ab      	ldrh	r3, [r5, #12]
 8004190:	059a      	lsls	r2, r3, #22
 8004192:	d402      	bmi.n	800419a <_vfiprintf_r+0x1fe>
 8004194:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004196:	f7fe fbf9 	bl	800298c <__retarget_lock_release_recursive>
 800419a:	89ab      	ldrh	r3, [r5, #12]
 800419c:	065b      	lsls	r3, r3, #25
 800419e:	f53f af1f 	bmi.w	8003fe0 <_vfiprintf_r+0x44>
 80041a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041a4:	e71e      	b.n	8003fe4 <_vfiprintf_r+0x48>
 80041a6:	ab03      	add	r3, sp, #12
 80041a8:	9300      	str	r3, [sp, #0]
 80041aa:	462a      	mov	r2, r5
 80041ac:	4630      	mov	r0, r6
 80041ae:	4b06      	ldr	r3, [pc, #24]	@ (80041c8 <_vfiprintf_r+0x22c>)
 80041b0:	a904      	add	r1, sp, #16
 80041b2:	f7fe f843 	bl	800223c <_printf_i>
 80041b6:	e7e4      	b.n	8004182 <_vfiprintf_r+0x1e6>
 80041b8:	08004898 	.word	0x08004898
 80041bc:	0800489e 	.word	0x0800489e
 80041c0:	080048a2 	.word	0x080048a2
 80041c4:	08001d01 	.word	0x08001d01
 80041c8:	08003f77 	.word	0x08003f77

080041cc <__sflush_r>:
 80041cc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80041d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041d2:	0716      	lsls	r6, r2, #28
 80041d4:	4605      	mov	r5, r0
 80041d6:	460c      	mov	r4, r1
 80041d8:	d454      	bmi.n	8004284 <__sflush_r+0xb8>
 80041da:	684b      	ldr	r3, [r1, #4]
 80041dc:	2b00      	cmp	r3, #0
 80041de:	dc02      	bgt.n	80041e6 <__sflush_r+0x1a>
 80041e0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80041e2:	2b00      	cmp	r3, #0
 80041e4:	dd48      	ble.n	8004278 <__sflush_r+0xac>
 80041e6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80041e8:	2e00      	cmp	r6, #0
 80041ea:	d045      	beq.n	8004278 <__sflush_r+0xac>
 80041ec:	2300      	movs	r3, #0
 80041ee:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80041f2:	682f      	ldr	r7, [r5, #0]
 80041f4:	6a21      	ldr	r1, [r4, #32]
 80041f6:	602b      	str	r3, [r5, #0]
 80041f8:	d030      	beq.n	800425c <__sflush_r+0x90>
 80041fa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80041fc:	89a3      	ldrh	r3, [r4, #12]
 80041fe:	0759      	lsls	r1, r3, #29
 8004200:	d505      	bpl.n	800420e <__sflush_r+0x42>
 8004202:	6863      	ldr	r3, [r4, #4]
 8004204:	1ad2      	subs	r2, r2, r3
 8004206:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004208:	b10b      	cbz	r3, 800420e <__sflush_r+0x42>
 800420a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800420c:	1ad2      	subs	r2, r2, r3
 800420e:	2300      	movs	r3, #0
 8004210:	4628      	mov	r0, r5
 8004212:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004214:	6a21      	ldr	r1, [r4, #32]
 8004216:	47b0      	blx	r6
 8004218:	1c43      	adds	r3, r0, #1
 800421a:	89a3      	ldrh	r3, [r4, #12]
 800421c:	d106      	bne.n	800422c <__sflush_r+0x60>
 800421e:	6829      	ldr	r1, [r5, #0]
 8004220:	291d      	cmp	r1, #29
 8004222:	d82b      	bhi.n	800427c <__sflush_r+0xb0>
 8004224:	4a28      	ldr	r2, [pc, #160]	@ (80042c8 <__sflush_r+0xfc>)
 8004226:	410a      	asrs	r2, r1
 8004228:	07d6      	lsls	r6, r2, #31
 800422a:	d427      	bmi.n	800427c <__sflush_r+0xb0>
 800422c:	2200      	movs	r2, #0
 800422e:	6062      	str	r2, [r4, #4]
 8004230:	6922      	ldr	r2, [r4, #16]
 8004232:	04d9      	lsls	r1, r3, #19
 8004234:	6022      	str	r2, [r4, #0]
 8004236:	d504      	bpl.n	8004242 <__sflush_r+0x76>
 8004238:	1c42      	adds	r2, r0, #1
 800423a:	d101      	bne.n	8004240 <__sflush_r+0x74>
 800423c:	682b      	ldr	r3, [r5, #0]
 800423e:	b903      	cbnz	r3, 8004242 <__sflush_r+0x76>
 8004240:	6560      	str	r0, [r4, #84]	@ 0x54
 8004242:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004244:	602f      	str	r7, [r5, #0]
 8004246:	b1b9      	cbz	r1, 8004278 <__sflush_r+0xac>
 8004248:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800424c:	4299      	cmp	r1, r3
 800424e:	d002      	beq.n	8004256 <__sflush_r+0x8a>
 8004250:	4628      	mov	r0, r5
 8004252:	f7ff f9fd 	bl	8003650 <_free_r>
 8004256:	2300      	movs	r3, #0
 8004258:	6363      	str	r3, [r4, #52]	@ 0x34
 800425a:	e00d      	b.n	8004278 <__sflush_r+0xac>
 800425c:	2301      	movs	r3, #1
 800425e:	4628      	mov	r0, r5
 8004260:	47b0      	blx	r6
 8004262:	4602      	mov	r2, r0
 8004264:	1c50      	adds	r0, r2, #1
 8004266:	d1c9      	bne.n	80041fc <__sflush_r+0x30>
 8004268:	682b      	ldr	r3, [r5, #0]
 800426a:	2b00      	cmp	r3, #0
 800426c:	d0c6      	beq.n	80041fc <__sflush_r+0x30>
 800426e:	2b1d      	cmp	r3, #29
 8004270:	d001      	beq.n	8004276 <__sflush_r+0xaa>
 8004272:	2b16      	cmp	r3, #22
 8004274:	d11d      	bne.n	80042b2 <__sflush_r+0xe6>
 8004276:	602f      	str	r7, [r5, #0]
 8004278:	2000      	movs	r0, #0
 800427a:	e021      	b.n	80042c0 <__sflush_r+0xf4>
 800427c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004280:	b21b      	sxth	r3, r3
 8004282:	e01a      	b.n	80042ba <__sflush_r+0xee>
 8004284:	690f      	ldr	r7, [r1, #16]
 8004286:	2f00      	cmp	r7, #0
 8004288:	d0f6      	beq.n	8004278 <__sflush_r+0xac>
 800428a:	0793      	lsls	r3, r2, #30
 800428c:	bf18      	it	ne
 800428e:	2300      	movne	r3, #0
 8004290:	680e      	ldr	r6, [r1, #0]
 8004292:	bf08      	it	eq
 8004294:	694b      	ldreq	r3, [r1, #20]
 8004296:	1bf6      	subs	r6, r6, r7
 8004298:	600f      	str	r7, [r1, #0]
 800429a:	608b      	str	r3, [r1, #8]
 800429c:	2e00      	cmp	r6, #0
 800429e:	ddeb      	ble.n	8004278 <__sflush_r+0xac>
 80042a0:	4633      	mov	r3, r6
 80042a2:	463a      	mov	r2, r7
 80042a4:	4628      	mov	r0, r5
 80042a6:	6a21      	ldr	r1, [r4, #32]
 80042a8:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80042ac:	47e0      	blx	ip
 80042ae:	2800      	cmp	r0, #0
 80042b0:	dc07      	bgt.n	80042c2 <__sflush_r+0xf6>
 80042b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042b6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80042ba:	f04f 30ff 	mov.w	r0, #4294967295
 80042be:	81a3      	strh	r3, [r4, #12]
 80042c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80042c2:	4407      	add	r7, r0
 80042c4:	1a36      	subs	r6, r6, r0
 80042c6:	e7e9      	b.n	800429c <__sflush_r+0xd0>
 80042c8:	dfbffffe 	.word	0xdfbffffe

080042cc <_fflush_r>:
 80042cc:	b538      	push	{r3, r4, r5, lr}
 80042ce:	690b      	ldr	r3, [r1, #16]
 80042d0:	4605      	mov	r5, r0
 80042d2:	460c      	mov	r4, r1
 80042d4:	b913      	cbnz	r3, 80042dc <_fflush_r+0x10>
 80042d6:	2500      	movs	r5, #0
 80042d8:	4628      	mov	r0, r5
 80042da:	bd38      	pop	{r3, r4, r5, pc}
 80042dc:	b118      	cbz	r0, 80042e6 <_fflush_r+0x1a>
 80042de:	6a03      	ldr	r3, [r0, #32]
 80042e0:	b90b      	cbnz	r3, 80042e6 <_fflush_r+0x1a>
 80042e2:	f7fe f957 	bl	8002594 <__sinit>
 80042e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d0f3      	beq.n	80042d6 <_fflush_r+0xa>
 80042ee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80042f0:	07d0      	lsls	r0, r2, #31
 80042f2:	d404      	bmi.n	80042fe <_fflush_r+0x32>
 80042f4:	0599      	lsls	r1, r3, #22
 80042f6:	d402      	bmi.n	80042fe <_fflush_r+0x32>
 80042f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80042fa:	f7fe fb46 	bl	800298a <__retarget_lock_acquire_recursive>
 80042fe:	4628      	mov	r0, r5
 8004300:	4621      	mov	r1, r4
 8004302:	f7ff ff63 	bl	80041cc <__sflush_r>
 8004306:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004308:	4605      	mov	r5, r0
 800430a:	07da      	lsls	r2, r3, #31
 800430c:	d4e4      	bmi.n	80042d8 <_fflush_r+0xc>
 800430e:	89a3      	ldrh	r3, [r4, #12]
 8004310:	059b      	lsls	r3, r3, #22
 8004312:	d4e1      	bmi.n	80042d8 <_fflush_r+0xc>
 8004314:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004316:	f7fe fb39 	bl	800298c <__retarget_lock_release_recursive>
 800431a:	e7dd      	b.n	80042d8 <_fflush_r+0xc>

0800431c <__swhatbuf_r>:
 800431c:	b570      	push	{r4, r5, r6, lr}
 800431e:	460c      	mov	r4, r1
 8004320:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004324:	4615      	mov	r5, r2
 8004326:	2900      	cmp	r1, #0
 8004328:	461e      	mov	r6, r3
 800432a:	b096      	sub	sp, #88	@ 0x58
 800432c:	da0c      	bge.n	8004348 <__swhatbuf_r+0x2c>
 800432e:	89a3      	ldrh	r3, [r4, #12]
 8004330:	2100      	movs	r1, #0
 8004332:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004336:	bf14      	ite	ne
 8004338:	2340      	movne	r3, #64	@ 0x40
 800433a:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800433e:	2000      	movs	r0, #0
 8004340:	6031      	str	r1, [r6, #0]
 8004342:	602b      	str	r3, [r5, #0]
 8004344:	b016      	add	sp, #88	@ 0x58
 8004346:	bd70      	pop	{r4, r5, r6, pc}
 8004348:	466a      	mov	r2, sp
 800434a:	f000 f849 	bl	80043e0 <_fstat_r>
 800434e:	2800      	cmp	r0, #0
 8004350:	dbed      	blt.n	800432e <__swhatbuf_r+0x12>
 8004352:	9901      	ldr	r1, [sp, #4]
 8004354:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8004358:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800435c:	4259      	negs	r1, r3
 800435e:	4159      	adcs	r1, r3
 8004360:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004364:	e7eb      	b.n	800433e <__swhatbuf_r+0x22>

08004366 <__smakebuf_r>:
 8004366:	898b      	ldrh	r3, [r1, #12]
 8004368:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800436a:	079d      	lsls	r5, r3, #30
 800436c:	4606      	mov	r6, r0
 800436e:	460c      	mov	r4, r1
 8004370:	d507      	bpl.n	8004382 <__smakebuf_r+0x1c>
 8004372:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004376:	6023      	str	r3, [r4, #0]
 8004378:	6123      	str	r3, [r4, #16]
 800437a:	2301      	movs	r3, #1
 800437c:	6163      	str	r3, [r4, #20]
 800437e:	b003      	add	sp, #12
 8004380:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004382:	466a      	mov	r2, sp
 8004384:	ab01      	add	r3, sp, #4
 8004386:	f7ff ffc9 	bl	800431c <__swhatbuf_r>
 800438a:	9f00      	ldr	r7, [sp, #0]
 800438c:	4605      	mov	r5, r0
 800438e:	4639      	mov	r1, r7
 8004390:	4630      	mov	r0, r6
 8004392:	f7ff f9cf 	bl	8003734 <_malloc_r>
 8004396:	b948      	cbnz	r0, 80043ac <__smakebuf_r+0x46>
 8004398:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800439c:	059a      	lsls	r2, r3, #22
 800439e:	d4ee      	bmi.n	800437e <__smakebuf_r+0x18>
 80043a0:	f023 0303 	bic.w	r3, r3, #3
 80043a4:	f043 0302 	orr.w	r3, r3, #2
 80043a8:	81a3      	strh	r3, [r4, #12]
 80043aa:	e7e2      	b.n	8004372 <__smakebuf_r+0xc>
 80043ac:	89a3      	ldrh	r3, [r4, #12]
 80043ae:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80043b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80043b6:	81a3      	strh	r3, [r4, #12]
 80043b8:	9b01      	ldr	r3, [sp, #4]
 80043ba:	6020      	str	r0, [r4, #0]
 80043bc:	b15b      	cbz	r3, 80043d6 <__smakebuf_r+0x70>
 80043be:	4630      	mov	r0, r6
 80043c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80043c4:	f000 f81e 	bl	8004404 <_isatty_r>
 80043c8:	b128      	cbz	r0, 80043d6 <__smakebuf_r+0x70>
 80043ca:	89a3      	ldrh	r3, [r4, #12]
 80043cc:	f023 0303 	bic.w	r3, r3, #3
 80043d0:	f043 0301 	orr.w	r3, r3, #1
 80043d4:	81a3      	strh	r3, [r4, #12]
 80043d6:	89a3      	ldrh	r3, [r4, #12]
 80043d8:	431d      	orrs	r5, r3
 80043da:	81a5      	strh	r5, [r4, #12]
 80043dc:	e7cf      	b.n	800437e <__smakebuf_r+0x18>
	...

080043e0 <_fstat_r>:
 80043e0:	b538      	push	{r3, r4, r5, lr}
 80043e2:	2300      	movs	r3, #0
 80043e4:	4d06      	ldr	r5, [pc, #24]	@ (8004400 <_fstat_r+0x20>)
 80043e6:	4604      	mov	r4, r0
 80043e8:	4608      	mov	r0, r1
 80043ea:	4611      	mov	r1, r2
 80043ec:	602b      	str	r3, [r5, #0]
 80043ee:	f7fd fb63 	bl	8001ab8 <_fstat>
 80043f2:	1c43      	adds	r3, r0, #1
 80043f4:	d102      	bne.n	80043fc <_fstat_r+0x1c>
 80043f6:	682b      	ldr	r3, [r5, #0]
 80043f8:	b103      	cbz	r3, 80043fc <_fstat_r+0x1c>
 80043fa:	6023      	str	r3, [r4, #0]
 80043fc:	bd38      	pop	{r3, r4, r5, pc}
 80043fe:	bf00      	nop
 8004400:	20000564 	.word	0x20000564

08004404 <_isatty_r>:
 8004404:	b538      	push	{r3, r4, r5, lr}
 8004406:	2300      	movs	r3, #0
 8004408:	4d05      	ldr	r5, [pc, #20]	@ (8004420 <_isatty_r+0x1c>)
 800440a:	4604      	mov	r4, r0
 800440c:	4608      	mov	r0, r1
 800440e:	602b      	str	r3, [r5, #0]
 8004410:	f7fd fb61 	bl	8001ad6 <_isatty>
 8004414:	1c43      	adds	r3, r0, #1
 8004416:	d102      	bne.n	800441e <_isatty_r+0x1a>
 8004418:	682b      	ldr	r3, [r5, #0]
 800441a:	b103      	cbz	r3, 800441e <_isatty_r+0x1a>
 800441c:	6023      	str	r3, [r4, #0]
 800441e:	bd38      	pop	{r3, r4, r5, pc}
 8004420:	20000564 	.word	0x20000564

08004424 <_sbrk_r>:
 8004424:	b538      	push	{r3, r4, r5, lr}
 8004426:	2300      	movs	r3, #0
 8004428:	4d05      	ldr	r5, [pc, #20]	@ (8004440 <_sbrk_r+0x1c>)
 800442a:	4604      	mov	r4, r0
 800442c:	4608      	mov	r0, r1
 800442e:	602b      	str	r3, [r5, #0]
 8004430:	f7fd fb68 	bl	8001b04 <_sbrk>
 8004434:	1c43      	adds	r3, r0, #1
 8004436:	d102      	bne.n	800443e <_sbrk_r+0x1a>
 8004438:	682b      	ldr	r3, [r5, #0]
 800443a:	b103      	cbz	r3, 800443e <_sbrk_r+0x1a>
 800443c:	6023      	str	r3, [r4, #0]
 800443e:	bd38      	pop	{r3, r4, r5, pc}
 8004440:	20000564 	.word	0x20000564

08004444 <memcpy>:
 8004444:	440a      	add	r2, r1
 8004446:	4291      	cmp	r1, r2
 8004448:	f100 33ff 	add.w	r3, r0, #4294967295
 800444c:	d100      	bne.n	8004450 <memcpy+0xc>
 800444e:	4770      	bx	lr
 8004450:	b510      	push	{r4, lr}
 8004452:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004456:	4291      	cmp	r1, r2
 8004458:	f803 4f01 	strb.w	r4, [r3, #1]!
 800445c:	d1f9      	bne.n	8004452 <memcpy+0xe>
 800445e:	bd10      	pop	{r4, pc}

08004460 <__assert_func>:
 8004460:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004462:	4614      	mov	r4, r2
 8004464:	461a      	mov	r2, r3
 8004466:	4b09      	ldr	r3, [pc, #36]	@ (800448c <__assert_func+0x2c>)
 8004468:	4605      	mov	r5, r0
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	68d8      	ldr	r0, [r3, #12]
 800446e:	b954      	cbnz	r4, 8004486 <__assert_func+0x26>
 8004470:	4b07      	ldr	r3, [pc, #28]	@ (8004490 <__assert_func+0x30>)
 8004472:	461c      	mov	r4, r3
 8004474:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004478:	9100      	str	r1, [sp, #0]
 800447a:	462b      	mov	r3, r5
 800447c:	4905      	ldr	r1, [pc, #20]	@ (8004494 <__assert_func+0x34>)
 800447e:	f000 f841 	bl	8004504 <fiprintf>
 8004482:	f000 f851 	bl	8004528 <abort>
 8004486:	4b04      	ldr	r3, [pc, #16]	@ (8004498 <__assert_func+0x38>)
 8004488:	e7f4      	b.n	8004474 <__assert_func+0x14>
 800448a:	bf00      	nop
 800448c:	20000010 	.word	0x20000010
 8004490:	080048ee 	.word	0x080048ee
 8004494:	080048c0 	.word	0x080048c0
 8004498:	080048b3 	.word	0x080048b3

0800449c <_calloc_r>:
 800449c:	b570      	push	{r4, r5, r6, lr}
 800449e:	fba1 5402 	umull	r5, r4, r1, r2
 80044a2:	b93c      	cbnz	r4, 80044b4 <_calloc_r+0x18>
 80044a4:	4629      	mov	r1, r5
 80044a6:	f7ff f945 	bl	8003734 <_malloc_r>
 80044aa:	4606      	mov	r6, r0
 80044ac:	b928      	cbnz	r0, 80044ba <_calloc_r+0x1e>
 80044ae:	2600      	movs	r6, #0
 80044b0:	4630      	mov	r0, r6
 80044b2:	bd70      	pop	{r4, r5, r6, pc}
 80044b4:	220c      	movs	r2, #12
 80044b6:	6002      	str	r2, [r0, #0]
 80044b8:	e7f9      	b.n	80044ae <_calloc_r+0x12>
 80044ba:	462a      	mov	r2, r5
 80044bc:	4621      	mov	r1, r4
 80044be:	f7fe f9e7 	bl	8002890 <memset>
 80044c2:	e7f5      	b.n	80044b0 <_calloc_r+0x14>

080044c4 <__ascii_mbtowc>:
 80044c4:	b082      	sub	sp, #8
 80044c6:	b901      	cbnz	r1, 80044ca <__ascii_mbtowc+0x6>
 80044c8:	a901      	add	r1, sp, #4
 80044ca:	b142      	cbz	r2, 80044de <__ascii_mbtowc+0x1a>
 80044cc:	b14b      	cbz	r3, 80044e2 <__ascii_mbtowc+0x1e>
 80044ce:	7813      	ldrb	r3, [r2, #0]
 80044d0:	600b      	str	r3, [r1, #0]
 80044d2:	7812      	ldrb	r2, [r2, #0]
 80044d4:	1e10      	subs	r0, r2, #0
 80044d6:	bf18      	it	ne
 80044d8:	2001      	movne	r0, #1
 80044da:	b002      	add	sp, #8
 80044dc:	4770      	bx	lr
 80044de:	4610      	mov	r0, r2
 80044e0:	e7fb      	b.n	80044da <__ascii_mbtowc+0x16>
 80044e2:	f06f 0001 	mvn.w	r0, #1
 80044e6:	e7f8      	b.n	80044da <__ascii_mbtowc+0x16>

080044e8 <__ascii_wctomb>:
 80044e8:	4603      	mov	r3, r0
 80044ea:	4608      	mov	r0, r1
 80044ec:	b141      	cbz	r1, 8004500 <__ascii_wctomb+0x18>
 80044ee:	2aff      	cmp	r2, #255	@ 0xff
 80044f0:	d904      	bls.n	80044fc <__ascii_wctomb+0x14>
 80044f2:	228a      	movs	r2, #138	@ 0x8a
 80044f4:	f04f 30ff 	mov.w	r0, #4294967295
 80044f8:	601a      	str	r2, [r3, #0]
 80044fa:	4770      	bx	lr
 80044fc:	2001      	movs	r0, #1
 80044fe:	700a      	strb	r2, [r1, #0]
 8004500:	4770      	bx	lr
	...

08004504 <fiprintf>:
 8004504:	b40e      	push	{r1, r2, r3}
 8004506:	b503      	push	{r0, r1, lr}
 8004508:	4601      	mov	r1, r0
 800450a:	ab03      	add	r3, sp, #12
 800450c:	4805      	ldr	r0, [pc, #20]	@ (8004524 <fiprintf+0x20>)
 800450e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004512:	6800      	ldr	r0, [r0, #0]
 8004514:	9301      	str	r3, [sp, #4]
 8004516:	f7ff fd41 	bl	8003f9c <_vfiprintf_r>
 800451a:	b002      	add	sp, #8
 800451c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004520:	b003      	add	sp, #12
 8004522:	4770      	bx	lr
 8004524:	20000010 	.word	0x20000010

08004528 <abort>:
 8004528:	2006      	movs	r0, #6
 800452a:	b508      	push	{r3, lr}
 800452c:	f000 f82c 	bl	8004588 <raise>
 8004530:	2001      	movs	r0, #1
 8004532:	f7fd fa72 	bl	8001a1a <_exit>

08004536 <_raise_r>:
 8004536:	291f      	cmp	r1, #31
 8004538:	b538      	push	{r3, r4, r5, lr}
 800453a:	4605      	mov	r5, r0
 800453c:	460c      	mov	r4, r1
 800453e:	d904      	bls.n	800454a <_raise_r+0x14>
 8004540:	2316      	movs	r3, #22
 8004542:	6003      	str	r3, [r0, #0]
 8004544:	f04f 30ff 	mov.w	r0, #4294967295
 8004548:	bd38      	pop	{r3, r4, r5, pc}
 800454a:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800454c:	b112      	cbz	r2, 8004554 <_raise_r+0x1e>
 800454e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004552:	b94b      	cbnz	r3, 8004568 <_raise_r+0x32>
 8004554:	4628      	mov	r0, r5
 8004556:	f000 f831 	bl	80045bc <_getpid_r>
 800455a:	4622      	mov	r2, r4
 800455c:	4601      	mov	r1, r0
 800455e:	4628      	mov	r0, r5
 8004560:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004564:	f000 b818 	b.w	8004598 <_kill_r>
 8004568:	2b01      	cmp	r3, #1
 800456a:	d00a      	beq.n	8004582 <_raise_r+0x4c>
 800456c:	1c59      	adds	r1, r3, #1
 800456e:	d103      	bne.n	8004578 <_raise_r+0x42>
 8004570:	2316      	movs	r3, #22
 8004572:	6003      	str	r3, [r0, #0]
 8004574:	2001      	movs	r0, #1
 8004576:	e7e7      	b.n	8004548 <_raise_r+0x12>
 8004578:	2100      	movs	r1, #0
 800457a:	4620      	mov	r0, r4
 800457c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004580:	4798      	blx	r3
 8004582:	2000      	movs	r0, #0
 8004584:	e7e0      	b.n	8004548 <_raise_r+0x12>
	...

08004588 <raise>:
 8004588:	4b02      	ldr	r3, [pc, #8]	@ (8004594 <raise+0xc>)
 800458a:	4601      	mov	r1, r0
 800458c:	6818      	ldr	r0, [r3, #0]
 800458e:	f7ff bfd2 	b.w	8004536 <_raise_r>
 8004592:	bf00      	nop
 8004594:	20000010 	.word	0x20000010

08004598 <_kill_r>:
 8004598:	b538      	push	{r3, r4, r5, lr}
 800459a:	2300      	movs	r3, #0
 800459c:	4d06      	ldr	r5, [pc, #24]	@ (80045b8 <_kill_r+0x20>)
 800459e:	4604      	mov	r4, r0
 80045a0:	4608      	mov	r0, r1
 80045a2:	4611      	mov	r1, r2
 80045a4:	602b      	str	r3, [r5, #0]
 80045a6:	f7fd fa28 	bl	80019fa <_kill>
 80045aa:	1c43      	adds	r3, r0, #1
 80045ac:	d102      	bne.n	80045b4 <_kill_r+0x1c>
 80045ae:	682b      	ldr	r3, [r5, #0]
 80045b0:	b103      	cbz	r3, 80045b4 <_kill_r+0x1c>
 80045b2:	6023      	str	r3, [r4, #0]
 80045b4:	bd38      	pop	{r3, r4, r5, pc}
 80045b6:	bf00      	nop
 80045b8:	20000564 	.word	0x20000564

080045bc <_getpid_r>:
 80045bc:	f7fd ba16 	b.w	80019ec <_getpid>

080045c0 <_init>:
 80045c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045c2:	bf00      	nop
 80045c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045c6:	bc08      	pop	{r3}
 80045c8:	469e      	mov	lr, r3
 80045ca:	4770      	bx	lr

080045cc <_fini>:
 80045cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045ce:	bf00      	nop
 80045d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045d2:	bc08      	pop	{r3}
 80045d4:	469e      	mov	lr, r3
 80045d6:	4770      	bx	lr
